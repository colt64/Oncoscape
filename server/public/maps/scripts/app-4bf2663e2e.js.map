{"version":3,"sources":["scripts/app-4bf2663e2e.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","getTools","explore","tool","toolmenu","ToolMenuController","timelines","TimelinesController","osHistory","$scope","$window","$document","moment","d3","saveSelected","selectedIds","d3Bars","selectAll","map","p","__data__","id","length","addPatientSelection","optCohortMode","name","draw","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","selShow","selPatient","selEvent","selFields","optCohortModes","timescaleunit","timescales","timescale","features","feature","filters","filter","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","getPatientSelection","ids","zoomed","event","shiftKey","scale","translate","ch","rh","patients","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","brushing","onBrushStart","sourceEvent","target","clear","call","onBrush","extent","lower","floor","upper","each","d","i","firstChild","classed","onBrushEnd","hRow","hChart","wChart","innerWidth","processData","bounds","nice","rows","data","exit","remove","enter","on","transform","selected","indexOf","e","cols","filteredEvents","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","daysToUnit","tlScale","svg","axis","orient","ticks","tickFormat","pow","behavior","processedData","patient","dead","hasOwnProperty","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","start","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","v","__color","processFeatureData","processPatientData","key","val","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","duration","asDays","payload","pts","eventTypes","Status","Dead","unshift","$watchGroup","$watch","onPatientSelectionChange","add","selection","resize","updateEventColor","item","survival","SurvivalController","getPatientHistoryTable","tbl","getCalculatedSurvivalCurves","r","login","SubnavController","toolsClick","cohortClick","toggleFilter","PlsrController","$sce","_","addGeneSelection","node","toUpperCase","setSelected","xScale","yScale","xMax","yMax","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","onGeneSelectionChange","setScale","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","rawData","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","addEventListener","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","search","getCalculatedPCA","pathways","PathwaysController","cytoscape","skipSave","csChart","$","ele","startBatch","deselect","endBatch","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","linkTitle","links","center","term","len","nodes","unselect","substr","query","result","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","osSound","beep","_beep","play","Audio","service","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","fromJson","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","$http","queryString","req","table","encodeURIComponent","JSON","stringify","console","method","signals","_geneSelections","desc","_geneIndex","_patientSelections","_patientIndex","_onPatientAdd","Signal","_onPatientSelectionChange","_onGeneAdd","_onGeneSelectionChange","setGeneSelection","dispatch","getGeneSelections","difference","time","format","getGeneSelectionLast","getGeneSelectionNext","setPatientSelection","getPatientSelections","getPatientSelectionLast","getPatientSelectionSecondLast","getPatientSelectionNext","removeListeners","api","onPatientAdd","onGeneAdd","osSocket","osHttp","_dataSource","onDataSource","convertDatasetNameFromRToMongo","userApi","onLogin","onLogout","_user","password","authenticated","token","datasets","_domains","logout","user","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","route","img","beta","copy","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getPathway","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","getGeneSetTest","getGeneSetScore","Group1","Group2","group1","group2","geneset","oncoprint","OncoprintController","displayOncoprint","msg","empty","errorMessage","parse","setState","processed_data","onc","Oncoprint","create","suppressRendering","when","data_gene_map","obj","gene","track_id","data_gene","Date","now","addTrack","label","removable","setRuleSet","GENETIC_ALTERATION","useSameRuleSet","setTrackData","releaseRendering","click","toggleCellPadding","setZoom","allOncoLegendBlocks","allOncoLegendLabels","j","appendChild","elControl","elInstructions","elLegend","selectedPatientIds","selectedGeneIds","geneAndPatients","config","self","getTrackId","utils","makeIdCounter","id_order","inverted_id_order","visible_id_order","visible_inverted_id_order","hidden_ids","track_groups","track_group_sort_order","sort_direction","tracks","sort_config","type","cell_padding_on","true_cell_width","cell_width","zoomed_cell_width","trigger","SET_CELL_PADDING","getCellPadding","ceil","cell_padding","getZoom","clamp","updateZoomedCellWidth","updateZoom","SET_ZOOM","increaseZoom","decreaseZoom","getFullCellWidth","getZoomedCellWidth","getCellHeight","cell_height","getTrackHeight","track_height","getTrackPadding","track_padding","getFilteredIdOrder","data_filter_fn","track_ids","getTracks","getTrackDatum","getIdOrder","getInvertedIdOrder","getVisibleIdOrder","getVisibleInvertedIdOrder","updateVisibleIdOrder","invert_array","SET_VISIBLE_ID_ORDER","setIdOrder","slice","SET_ID_ORDER","hideIds","clear_existing","showIds","getTopmostTrack","setTrackSortComparator","cmp","sort_cmp","getTrackSortComparator","getTrackSortDirection","setTrackSortDirection","dir","setTrackGroupSortOrder","order","getTrackGroupSortOrder","getTrackSortOrder","ret","getTrackGroups","group_id","setSortConfig","sortById","sortBy","identity","reverse","sortByTrack","track_id_list","cmp_list","lexicographically_ordered_cmp","id1","id2","cmp_result","_len","d1","d2","d1_undef","d2_undef","isFinite","stableSort","group","ifndef","extend","defaultTrackConfig","id_data_map","ADD_TRACK","removeTrack","track","track_group","getContainingTrackGroup","old_position","splice","REMOVE_TRACK","reference","flatten","find","grp","moveTrack","new_position","moved_tracks","MOVE_TRACK","getTrackLabel","getTrackTooltip","tooltip","setTrackTooltip","getTrackData","id_accessor","getTrackDatumIdAccessor","current_id_order","current_inverted_id_order","SET_TRACK_DATA","datum_id","getTrackDatumDataKey","datum_data_key","getTrackDatumIdKey","datum_id_key","setTrackDatumIdKey","isTrackRemovable","isTrackSortDirectionChangable","sort_direction_changable","clearData","oncoprint_events","oncoprint_utils","RuleSet","oncoprint_RuleSet","defaultOncoprintConfig","legend","hiddenOncoprintConfig","pre_track_padding","undefined","CATEGORICAL_COLOR","GRADIENT_COLOR","BAR_CHART","container_selector_string","OncoprintSVGRenderer","label_font","onc_dev","ren_dev","params","target_track_id","source_track_id","toSVG","setLegendVisible","visible","FINISHED_RENDERING","CONTENT_AREA_MOUSEENTER","CONTENT_AREA_MOUSELEAVE","OncoprintRenderer","track_cell_selections","track_cells","active_rule_set_rules","toolbar_container","label_div","label_drag_div","label_container","cell_container","cell_container_node","cell_div","legend_table","document_fragment","percent_altered_max_width","textWidth","getLabelFont","altered_data_percentage","cell_tooltip_html","content_area","LABEL_AREA_CONTAINER_CLASS","CELL_AREA_CONTAINER_CLASS","cell_column_highlight","COLUMN_HIGHLIGHT_CLASS","getCellAreaHeight","CELL_AREA_CLASS","cell_mouseover_div","calculateVisibleInterval","clipAndPositionCells","mouseMove","prev_track","prev_cell_index","prev_dom","column_highlight_timeout","highlighted_col_cells","qtip","my","at","viewport","window","classes","CELL_QTIP_CLASS","border","fixed","hover_cell","dom","finish","unhover_cell","clear_and_unhover","clearTimeout","cell","margin","mouseX","mouseY","track_cell_tops","getTrackCellTops","closest_track_dist","POSITIVE_INFINITY","closest_track","top","dist","cell_unit","cell_index","cell_id","track_cell","setTimeout","cells","hover","getTrackButtonCSSClass","stop","fadeTo","fadeOut","rule_sets","removeTrackCells","removeTrackLabels","removeTrackButtons","computeTrackCellTops","renderTrackLabels","renderTrackButtons","resizeLabelDiv","resizeCellDiv","drawCells","computeAlteredDataPercentage","renderLegend","resizeCells","LABEL_DRAGGING_CLASS","prototype","rule_set","getRuleSet","alteredData","num_altered","percent_altered","getAlteredDataPercentage","cell_ctr_rect","getBoundingClientRect","visible_interval","scrollLeft","right","left","getVisibleInterval","cellRenderTarget","document","createDocumentFragment","ready","getRuleSetId","getLabelDiv","getLabelDragDiv","getCellAreaWidth","getLabelAreaWidth","getLabelAreaHeight","div","getTrackLabelCSSSelector","render_whole_labels","label_tops","getTrackLabelTops","label_area_width","percent_altered_left","label_top","label_text","getTrackLabelCSSClass","disp_label_text","max_label_length","span","dragLabel","button_class","new_btn","imgs","descs","current_sort_setting","new_width","getCellCSSClass","getTrackCellCSSClass","drawTrackCells","fragment","cell_class","track_cell_class","bound_svg","apply","force","display_all","interval_width","interval_number","cell_x","getCellXArray","id_key","prev_interval_number","new_x","disp","new_disp","isNaN","exclude_from_legend","include_all","rendered","rule_set_id","active_rules","track_map","tr","label_header","getLegendLabel","legend_body_td","legend_div","getLegendDiv","d3SelectChildren","first_track","last_track","all_track_tops","track_tops","group_track_tops","label_area_height","drag_bounds","getRenderedTrackHeight","$label_drag_div","new_pos","moveHandler","stopPropagation","preventDefault","mouse_y","sortedIndex","mouseUpHandler","off","one","full_labels","root","offset","createElementNS","text_elt","font","weight","size","pos","cell_elt","cell_rect","cell_dim","g","appendD3SVGElement","outline_styles","trim","tagName","toLowerCase","elt","drawOncoprint","_state","split","MetadataController","colnames","dtTable","dataTable","paging","markers","MarkersController","cyChart","initializeViewModel","optCtxGeneShow","optCtxPatientShow","loadData","styles","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","initializeCommands","initializeHistory","chart","searchGene","geneSearchResult","matches","found","searchGeneResult","searchPatient","searchPatientResult","optInteractiveMode","optInteractiveModes","optCommandPatient","degmap","neighborhood","batchData","cbioDsName","n","join","open","optCommandGene","optCommands","zoomReset","zoomFit","showPatientsInCommon","geneNodes","geneNames","patientNodes","patientGeneNames","geneName","showGenesInCommon","patientGenes","showPatientEdges","hidePatientEdges","showGeneEdges","hideGeneEdges","selectConnectedGenes","selectConnectedPatients","selectPatients","selectGenes","deselectPatients","deselectGenes","invertPatientSelection","_private","invertGeneSelection","invertAll","deselectAll","hideAllEdges","optPatientLayouts","optPatientLayout","optNodeColors","optNodeColor","optEdgeColors","legandNodes","legandPatient","legandChromosomes","optCohortPatients","optCohortPatient","optCohortGenes","optCohortGene","saveSelectedGenes","saveSelectedPatients","setSelectedGenes","setSelectedPatients","$on","saveGenes","savePatients","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","geneOver","geneOut","geneClick","geneCtx","patientOver","patientOut","patientClick","patientCtx","removeAll","over","out","behaviors","showGeneCtxMenu","oe","originalEvent","elMenu","css","showPatientCtxMenu","showPatientInfo","patientChromosomes","mutation","neighbourhood","cnl1","cnl2","cng1","cng2","mutations","hidePatientInfo","showDegreeOne","border-opacity","hideDegreeOne","showDegreeTwo","hideDegreeTwo","states","register","unregister","edge","ui","next","colors","state","colorMap","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","edges","sizeEle","updateEdge","stateName","sizeBdr","degree","sizeLbl","calculateSelections","selectedNodes","sums","cnt","gender","age","s","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","initViewState","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","initDataTable","columns","defaultContent","$fields","f","help","HelpController","videos","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","genesettest","GenesettestController","cohort1","cohort2","message","optCohort1","optCohort2","calculateGeneSetScore","drawHeatMap2","pt","expressionData","highcharts","marginTop","marginBottom","plotBorderWidth","categories","lineWidth","lineColor","colorAxis","minColor","maxColor","verticalAlign","symbolHeight","formatter","series","point","borderWidth","summary","analysisData","footer","FooterController","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","DataExplorerController","dataSources","dataDiseases","dataDisease","dataTables","dataFields","dataField","bar","bottom","showValues","valueFormat","axisLabel","axisLabelDistance","chartOptions","toolTipContentFunction","graph","xFunction","yFunction","diseases","tables","collection","cohorts","CohortsController","selections","close","setSelection","isDragable","draggable","keypress","ctrlKey","keyCode","cohortBuilder","CohortBuilderController","chain","pluck","uniq","where","disease","created","records","ApiExplorerController","getTime","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","toState","fn","DataTable","ext","run","routerConfig","$stateProvider","$urlRouterProvider","template","authenticate","otherwise","constant","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-4bf2663e2e.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'ui.bootstrap.contextMenu',\n            'nvd3',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osHistory, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.filters;\n                vm.filter;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[0];\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                selectedIds = d3Bars.selectAll(\".timeline-selected\")[0].map( function (p) { return p.__data__.id; }  )\n                if (selectedIds.length==0) selectedIds = d3Bars.selectAll()[0].map( function (p) { return p.__data__.id; }  )\n                osHistory.addPatientSelection(\"Timelines\", \"Manual Selection\",\n                    selectedIds\n                );\n                if (vm.optCohortMode.name==\"Filter\") draw();\n            }\n\n            var zoom;\n            var zoomed = function(){\n                if (d3.event.shiftKey) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                  brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var brushing = false;\n            var onBrushStart = function(){\n                if (!d3.event.sourceEvent.shiftKey) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }else{\n                    brushing = true;\n                }\n            }\n            var onBrush = function(){\n                if (!brushing) return;\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        d3.select(this.firstChild).classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                    });\n            }\n            var onBrushEnd = function(){\n                if (!brushing) return;\n                brushing = false;\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);    \n                saveSelected();\n            }\n\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]).nice();\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50).nice();\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                        \n                    // rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row',\n                            'width': 0,\n                            'height': hRow\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && selectedIds.length>0){\n                        rows\n                            .each( function(d){\n                                var selected = (selectedIds.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n                    var daysToUnit = function(d){\n                        if (Math.abs(d)==0) return d;\n                        if (Math.abs(d)<30) return d+\" Days\";\n                        if (Math.abs(d)<360) return Math.round( (d/30.4) * 10 ) / 10 + \" Months\";\n                        return Math.round( (d/365) * 10 ) / 10 + \" Years\";\n                    }\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(8);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return daysToUnit(Math.round((d<0 ? -1 : 1) * (Math.pow(2, (Math.abs(d)))-1) *100)/100);\n                        });\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return daysToUnit(d);\n                        });\n                    }\n\n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"class\": \"timeline-axis\",\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        if (vm.filter.name==\"Only Alive\" && patient.dead) return false;\n                        if (vm.filter.name==\"Only Dead\" && !patient.dead) return false;\n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter && this.ids){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':selectedIds});\n\n                    // Sort Patients On Align Property    \n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            if (a.dead==b.dead){\n                                return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                            }else{\n                                return (a.dead) ? 1 : -1;\n                            }\n                            \n                        }, sort);\n                    }else{\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                        }, sort);\n                    }\n\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients, dead){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                            if (d.name==\"Status\"){\n                                p.dead = (dead.indexOf(d.id)!=-1);\n                            }\n                            \n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts, response.payload.eventTypes.Status.status.Dead);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        vm.filters = [\n                            {name:'Alive + Dead'},\n                            {name:'Only Alive'},\n                            {name:'Only Dead'}\n                        ];\n                        vm.filter = vm.filters[0];\n\n\n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale', 'vm.filter'], draw);\n                        angular.element($window).bind('resize', draw);\n                        $scope.$watch(\"vm.optCohortMode\", draw );   // Triggers Inital Draw\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            draw();\n                        });\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, osHistory, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n\n            // Set Dataset \n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                // If No Patients Are Selected, Fetch All Patients\n                if (osHistory.getPatientSelection()==null){\n                    osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                        draw(response.payload.tbl.map( function (d) { return d[0]; }));\n                    });\n                }else{\n                    draw(osHistory.getPatientSelection().ids);\n                }\n            });\n\n            // Register History Component\n            osHistory.onPatientSelectionChange.add(function(selection){\n                draw(selection.ids)\n            });\n\n            // Draw\n            var draw = function(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                    angular.element(\"#survival-img\").attr('src',r.payload);\n                    osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;            \n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                var selected  = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ \n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n                \n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400; \n                    if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                        width += 300;\n                    } \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.search = \"\";\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".pca-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addPatientSelection(\"PCA\", \"Manual Selection\",\n                    d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node) {\n                        return node.__data__.id.toUpperCase();\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length==0) {\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[0].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSets.unshift(\"All\");\n                        vm.geneSet = vm.geneSets[0];\n\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            vm.search = \"\";\n                            setSelected();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA((vm.geneSet==\"All\") ? null : vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                \n                width = $window.innerWidth - 400;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    width += 300;\n                } \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                        saveSelected();\n                    });\n\n                d3Chart.call(brush);\n\n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) {\n                    return d;\n                });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\": width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n                setSelected();\n            }\n\n            vm.resize = function() {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osHistory, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            \n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            // History Integration\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            \n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_pathways\").then(function(result){\n                markersNetwork = result.data[0];\n            \n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('select', 'node', _.debounce(saveSelected, 300))\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            $scope.$apply(function() {\n                                 vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            /* Open Multiple Windows - Hamid Recommended We Remove\n                            links =[\n                                { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                                { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                                { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                                { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                            ];\n                            $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                            $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n                            */\n                            angular.element('#gbm-webpage').modal();\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid );\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n                    // Register History Component\n                    osHistory.onGeneSelectionChange.add(function(selection){\n                        selectedIds = selection.ids;\n                        setSelected();\n                    });\n                    setSelected();\n                    osApi.setBusy(false);\n                });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n        function beep() { _beep.play(); }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \":\" + (($location.port() == \"3002\") ? 80 : $location.port()) + '/api/'\n\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/?q=\"+encodeURIComponent(JSON.stringify(req.query));\n             console.log(query);\n             return query;\n         };\n\n         var query = function(req) {\n            return $http({\n                 method: 'GET',\n                 url: queryString(req)\n             });\n         };\n\n         // Return Object\n         return {\n            queryString: queryString,\n            query: query\n         };\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osHistory', osHistory);\n\n    /** @ngInject */\n    function osHistory(moment, signals, osSound, _) {\n\n        //var _historyMax = 100;\n        var _geneSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _geneIndex = 0;\n        var _patientSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _patientIndex = 0;\n        var _onPatientAdd = new signals.Signal();\n        var _onPatientSelectionChange = new signals.Signal();\n        var _onGeneAdd = new signals.Signal();\n        var _onGeneSelectionChange = new signals.Signal();\n       \n        /* Gene */\n        var setGeneSelection = function(selection){\n            var index = _geneSelections.indexOf(selection);\n            if (index>=0){\n                _geneIndex = index\n                _onGeneSelectionChange.dispatch(getGeneSelection())\n            }\n        };\n        var getGeneSelections = function(){\n            return _geneSelections;\n        };\n        var getGeneSelection = function(){\n            if (_geneIndex<0) _geneIndex = 0;\n            if (_geneIndex>=_geneSelections.length) _geneIndex = _geneSelections.length-1;\n            return _geneSelections[_geneIndex];\n        };\n        var addGeneSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getGeneSelection().ids.length){\n                if (_.difference(ids, getGeneSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _geneSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _geneIndex += _geneSelections.length-1;\n            _onGeneAdd.dispatch(getGeneSelection())\n        };\n        var getGeneSelectionLast = function(){\n            _geneIndex -= 1;\n            if (_geneIndex<0) { \n                osSound.beep();\n                _geneIndex = 0; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getGeneSelectionNext = function(){\n            _geneIndex += 1;\n            if (_geneIndex==_geneSelections.length) { \n                osSound.beep();\n                _geneIndex = _geneSelections.length-1; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n        /* Patient */\n        var setPatientSelection = function(selection){\n            var index = _patientSelections.indexOf(selection);\n            if (index>=0){\n                _patientIndex = index\n                _onPatientSelectionChange.dispatch(getPatientSelection())\n            }\n        };\n        var getPatientSelections = function(){\n            return _patientSelections;\n        };\n        var getPatientSelection = function(){\n            if (_patientIndex<0) _patientIndex = 0;\n            if (_patientIndex>=_patientSelections.length) _patientIndex = _patientSelections.length-1;\n            return _patientSelections[_patientIndex];\n        };\n        var addPatientSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getPatientSelection().ids.length){\n                if (_.difference(ids, getPatientSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _patientSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _patientIndex = _patientSelections.length-1;\n            _onPatientAdd.dispatch(getPatientSelection());\n        };\n        var getPatientSelectionLast = function(){\n            _patientIndex -= 1;\n            if (_patientIndex<0) { \n                osSound.beep();\n                _patientIndex = 0; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getPatientSelectionSecondLast = function(){\n            /*\n            var i = _patientSelections.indexOf(_patientSelection) - 2;\n            if (i<1){\n                osSound.beep();\n                return null;\n            } \n            _patientSelection = _patientSelections[i];\n            return _patientSelection;\n            */\n        };\n        var getPatientSelectionNext = function(){\n            _patientIndex += 1;\n            if (_patientIndex==_patientSelections.length) { \n                osSound.beep();\n                _patientIndex = _patientSelections.length-1; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n\n        var removeListeners = function(){\n          \n        };\n        var clear = function(){\n           \n        };\n\n\n        var api = {\n            onPatientAdd: _onPatientAdd,\n            onPatientSelectionChange: _onPatientSelectionChange,\n            onGeneAdd: _onGeneAdd,\n            onGeneSelectionChange: _onGeneSelectionChange,\n\n            addGeneSelection: addGeneSelection,\n            setGeneSelection: setGeneSelection,\n            getGeneSelection: getGeneSelection,\n            getGeneSelections: getGeneSelections,\n            getGeneSelectionLast: getGeneSelectionLast,\n            getGeneSelectionNext: getGeneSelectionNext,\n\n            addPatientSelection: addPatientSelection,\n            setPatientSelection: setPatientSelection,\n            getPatientSelection: getPatientSelection,\n            getPatientSelections: getPatientSelections,\n            getPatientSelectionNext: getPatientSelectionNext,\n            getPatientSelectionLast: getPatientSelectionLast,\n            getPatientSelectionSecondLast: getPatientSelectionSecondLast,\n            \n            removeListeners: removeListeners,\n            clear: clear\n        };\n\n        return api;\n    }\n})();\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, osHttp, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n        // Temp Method\n        function convertDatasetNameFromRToMongo(name){\n\n            return (name===\"TCGAbrain\") ? \"tcga_gbm\" :\n                 (name===\"TCGAbrca\")  ? \"tcga_brca\"  :\n                \"tcga_brca\";\n\n\n        }\n\n        \n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        function getTools(){\n            return [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                beta: true,\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                beta: true,\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                beta: true,\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                beta: true,\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                beta: true,\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                beta: true,\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                beta: true,\n                copy: ''\n            }, {\n                name: 'Oncoprint',\n                route: 'oncoprint',\n                img: 'history.png',\n                beta: true,\n                copy: ''\n            }, {\n                name: 'Geneset Test',\n                route: 'genesettest',\n                img: 'history.png',\n                beta: true,\n            }, {\n                name: 'Data Explorer',\n                route: 'dataexplorer',\n                img: 'dataexplorer.png',\n                beta: true,\n                copy: ''\n            },{\n                name: 'Cohort Builder',\n                route: 'cohortbuilder',\n                img: 'dataexplorer.png',\n                beta: true,\n                copy: ''\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                beta: true,\n                copy: ''\n            }];\n        }\n        \n        function queryString(table, query){\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        }\n        function query(table, query){\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        }\n\n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n            \n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n        function getGeneSetTest(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createGeneSetTest\",\n                payload: payload\n            });\n        }\n        function getGeneSetScore(Group1, Group2, geneSet) {\n            return osSocket.request({\n                cmd: \"geneSetScoreTest\",\n                payload: {\n                    group1: Group1,\n                    group2: Group2, \n                    geneset: geneSet\n                }\n            });\n        }\n\n        return {\n            convertDatasetNameFromRToMongo: convertDatasetNameFromRToMongo,\n            query: query,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getTools: getTools,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint,\n            getGeneSetTest: getGeneSetTest,\n            getGeneSetScore: getGeneSetScore\n        }\n    }\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elControl = angular.element(\"#oncoprintControlsDiv\");\n            var elInstructions = angular.element(\"#oncoprintInstructions\");\n            var elErrors = angular.element(\"#oncoprintErrorSection\");\n            var elLegend = angular.element(\"#legend\");\n            var d3Chart = d3.select(\"#onc\");\n            \n            // History Integration\n            var selectedPatientIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            var selectedGeneIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            \n            \n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneAndPatients = selectedPatientIds + \",\" + selectedGeneIds;\n            vm.errorMessage;\n\n            \n\n            var Oncoprint = (function() {\n              var events = oncoprint_events;\n              var utils = oncoprint_utils;\n              var RuleSet = oncoprint_RuleSet;\n\n              var defaultOncoprintConfig = {\n                cell_width: 6,\n                cell_padding: 2.5,\n                legend: true,\n              };\n\n              var hiddenOncoprintConfig = {\n                pre_track_padding: 0,\n              };\n\n              var defaultTrackConfig = {\n                label: 'Gene',\n                datum_id_key: 'patient',\n                cell_height: 23,\n                track_height: 20,\n                track_padding: 5,\n                sort_cmp: undefined,\n                tooltip: function(d) {\n                  return d['patient'];\n                },\n                removable: false,\n                sort_direction_changable: false\n              }; \n\n\n\n              function Oncoprint(config) {\n                var self = this;\n                var getTrackId = utils.makeIdCounter();\n\n                self.config = config;\n\n                self.id_order = [];\n                self.inverted_id_order = {};\n                self.visible_id_order = [];\n                self.visible_inverted_id_order = {};\n                self.hidden_ids = {};\n                self.track_groups = [[],[]];\n                self.track_group_sort_order = [0,1];\n                self.sort_direction = {};\n                self.tracks = {};\n                self.sort_config = {type: 'track'};\n\n                self.cell_padding_on = true;\n                self.true_cell_width = config.cell_width;\n\n                self.zoomed_cell_width = self.true_cell_width;\n                self.zoom = 1;\n\n                // Cell Padding\n                self.toggleCellPadding = function() {\n                  self.cell_padding_on = !self.cell_padding_on;\n                  $(self).trigger(events.SET_CELL_PADDING);\n                };\n                self.getCellPadding = function() {\n                  return Math.ceil(self.config.cell_padding*self.getZoom())*(+self.cell_padding_on);\n                };\n\n                // Zoom\n                self.getZoom = function() {\n                  return self.zoom;\n                };\n                self.setZoom = function(z) {\n                  self.zoom = utils.clamp(z, 0, 1);\n                  updateZoomedCellWidth();\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                var updateZoom = function() {\n                  // maps {1, ... , true_cell_width} to [0,1]\n                  self.zoom = (self.zoomed_cell_width-1)/(self.true_cell_width - 1);\n                };\n                var updateZoomedCellWidth = function() {\n                  // maps [0,1] to {1, ... , true_cell_width}\n                  self.zoomed_cell_width = Math.round(self.zoom*(self.true_cell_width-1) + 1);\n                };\n                self.increaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width+1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                self.decreaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width-1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n\n                // Cell Width\n                self.getFullCellWidth = function() {\n                  return self.true_cell_width;\n                };\n                self.getZoomedCellWidth = function() {\n                  return self.zoomed_cell_width;\n                };\n\n                // Cell Height\n                self.getCellHeight = function(track_id) {\n                  return self.tracks[track_id].config.cell_height;\n                };\n\n                // Track Height\n                self.getTrackHeight = function(track_id) {\n                  return self.tracks[track_id].config.track_height;\n                };\n\n                // Track Padding\n                self.getTrackPadding = function(track_id) {\n                  return self.tracks[track_id].config.track_padding;\n                };\n\n                // Id Order\n                self.getFilteredIdOrder = function(data_filter_fn, track_ids) {\n                  var tracks = track_ids || self.getTracks();\n                  return _.filter(self.id_order, function(id) {\n                    var d = _.map(tracks, function(track_id) {\n                      return self.getTrackDatum(track_id, id);\n                    });\n                    return data_filter_fn(d);\n                  });\n                };\n                self.getIdOrder = function() {\n                  return self.id_order;\n                };\n                self.getInvertedIdOrder = function() {\n                  return self.inverted_id_order;\n                };\n                self.getVisibleIdOrder = function() {\n                  return self.visible_id_order;\n                };\n                self.getVisibleInvertedIdOrder = function() {\n                  return self.visible_inverted_id_order;\n                };\n                var updateVisibleIdOrder = function() {\n                  self.visible_id_order = _.filter(self.id_order, function(id) {\n                    return !self.hidden_ids[id];\n                  });\n                  self.visible_inverted_id_order = utils.invert_array(self.visible_id_order);\n                  $(self).trigger(events.SET_VISIBLE_ID_ORDER);\n                };\n                self.setIdOrder = function(id_order) {\n                  self.id_order = id_order.slice();\n                  self.inverted_id_order = utils.invert_array(self.id_order);\n                  updateVisibleIdOrder();\n                  $(self).trigger(events.SET_ID_ORDER);\n                };\n                // Hide Ids\n                self.hideIds = function(ids, clear_existing) {\n                  if (clear_existing) {\n                    self.hidden_ids = {};\n                  }\n                  _.each(ids, function(id) {\n                    self.hidden_ids[id] = true;\n                  });\n                  updateVisibleIdOrder();\n                };\n                self.showIds = function(ids) {\n                  if (!ids) {\n                    self.hidden_ids = {};\n                  } else {\n                    _.each(ids, function(id) {\n                      delete self.hidden_ids[id];\n                    });\n                  }\n                  updateVisibleIdOrder();\n                };\n\n                // Sorting\n                self.getTopmostTrack = function() {\n                  return (self.track_groups[0].length > 0 ? self.track_groups[0][0] : self.track_groups[1][0]);\n                };\n                self.setTrackSortComparator = function(track_id, cmp) {\n                  self.tracks[track_id].config.sort_cmp = cmp;\n                };\n                self.getTrackSortComparator = function(track_id) {\n                  return self.tracks[track_id].config.sort_cmp;\n                };\n                self.getTrackSortDirection = function(track_id) {\n                  return self.sort_direction[track_id];\n                };\n                self.setTrackSortDirection = function(track_id, dir) {\n                  self.sort_direction[track_id] = dir;\n                  self.sort();\n                };\n                self.setTrackGroupSortOrder = function(order) {\n                  self.track_group_sort_order = order.slice();\n                };\n                self.getTrackGroupSortOrder = function() {\n                  return self.track_group_sort_order.slice();\n                };\n                self.getTrackSortOrder = function() {\n                  var ret = [];\n                  var track_groups = self.getTrackGroups();\n                  _.each(self.getTrackGroupSortOrder(), function(group_id) {\n                    ret = ret.concat(track_groups[group_id]);\n                  });\n                  return ret;\n                };\n                self.setSortConfig = function(config) {\n                  self.sort_config = config;\n                };\n                var sortById = function(desc) {\n                  var ret = _.sortBy(self.getIdOrder(), _.identity);\n                  if (desc) {\n                    ret.reverse();\n                  }\n                  self.setIdOrder(ret);\n                };\n                var sortByTrack = function() {\n                  var track_id_list = self.getTrackSortOrder();\n                  var cmp_list = _.map(track_id_list, function(track_id) { \n                    return self.getTrackSortComparator(track_id);\n                  });\n                  var data = {};\n                  var id_order = self.getIdOrder();\n                  _.each(id_order, function(id) {\n                    data[id] = {};\n                    _.each(track_id_list, function(track_id) {\n                      data[id][track_id] = self.getTrackDatum(track_id, id);\n                    });\n                  });\n                  var lexicographically_ordered_cmp = function(id1,id2) {\n                    var cmp_result = 0;\n                    for (var i=0, _len = track_id_list.length; i<_len; i++) {\n                      var track_id = track_id_list[i];\n                      var cmp = cmp_list[i];\n                      var d1 = data[id1][track_id];\n                      var d2 = data[id2][track_id];\n                      var d1_undef = (typeof d1 === \"undefined\");\n                      var d2_undef = (typeof d2 === \"undefined\");\n                      if (!d1_undef && !d2_undef) {\n                        cmp_result = cmp(d1, d2);\n                      } else if (d1_undef && d2_undef) {\n                        cmp_result = 0;\n                      } else if (d1_undef) {\n                        cmp_result = 1;\n                      } else {\n                        cmp_result = -1;\n                      }\n                      if (isFinite(cmp_result)) {\n                        // reverse direction unless infinite, which is a signal that an NA is involved\n                        cmp_result *= self.sort_direction[track_id];\n                      }\n                      if (cmp_result !== 0) {\n                        break;\n                      }\n                    }\n                    return cmp_result;\n                  };\n                  self.setIdOrder(utils.stableSort(self.getIdOrder(), lexicographically_ordered_cmp));\n                };\n                self.sort = function() {\n                  var config = self.sort_config;\n                  if (config.type === 'track') {\n                    sortByTrack();\n                  } else if (config.type === 'id') {\n                    sortById(config.desc);\n                  }\n                };\n\n                // Track Creation/Destruction\n                self.addTrack = function(config, group) {\n                  group = utils.ifndef(group, 1);\n                  var track_id = getTrackId();\n                  self.tracks[track_id] ={id: track_id, \n                        data: [], \n                        config: $.extend({}, defaultTrackConfig, config),\n                        id_data_map: {}};\n                  self.track_groups[group].push(track_id);\n                  self.sort_direction[track_id] = 1;\n\n                  $(self).trigger(events.ADD_TRACK, {track_id: track_id});\n                  return track_id;\n                };\n                self.removeTrack = function(track_id) {\n                  var track = self.tracks[track_id];\n                  delete self.tracks[track_id];\n                  delete self.sort_direction[track_id];\n\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  } else {\n                    var old_position = track_group.indexOf(track_id);\n                    track_group.splice(old_position, 1);\n\n                    $(self).trigger(events.REMOVE_TRACK, {track: track, track_id: track_id});\n                    return true;  \n                  }\n                };\n\n                // Track Ordering\n                self.getTrackGroups = function(reference) {\n                  return (reference === true ? self.track_groups : $.extend(true, [], self.track_groups));      \n                };\n                self.getTracks = function() {\n                  return _.flatten(self.getTrackGroups());\n                };\n                self.getContainingTrackGroup = function(track_id, reference) {\n                  var group = false;\n                  _.find(self.track_groups, function(grp) {\n                    if (grp.indexOf(track_id) > -1) {\n                      group = grp;\n                      return true;\n                    }\n                    return false;\n                  });\n                  return (reference === true ? group : group.slice());\n                };\n                self.moveTrack = function(track_id, new_position) {\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  }\n                  var old_position = track_group.indexOf(track_id);\n                  new_position = utils.clamp(new_position, 0, track_group.length-1);\n                  track_group.splice(old_position, 1);\n                  track_group.splice(new_position, 0, track_id);\n                  var moved_tracks = track_group.slice(Math.min(old_position, new_position), Math.max(old_position, new_position) + 1);\n                  $(self).trigger(events.MOVE_TRACK, {moved_tracks: moved_tracks});\n                };\n\n\n                // Track Label\n                self.getTrackLabel = function(track_id) {\n                  return self.tracks[track_id].config.label;\n                };\n\n                // Track Tooltip\n                self.getTrackTooltip = function(track_id) {\n                  return self.tracks[track_id].config.tooltip;\n                };\n                self.setTrackTooltip = function(track_id, tooltip) {\n                  self.tracks[track_id].config.tooltip = tooltip;\n                };\n\n                // Track Data\n                self.getTrackData = function(track_id) {\n                  return self.tracks[track_id].data;\n                };\n                self.setTrackData = function(track_id, data) {\n                  var id_accessor = self.getTrackDatumIdAccessor(track_id);\n\n                  self.tracks[track_id].data = data;\n\n                  var current_id_order = self.getIdOrder();\n                  var current_inverted_id_order = self.getInvertedIdOrder();\n                  _.each(_.map(data, id_accessor), function(id) {\n                    if (!(id in current_inverted_id_order)) {\n                      current_id_order.push(id);\n                    }\n                  });\n                  self.setIdOrder(current_id_order);\n                  \n                  self.tracks[track_id].id_data_map = {};\n                  var id_data_map = self.tracks[track_id].id_data_map;\n                  _.each(self.tracks[track_id].data, function(datum) {\n                    id_data_map[id_accessor(datum)] = datum;\n                  });\n                  $(self).trigger(events.SET_TRACK_DATA, {track_id: track_id});\n                };\n                self.getTrackDatum = function(track_id, datum_id) {\n                  return self.tracks[track_id].id_data_map[datum_id];\n                };\n                self.getTrackDatumDataKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_data_key;\n                };\n\n                // Track Datum Id\n                self.getTrackDatumIdAccessor = function(track_id) {\n                  var key = self.getTrackDatumIdKey(track_id);\n                  return function(d) {\n                    return d[key];\n                  };\n                };\n                self.getTrackDatumIdKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_id_key;\n                };\n                self.setTrackDatumIdKey = function(track_id, key) {\n                  self.tracks[track_id].config.datum_id_key = key;\n                };\n\n                // Track info\n                self.isTrackRemovable = function(track_id) {\n                  return self.tracks[track_id].config.removable;\n                };\n                self.isTrackSortDirectionChangable = function(track_id) {\n                  return self.tracks[track_id].config.sort_direction_changable;\n                };\n\n                // Clearing\n                self.clearData = function() {\n                  _.each(self.getTracks(), function(track_id) {\n                    self.setTrackData(track_id, []);\n                  });\n                  self.setIdOrder([]);\n                }\n              }\n\n              return { \n                CATEGORICAL_COLOR: RuleSet.CATEGORICAL_COLOR,\n                GRADIENT_COLOR: RuleSet.GRADIENT_COLOR,\n                GENETIC_ALTERATION: RuleSet.GENETIC_ALTERATION,\n                BAR_CHART: RuleSet.BAR_CHART,\n                create: function CreateOncoprint(container_selector_string, config) {\n                  config = $.extend({}, defaultOncoprintConfig, config || {});\n                  config = $.extend(config, hiddenOncoprintConfig);\n                  var oncoprint = new Oncoprint(config);\n                  var renderer = new OncoprintSVGRenderer(container_selector_string, oncoprint, {label_font: 'Arial', legend:config.legend});\n                  var ret = {\n                    onc_dev: oncoprint,\n                    ren_dev: renderer,\n                    addTrack: function(config, group) {\n                      var track_id = oncoprint.addTrack(config, group);\n                      return track_id;\n                    },\n                    removeTrack: function(track_id) {\n                      oncoprint.removeTrack(track_id);\n                    },\n                    moveTrack: function(track_id, position) {\n                      oncoprint.moveTrack(track_id, position);\n                    },\n                    setTrackDatumIdKey: function(track_id, key) {\n                      oncoprint.setTrackDatumIdKey(track_id, key);\n                    },\n                    setTrackData: function(track_id, data) {\n                      oncoprint.setTrackData(track_id, data);\n                    },\n                    setRuleSet: function(track_id, type, params) {\n                      renderer.setRuleSet(track_id, type, params);\n                    },\n                    useSameRuleSet: function(target_track_id, source_track_id) {\n                      renderer.useSameRuleSet(target_track_id, source_track_id);\n                    },\n                    toggleCellPadding: function() {\n                      oncoprint.toggleCellPadding();\n                    },\n                    toSVG: function() {\n                      return renderer.toSVG();\n                    },\n                    setTrackGroupSortOrder: function(order) {\n                      oncoprint.setTrackGroupSortOrder(order);\n                    },\n                    sort: function() {\n                      oncoprint.sort();\n                    },\n                    setSortConfig: function(config) {\n                      oncoprint.setSortConfig(config);\n                    },\n                    setIdOrder: function(id_order) {\n                      oncoprint.setIdOrder(id_order);\n                    },\n                    getTrackSortDirection: function(track_id) {\n                      return oncoprint.getTrackSortDirection(track_id);\n                    },\n                    setTrackSortDirection: function(track_id, dir) {\n                      oncoprint.setTrackSortDirection(track_id, dir);\n                    },\n                    setZoom: function(z) {\n                      return oncoprint.setZoom(z);\n                    },\n                    increaseZoom: function() {\n                      return oncoprint.increaseZoom();\n                    },\n                    decreaseZoom: function() {\n                      return oncoprint.decreaseZoom();\n                    },\n                    suppressRendering: function() {\n                      renderer.suppressRendering();\n                    },\n                    releaseRendering: function() {\n                      renderer.releaseRendering();\n                    },\n                    setLegendVisible: function(track_ids, visible) {\n                      renderer.setLegendVisible(track_ids, visible);\n                    },\n                    getFilteredIdOrder: function(data_filter_fn, track_ids) {\n                      return oncoprint.getFilteredIdOrder(data_filter_fn, track_ids);\n                    },\n                    getVisibleIdOrder: function() {\n                      return oncoprint.getVisibleIdOrder();\n                    },\n                    hideIds: function(ids) {\n                      oncoprint.hideIds(ids);\n                    },\n                    showIds: function(ids) {\n                      oncoprint.showIds(ids);\n                    },\n                    clearData: function() {\n                      oncoprint.clearData();\n                    },\n                    setTrackTooltip: function(track_id, tooltip) {\n                      oncoprint.setTrackTooltip(track_id, tooltip);\n                    }\n                  };\n                  $(oncoprint).on(events.MOVE_TRACK, function() {\n                    $(ret).trigger(events.MOVE_TRACK);\n                  });\n                  $(renderer).on(events.FINISHED_RENDERING, function() {\n                    $(ret).trigger(events.FINISHED_RENDERING);\n                  });\n                  $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                    $(ret).trigger(events.REMOVE_TRACK, {track_id: data.track_id});\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSEENTER, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSEENTER);\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSELEAVE, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSELEAVE);\n                  });\n                  return ret;\n                }\n              };\n            })();\n          \n            var OncoprintSVGRenderer = (function() {\n                  var events = oncoprint_events;\n                  var utils = oncoprint_utils;\n\n                  var TOOLBAR_CONTAINER_CLASS = 'oncoprint-toolbar-ctr';\n                  var LABEL_AREA_CONTAINER_CLASS = 'oncoprint-label-area-ctr';\n                  var CELL_AREA_CONTAINER_CLASS = 'oncoprint-cell-area-ctr';\n                  var CELL_AREA_CLASS = 'oncoprint-cell-area';\n                  var COLUMN_HIGHLIGHT_CLASS = 'oncoprint-column-highlight'\n                  \n                  var CELL_HOVER_CLASS = 'oncoprint-cell-hover';\n                  var LEGEND_HEADER_CLASS = 'oncoprint-legend-header';\n                  var LABEL_DRAGGING_CLASS = 'oncoprint-label-dragging';\n                  var LABEL_DRAGGABLE_CLASS = 'oncoprint-label-draggable';\n                  var CELL_QTIP_CLASS = 'oncoprint-cell-qtip';\n\n                  function OncoprintSVGRenderer(container_selector_string, oncoprint, config) {\n                    OncoprintRenderer.call(this, oncoprint, config);\n                    var self = this;\n                    this.track_cell_selections = {};\n                    this.track_cells = {};\n                    this.active_rule_set_rules = {};\n                    this.toolbar_container;\n                    this.label_div;\n                    this.label_drag_div;\n                    this.label_container;\n                    this.cell_container;\n                    this.cell_container_node;\n                    this.cell_div;\n                    this.legend_table;\n                    this.document_fragment;\n                    this.percent_altered_max_width = utils.textWidth('100%', self.getLabelFont());\n                    this.altered_data_percentage = {};\n                    \n                    this.cell_tooltip_html = '';\n\n                    this.container = d3.select(container_selector_string);\n                    this.container.classed('noselect', true).selectAll('*').remove();\n                    this.container.append('br');\n                    (function initLegend() {\n                      if (config.legend) {\n                        self.legend_table = d3.select(container_selector_string).append('table').style('border-collapse', 'collapse');\n                      }\n                    })();\n                    var content_area = d3.select(container_selector_string).append('div').classed('oncoprint-content-area', true);\n                    (function initLabelContainer() {\n                      self.label_container = content_area.append('div').classed(LABEL_AREA_CONTAINER_CLASS, true).style('position', 'relative');\n                      self.label_div = self.label_container.append('div').style('position', 'relative').style('overflow', 'hidden');\n                      self.label_drag_div = self.label_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px')\n                              .style('display','none');\n                    })();\n                    (function initCellContainer() {\n                      self.cell_container = content_area.append('div').classed(CELL_AREA_CONTAINER_CLASS, true);\n                      self.cell_column_highlight = self.cell_container.append('div').classed(COLUMN_HIGHLIGHT_CLASS, true)\n                            .style('height', self.getCellAreaHeight())\n                            .style('visibility', 'hidden');\n\n                      self.cell_container_node = self.cell_container.node();\n                      self.cell_div = self.cell_container.append('div').classed(CELL_AREA_CLASS, true);\n\n                    \n                      self.cell_mouseover_div = self.cell_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px');\n                      self.cell_container_node.addEventListener(\"scroll\", function() {\n                        self.calculateVisibleInterval();\n                        self.clipAndPositionCells();\n                      });\n                      var mouseMove, mouseOut;\n                      (function() {\n                        var prev_track, prev_cell_index, prev_dom, highlighted_col_cells = [];\n                        var column_highlight_timeout;\n                        $(self.cell_div.node()).qtip({\n                          content: 'SHARED QTIP',\n                          position: {target: 'event', my:'bottom middle', at:'top middle', viewport: $(window)},\n                          style: { classes: CELL_QTIP_CLASS, border: 'none'},\n                          show: {event: \"cell-mouseover\"},\n                          hide: {fixed: true, delay: 100, event: \"cell-mouseout\"},\n                          events: {\n                            show: function() {\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            },\n                            render: function(){\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            }\n                          }\n                        });\n                        var hover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseover\");\n                        };\n                        var unhover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseout\");\n                        };\n                        var clear_and_unhover = function() {\n                          prev_track = undefined;\n                          prev_cell_index = undefined;\n                          prev_dom && unhover_cell(prev_dom);\n                          prev_dom = undefined;\n                          //self.cell_column_highlight.style('visibility', 'hidden');\n                          column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                          _.each(highlighted_col_cells, function(cell) {\n                            if (cell) {\n                              cell.style.border = '';\n                              cell.style.margin = '';\n                            }\n                          });\n                          highlighted_col_cells = [];\n                        };\n                        mouseOut = function() {\n                          clear_and_unhover();\n                        };\n                        mouseMove = function(evt) {\n                          var mouseX = utils.mouseX(evt);\n                          var mouseY = utils.mouseY(evt);\n                          var track_cell_tops = self.getTrackCellTops();\n                          var track = (function() {\n                            var closest_track_dist = Number.POSITIVE_INFINITY;\n                            var closest_track = undefined;\n                            _.each(track_cell_tops, function(top, track_id) {\n                              var dist = mouseY - top;\n                              if (dist >= 0 && dist < closest_track_dist) {\n                                closest_track_dist = dist;\n                                closest_track = track_id;\n                              }\n                            });\n                            return closest_track;\n                          })();\n                          if (!track) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var track_height = oncoprint.getCellHeight(track);\n                          if (mouseY > track_cell_tops[track] + track_height) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var cell_width = oncoprint.getZoomedCellWidth();\n                          var cell_unit = cell_width + oncoprint.getCellPadding();\n                          if (mouseX % cell_unit > cell_width) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          // at this point, we are hovered over a cell position\n                          var cell_index = Math.floor(mouseX / cell_unit);\n                          if (cell_index !== prev_cell_index || track !== prev_track) {\n                            //self.cell_column_highlight.style('visibility', 'hidden');\n                            column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                            // not the same cell as before\n                            clear_and_unhover();\n                            var cell_id = oncoprint.getVisibleIdOrder()[cell_index];\n                            var track_cell = self.track_cells[track][cell_id];\n                            if (!track_cell) {\n                              // track doesn't have a cell there\n                              return;\n                            }\n                            // otherwise, we're over a cell\n                            $('.'+CELL_QTIP_CLASS).finish().hide();\n                            prev_cell_index = cell_index;\n                            prev_track = track;\n                            prev_dom = track_cell.dom;\n                            self.cell_tooltip_html = oncoprint.getTrackTooltip(track)(track_cell.d);\n                            hover_cell(prev_dom);\n                            column_highlight_timeout = setTimeout(function() {\n                              highlighted_col_cells = _.map(self.track_cells, function(cells, track_id) {\n                                var cell = cells[cell_id].dom;\n                                if (cell) {\n                                  if (track_id === track) {\n                                    cell.style.border = \"1px solid #000000\";\n                                    cell.style.margin = \"-1px\";\n                                  } else {\n                                    cell.style.border = \"1px solid #999999\";\n                                    cell.style.margin = \"-1px\";\n                                  }\n                                }\n                                return cell;\n                              });\n                            }, 200);\n                          }\n                        };\n                      })();\n                      self.cell_mouseover_div.node().addEventListener('mousemove', mouseMove);\n                      self.cell_mouseover_div.node().addEventListener('mouseout', mouseOut);\n                      // TODO: magic number\n                      self.cell_div.style('max-width', '1000px');\n                    })();\n                    $(content_area.node()).hover(function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeTo(80,1);\n                    }, function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeOut(500);\n                    });\n                    \n                    (function reactToOncoprint() {\n                      $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                        var track_id = data.track_id;\n                        delete self.rule_sets[track_id];\n                        delete self.track_cell_selections[track_id];\n                        delete self.altered_data_percentage[track_id];\n                        self.removeTrackCells(track_id);\n                        self.removeTrackLabels(track_id);\n                        self.removeTrackButtons(track_id);\n                        \n                        self.computeTrackCellTops();\n                        //self.renderLegend();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        self.resizeCellDiv();\n                        oncoprint.sort();\n                      });\n                      $(oncoprint).on(events.MOVE_TRACK, function(evt, data) {\n                        self.computeTrackCellTops();\n                        self.clipAndPositionCells(data.moved_tracks, 'top', true);\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        oncoprint.sort();\n                      });\n\n                      $(oncoprint).on(events.ADD_TRACK, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(undefined, 'top', true);\n                        self.computeTrackCellTops();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        //self.clipCells(true, d.track_id);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n                      $(oncoprint).on(events.SET_TRACK_DATA, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(d.track_id, undefined, true);\n                        self.computeAlteredDataPercentage(d.track_id);\n                        self.renderTrackLabels(d.track_id);\n                        self.resizeCellDiv();\n                        self.renderLegend();\n                        //self.clipCells(true);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n\n                      $(oncoprint).on(events.SET_CELL_PADDING, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n\n                      $(oncoprint).on(events.SET_ZOOM, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCells();\n                        self.resizeCellDiv();\n                        //self.cell_highlight.style('width', oncoprint.getZoomedCellWidth() + 'px');\n                      });\n\n                      $(oncoprint).on(events.SET_VISIBLE_ID_ORDER, function() {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n                    })();\n                  }\n                  utils.extends(OncoprintSVGRenderer, OncoprintRenderer);\n                  OncoprintSVGRenderer.prototype.computeAlteredDataPercentage = function(track_id) {\n                    var rule_set = this.getRuleSet(track_id);\n                    if (rule_set && rule_set.alteredData) {\n                      var data = this.oncoprint.getTrackData(track_id);\n                      var num_altered = rule_set.alteredData(data).length;\n                      var percent_altered = Math.floor(100 * num_altered / data.length);\n                      this.altered_data_percentage[track_id] = percent_altered;\n                    }\n                  };\n                  OncoprintSVGRenderer.prototype.getAlteredDataPercentage = function(track_id) {\n                    return this.altered_data_percentage[track_id];\n                  };\n                  OncoprintSVGRenderer.prototype.calculateVisibleInterval = function() {\n                    var cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n                    var cell_ctr_rect = this.cell_container_node.getBoundingClientRect();\n                    this.visible_interval = [this.cell_container_node.scrollLeft, this.cell_container_node.scrollLeft + cell_ctr_rect.right - cell_ctr_rect.left];\n                    return this.visible_interval;\n                  };\n                  OncoprintSVGRenderer.prototype.getVisibleInterval = function() {\n                    return (this.visible_interval || this.calculateVisibleInterval());\n                  };\n                  OncoprintSVGRenderer.prototype.cellRenderTarget = function() {\n                    return d3.select(this.document_fragment || this.cell_div.node());\n                  };\n                  OncoprintSVGRenderer.prototype.suppressRendering = function() {\n                    this.document_fragment = document.createDocumentFragment();\n                  };\n                  OncoprintSVGRenderer.prototype.releaseRendering = function() {\n                    this.cell_div.node().appendChild(this.document_fragment);\n                    this.document_fragment = undefined;\n                    var self = this;\n                    $(this.cell_div.node()).ready(function() {\n                      self.resizeCells();\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    });\n                  };\n                  // Rule sets\n                  OncoprintSVGRenderer.prototype.setRuleSet = function(track_id, type, params) {\n                    OncoprintRenderer.prototype.setRuleSet.call(this, track_id, type, params);\n                    this.active_rule_set_rules[this.getRuleSet(track_id).getRuleSetId()] = {};\n                    this.drawCells(track_id);\n                    this.clipAndPositionCells(track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(track_id);\n                    this.renderTrackLabels(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n                    OncoprintRenderer.prototype.useSameRuleSet.call(this, target_track_id, source_track_id);\n                    this.drawCells(target_track_id);\n                    this.clipAndPositionCells(target_track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(target_track_id);\n                    this.renderTrackLabels(target_track_id);\n                  }\n\n                  // Containers\n                  OncoprintSVGRenderer.prototype.getLabelDiv = function() {\n                    return this.label_div;\n                  };\n                  OncoprintSVGRenderer.prototype.getLabelDragDiv = function() {\n                    return this.label_drag_div;\n                  };\n                  OncoprintSVGRenderer.prototype.resizeCellDiv = function() {\n                    this.cell_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    \n                    this.cell_mouseover_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    this.cell_column_highlight.style('height', this.getCellAreaHeight() + 'px');\n                  };\n                  OncoprintSVGRenderer.prototype.resizeLabelDiv = function() {\n                    this.getLabelDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                    this.getLabelDragDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                  };\n\n                  // Labels\n                  OncoprintSVGRenderer.prototype.removeTrackLabels =function(track_ids) {\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids); \n                    var div = this.label_div;\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                    });\n                  }\n                  OncoprintSVGRenderer.prototype.renderTrackLabels = function(track_ids, y, render_whole_labels) {\n                    var div = this.label_div;\n                    if (typeof y !== \"undefined\") {\n                      div.selectAll(this.getTrackLabelCSSSelector(track_ids)).style('top', y+'px');\n                    } else {\n                      track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                      track_ids = [].concat(track_ids);\n                      var label_tops = this.getTrackLabelTops();\n                      var self = this;\n                      var label_area_width = this.getLabelAreaWidth();\n                      var percent_altered_left = label_area_width - this.percent_altered_max_width;\n                      _.each(track_ids, function(track_id) {\n                        var label_top = label_tops[track_id];\n                        var track_label_class = self.getTrackLabelCSSClass(track_id);\n                        var label_text = self.oncoprint.getTrackLabel(track_id);\n                        var disp_label_text = label_text;\n                        if (label_text.length > self.max_label_length && !render_whole_labels) {\n                          disp_label_text = label_text.substring(0,self.max_label_length-3)+'...';\n                        }\n                        _.each(div.selectAll(self.getTrackLabelCSSSelector(track_id)), function(node) {\n                          $(node).qtip('destroy');\n                        });\n                        div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                        var span = div.append('span')\n                          .style('position','absolute')\n                          .classed(self.getTrackLabelCSSClass(track_id), true)\n                          .classed('oncoprint-track-label-draggable', true)\n                          .classed('oncoprint-track-label-main', true)\n                          .classed('oncoprint-track-label', true)\n                          .classed('noselect', true)\n                          .style('font-family', self.getLabelFont())\n                          .style('font-weight', 'bold')\n                          .text(disp_label_text)\n                          .style('top', label_top+'px')\n                          .on(\"mousedown\", function() {\n                            self.dragLabel(track_id);\n                          });\n                          $(span.node()).qtip( {content: {text: (label_text.length > self.max_label_length ? label_text+'<br> hold to drag' : 'hold to drag') },\n                                  position: {my:'middle right', at:'middle left', viewport: $(window)},\n                                  style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow'},\n                                  show: {event: \"mouseover\"}\n                                });\n                        var percent_altered = self.getAlteredDataPercentage(track_id);\n                        if (typeof percent_altered !== 'undefined') {\n                          div.append('span')\n                            .style('position','absolute')\n                            .classed(self.getTrackLabelCSSClass(track_id), true)\n                            .classed('oncoprint-track-label', true)\n                            .classed('noselect', true)\n                            .style('font-family', self.getLabelFont())\n                            .text(percent_altered + '%')\n                            .style('top', label_top+'px')\n                            .style('left', percent_altered_left+'px');  \n                        }\n                      });\n                    }\n                  };\n\n                  // Buttons\n                  OncoprintSVGRenderer.prototype.getTrackButtonCSSClass = function(track_id) {\n                    return 'oncoprint-track-button'+utils.ifndef(track_id, \"\");\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll('.'+self.getTrackButtonCSSClass(track_id)).remove();\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.renderTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var label_tops = this.getTrackLabelTops();\n                    var self = this;\n                    var label_area_width = this.getLabelAreaWidth();\n                    _.each(track_ids, function(track_id) {\n                      var button_class = self.getTrackButtonCSSClass(track_id);\n                      div.selectAll('.'+button_class).remove();\n                      var left = label_area_width - 15;\n                      if (self.oncoprint.isTrackRemovable(track_id)) {\n                        (function() {\n                          var new_btn = div.append('span').classed('noselect', true).style('font-size','12px').style('color', '#87CEFA').style('cursor', 'pointer')\n                          .classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            self.oncoprint.removeTrack(track_id);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                          new_btn.text('X');\n                          $(new_btn.node()).hover(function() {\n                            new_btn.style('font-size', '15px').style('color', '#0000FF');\n                          }, function() {\n                            new_btn.style('font-size','12px').style('color', '#87CEFA');\n                          }).qtip({\n                                            //content: {text: 'Click to remove'},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                        })();\n                        left -= 35;\n                      }\n                      if (self.oncoprint.isTrackSortDirectionChangable(track_id)) {\n                        (function() {\n                          var imgs = ['images/decreaseSort.svg', 'images/increaseSort.svg', 'images/nonSort.svg'];\n                          var descs = ['Click to sort in descending order', 'Click to not sort on this track', 'Click to sort in ascending order'];\n                          var sort_direction = [1, -1, 0];\n                          var current_sort_setting = sort_direction.indexOf(self.oncoprint.getTrackSortDirection(track_id));\n                          var new_btn = div.append('img');\n                          new_btn.attr('src', imgs[current_sort_setting]).style('cursor','pointer');\n                          $(new_btn.node()).qtip({\n                                            content: {text: function() {\n                                              return descs[current_sort_setting];\n                                            }},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                          new_btn.classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            current_sort_setting = (current_sort_setting + 1) % 3;\n                            self.oncoprint.setTrackSortDirection(track_id, sort_direction[current_sort_setting]);//toggleTrackSortDirection(track_id);\n                            new_btn.attr('src', imgs[current_sort_setting]);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                        })();\n                      }\n                    });\n                  };\n\n                  // Cells\n                  OncoprintSVGRenderer.prototype.resizeCells = function(new_width) {\n                    this.cell_div.selectAll('svg.'+this.getCellCSSClass()).style('width', this.oncoprint.getZoomedCellWidth()+'px');\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackCells = function(track_id) {\n                    this.cell_div.selectAll('svg.'+this.getTrackCellCSSClass(track_id)).remove();\n                  };\n                  OncoprintSVGRenderer.prototype.drawTrackCells = function(track_id, fragment) {\n                    var oncoprint = this.oncoprint;\n                    var data = oncoprint.getTrackData(track_id);\n                    var id_key = oncoprint.getTrackDatumIdKey(track_id);\n                    var id_accessor = oncoprint.getTrackDatumIdAccessor(track_id);\n                    var rule_set = this.getRuleSet(track_id);\n                    if (!rule_set) {\n                      return;\n                    }\n                    var self = this;\n\n                    this.track_cells[track_id] = {};\n                    var cell_class = this.getCellCSSClass();\n                    var track_cell_class = this.getTrackCellCSSClass(track_id);\n                    var track_cells = this.track_cells[track_id];\n\n                    var bound_svg = d3.select(fragment).selectAll('svg.'+track_cell_class).data(data);\n                    bound_svg.enter().append('svg').classed(track_cell_class, true).classed(cell_class, true)\n                      .attr('shape-rendering','geometricPrecision')\n                      .attr('preserveAspectRatio','none')\n                      .attr('viewBox', '0 0 '+oncoprint.getFullCellWidth()+' '+oncoprint.getCellHeight(track_id))\n                      .style('width', oncoprint.getZoomedCellWidth()+'px').style('height', oncoprint.getCellHeight(track_id)+'px');\n                    bound_svg.exit().remove();\n\n                    var tooltip = oncoprint.getTrackTooltip(track_id);\n                    bound_svg.each(function(d,i) {\n                      var dom_cell = this;\n                      var id = id_accessor(d);\n                      track_cells[id] = {dom: this, d: d};\n                    });\n                    bound_svg.selectAll('*').remove();\n                    this.active_rule_set_rules[rule_set.getRuleSetId()][track_id] = rule_set.apply(bound_svg, oncoprint.getFullCellWidth(), oncoprint.getCellHeight(track_id));\n                    self.track_cell_selections[track_id] = bound_svg;\n                  };\n                  OncoprintSVGRenderer.prototype.drawCells = function(track_ids) {\n                    var fragment;\n                    if (this.document_fragment) {\n                      //HACK\n                      fragment = document.createDocumentFragment();\n                    } else {\n                      fragment = this.cell_div.node();\n                    }\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      self.drawTrackCells(track_id, fragment);\n                    });\n                    if (this.document_fragment) {\n                      this.cellRenderTarget().node().appendChild(fragment);\n                    }\n                    setTimeout(function() {\n                      $(self).trigger(events.FINISHED_RENDERING);\n                    }, 0);\n                  };\n\n                  // Positioning\n                  OncoprintSVGRenderer.prototype.clipAndPositionCells = function(track_ids, axis, force, display_all) {\n                    this.cell_div.node().display = 'none';\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var visible_interval = this.getVisibleInterval();\n                    var interval_width = 4*(visible_interval[1] - visible_interval[0]);\n                    var interval_number = Math.floor(visible_interval[0] / interval_width);\n                    visible_interval = _.map([-interval_width, 2*interval_width], function(x) { \n                      return Math.max(x + interval_number*interval_width, 0); \n                    });\n                    var self = this;\n                    var track_cell_tops = this.getTrackCellTops();\n                    var id_order = this.oncoprint.getVisibleInvertedIdOrder();\n                    var cell_x = this.getCellXArray(Object.keys(id_order).length);\n                    _.each(track_ids, function(track_id) {\n                      var y;\n                      if (!axis || axis === 'top') {\n                        y = track_cell_tops[track_id];\n                      }\n                      var id_key = self.oncoprint.getTrackDatumIdKey(track_id);\n                      if ((interval_number !== self.prev_interval_number) || force) {\n                        if (self.track_cell_selections.hasOwnProperty(track_id)) {\n                          self.track_cell_selections[track_id].each(function(d,i) {\n                            var new_x = cell_x[id_order[d[id_key]]];\n                            var disp = this.style.display;\n                            var new_disp = ((isNaN(new_x) || new_x < visible_interval[0] || new_x > visible_interval[1]) && !display_all) ? 'none' : 'inherit';\n                            if (disp !== new_disp) {\n                              this.style.display = new_disp;\n                            }\n                            if ((!axis || axis === 'left') && new_disp !== 'none') {\n                              this.style.left = new_x + 'px';\n                            }\n                            if ((!axis || axis === 'top') && new_disp !== 'none') {\n                              this.style.top = y+'px';\n                            }\n                          });\n                        }\n                      }\n                    });\n                    this.prev_interval_number = interval_number;\n                    this.cell_div.node().display = 'block';\n                  };\n\n                  OncoprintSVGRenderer.prototype.setLegendVisible = function(track_ids, visible) {\n                    var self = this;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : [].concat(track_ids);\n                    _.each(track_ids, function(id) {\n                      self.getRuleSet(id).exclude_from_legend = !visible;\n                    });\n                    this.renderLegend();\n                  };\n                  OncoprintSVGRenderer.prototype.renderLegend = function(include_all) {\n                    var cell_width = this.oncoprint.getFullCellWidth();\n                    var self = this;\n                    var rendered = {};\n                    self.legend_table.selectAll('*').remove();\n                    _.each(this.rule_sets, function(rule_set, track_id) {\n                      if (rule_set.exclude_from_legend && !include_all) {\n                        return;\n                      }\n                      var rule_set_id = rule_set.getRuleSetId();\n                      var active_rules = {};\n                      _.each(self.active_rule_set_rules[rule_set_id], function(track_map, track_id) {\n                        $.extend(active_rules, track_map);\n                      });\n                      if (!rendered.hasOwnProperty(rule_set_id)) {\n                        var tr = self.legend_table.append('tr');\n                        var label_header = tr.append('td').style('padding-top', '1em').style('padding-bottom', '1em')\n                              .append('span').classed('oncoprint-legend-header', true);\n                        label_header.text(rule_set.getLegendLabel());\n                        var legend_body_td = tr.append('td');\n                        var legend_div = rule_set.getLegendDiv(active_rules, cell_width, self.oncoprint.getCellHeight(track_id));\n                        legend_body_td.node().appendChild(legend_div);\n                        utils.d3SelectChildren(d3.select(legend_div), '*').classed('oncoprint-legend-block-span', true);\n                        rendered[rule_set_id] = true;\n                      }\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.dragLabel = function(track_id) {\n                    this.getLabelDragDiv().style('display','block');\n                    var track_group = this.oncoprint.getContainingTrackGroup(track_id);\n                    var first_track = track_group[0], last_track=track_group[track_group.length-1];\n                    var all_track_tops = this.getTrackLabelTops();\n                    var track_tops = {};\n                    _.each(track_group, function(id) { \n                      track_tops[id] = all_track_tops[id];\n                    });\n                    track_group.splice(track_group.indexOf(track_id), 1);\n                    var group_track_tops = _.map(track_group, function(id) {\n                      return track_tops[id];\n                    });\n                    var label_area_height = this.getLabelAreaHeight();\n                    var drag_bounds = [undefined, undefined];\n                    drag_bounds[0] = utils.clamp(track_tops[first_track], 0, label_area_height);\n                    drag_bounds[1] = utils.clamp(track_tops[last_track]+this.getRenderedTrackHeight(last_track), 0, label_area_height);\n\n                    var self = this;\n                    var $label_drag_div = $(self.getLabelDragDiv().node());\n                    delete track_tops[track_id];\n\n                    (function(track_id) {\n                      var new_pos = -1;\n                      var moveHandler = function(evt) {\n                        if (evt.stopPropagation) {\n                          evt.stopPropagation();\n                        }\n                        if (evt.preventDefault) {\n                          evt.preventDefault();\n                        }\n                        var mouse_y = utils.clamp(utils.mouseY(evt), drag_bounds[0], drag_bounds[1]);\n                        self.renderTrackLabels(track_id, mouse_y);\n                        d3.selectAll(self.getTrackLabelCSSSelector(track_id)).classed(LABEL_DRAGGING_CLASS, true);\n                        \n                        new_pos = _.sortedIndex(group_track_tops, mouse_y);\n                        _.each(track_tops, function(top, id) {\n                          top += 3*(+(new_pos < track_group.length && track_group[new_pos] == id));\n                          top -= 3*(+(new_pos > 0 && track_group[new_pos-1] == id));\n                          self.renderTrackLabels(id, top);\n                        });\n                      }\n                      $label_drag_div.on(\"mousemove\", moveHandler);\n                      var mouseUpHandler = function(evt) {\n                        $label_drag_div.hide();\n                        $label_drag_div.off(\"mousemove\", moveHandler);\n                        if (new_pos > -1) {\n                          self.oncoprint.moveTrack(track_id, new_pos);\n                        }\n                      };\n                      $(document).one(\"mouseup\", mouseUpHandler);\n                    })(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.toSVG = function(full_labels) {\n                    var self = this;\n                    var root = $(this.container.node()).offset();\n                    var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n                    svg.attr('width', this.getLabelAreaWidth() + this.getCellAreaWidth() + 'px');\n                    this.renderLegend(true);\n                    this.renderTrackLabels(undefined, undefined, full_labels);\n                    svg.attr('height', $(this.container.node()).height()+'px');\n                    (function addLabels() {\n                      self.label_div.selectAll('.oncoprint-track-label').each(function() {\n                        var text_elt = d3.select(this);\n                        var font = text_elt.style('font-family') || 'Arial';\n                        var weight = text_elt.style('font-weight'); \n                        var size = text_elt.style('font-size') || '12px';\n                        var pos = $(text_elt.node()).offset();\n                        var text = text_elt.text();\n                        svg.append('text').style('font-family', font).style('font-weight', weight).style('font-size', size)\n                            .attr('transform', utils.translate(pos.left - root.left,pos.top - root.top))\n                            .style('alignment-baseline', 'hanging')\n                            .text(text);  \n                      });\n                    })();\n                    (function addCells() {\n                      self.clipAndPositionCells(undefined, undefined, true, true);\n                      self.cell_div.selectAll('.oncoprint-cell').each(function() {\n                        var cell_elt = d3.select(this);\n                        var cell_rect = cell_elt.node().getBoundingClientRect();\n                        var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                        var pos = $(cell_elt.node()).offset();\n                        var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                        cell_elt.selectAll('*').each(function() {\n                          utils.appendD3SVGElement(d3.select(this), g);\n                        });\n                        var outline_styles = {color: cell_elt.style('outline-color'), width: cell_elt.style('outline-width')};\n                        if (outline_styles.color) {\n                          g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                              .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                        }\n                      });\n                      //styles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    })();\n                    (function addLegend() {\n                      self.legend_table.selectAll('tr').each(function() {\n                        d3.select(this).selectAll('td').each(function() {\n                          d3.select(this).selectAll('.oncoprint-legend-header,.oncoprint-legend-element').each(function() {\n                            if ($(this).text().trim().length) {\n                              // text type element\n                              var text_elt = d3.select(this);\n                              var font = text_elt.style('font-family') || 'Arial';\n                              if (font !== 'Arial') {\n                                //console.log(this);\n                              }\n                              var weight = text_elt.style('font-weight'); \n                              var size = text_elt.style('font-size') || '12px';\n                              var text = text_elt.text();\n                              var pos = $(text_elt.node()).offset();\n                              svg.append('text').style('font-family', font).style('font-weight', weight)\n                                .style('font-size', size)\n                                .attr('transform', utils.translate(pos.left - root.left, pos.top - root.top))\n                                .style('alignment-baseline', 'hanging')\n                                .text(text);\n                            } else if (this.tagName.toLowerCase() === 'svg') {\n                              var elt = d3.select(this);\n                              var pos = $(elt.node()).offset();\n                              var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                              var cell_rect = elt.node().getBoundingClientRect();\n                              var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                              var outline_styles = {color: elt.style('outline-color'), width: elt.style('outline-width')};\n                              if (outline_styles.color) {\n                                g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                                    .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                              }\n                              elt.selectAll('*').each(function() {\n                                utils.appendD3SVGElement(d3.select(this), g);\n                              });\n                            }\n                          });\n                        });\n                      });\n                    })();\n                    this.renderLegend();\n                    this.renderTrackLabels();\n                    return svg.node();\n                  };\n                  return OncoprintSVGRenderer;\n            })();\n            \n            function displayOncoprint(msg)\n            {\n               $(\"#onc\").empty();\n               $(\"#oncoprintErrorSection\").empty();\n               $(\".oncoprint-label-col1\").empty();\n              \n               if(msg.status == \"error\") {\n                  vm.errorMessage = JSON.parse(msg.payload);\n                  console.log(\"***** errors in dispalyOncoprint\", vm.errorMessage);\n                  setState(\"errors\"); \n                }else{\n                     var genes = msg.payload[1];\n                     var processed_data = msg.payload[0];\n                     var onc = Oncoprint.create('#onc');\n                     onc.suppressRendering();\n                     $.when(processed_data).then(function(){\n                          if(typeof(genes) === \"string\"){\n                            genes = [genes];\n                           }  \n                          var tracks_to_load = genes.length;\n\n                          var track_id = [];\n                          for(var i = 0; i < genes.length; i++){\n                            var gene = genes[i];\n                            function data_gene_map(obj) {\n                                return obj.gene === gene;\n                            }\n                            var data_gene = processed_data.filter(data_gene_map); \n\n                            var addTrackStart = Date.now();\n                            track_id[i] = onc.addTrack({label: gene, removable:true}, 0);\n                            if(i === 0){\n                              onc.setRuleSet(track_id[i], Oncoprint.GENETIC_ALTERATION);\n                            }else{\n                              onc.useSameRuleSet(track_id[i], track_id[0]);\n                            }\n                            onc.setTrackData(track_id[i], data_gene, true);\n                          }            \n                        onc.releaseRendering();\n                        onc.sort();\n                        $('#toggle_whitespace').click(function() {\n                           onc.toggleCellPadding();\n                        });\n                        var z = 1;\n                        $('#reduce_cell_width').click(function() {\n                            z *= 0.5;\n                            onc.setZoom(z);\n                        });  \n                    //move legend to oncoscape label section\n                    var allOncoLegendBlocks = $(\".oncoprint-legend-block\");\n                    var allOncoLegendLabels = $(\".oncoprint-legend-label\");\n                    for(var j = 0; j < allOncoLegendBlocks.length; j++){\n                      allOncoLegendBlocks[j].appendChild(allOncoLegendLabels[j]);\n                    }\n                    $(\".oncoprint-label-col1\").append(allOncoLegendBlocks); \n                    $(\"#oncoprintInstructions\").hide();\n                  });  \n                }           \n            } // displayOncoprint\n           \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx\") >= 0\n                });\n        \n                // Patient Data\n                var rawPatientData = response.payload.tbl;\n                var mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n   \n  \n                $scope.$watchGroup(['vm.geneAndPatients'], function() {\n                   drawOncoprint(vm.geneAndPatients);\n                });  \n                 osApi.setBusy(false);\n            });\n\n\n            var _state = \"\";\n            var setState = function(value){\n              if (_state==value) return;\n              switch(value){\n                case \"instructions\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n                case \"control\":\n                  elControl.show();\n                  elInstructions.hide();\n                  elLegend.show();\n                  break;\n                case \"errors\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n              }\n              \n            }\n            \n            // API Call To oncoprint_data_selection\n            var drawOncoprint = function(msg) {\n\n                if ((selectedPatientIds == null) || (selectedGeneIds == null) ){\n                  setState(\"instructions\");\n                  return;\n                } \n              \n                var geneAndPatients = msg;\n                geneAndPatients = geneAndPatients.split(',');\n\n                if(geneAndPatients.length > 350){\n                  vm.errorMessage = \"ERROR: The total number of Patients and Genes are set to be less than 350.\";\n                  setState(\"errors\");\n                }else{\n                  osApi.setBusy(true);\n                  osApi.getOncoprint(geneAndPatients);\n                  osApi.getOncoprint(geneAndPatients).then(function(response) {\n                      var payload = response.payload;\n                      displayOncoprint(payload);\n                      setState(\"control\");\n                      osApi.setBusy(false);\n                  });\n                }\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n    \n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, osHistory, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Window Listeners // Todo: Need To Remove On $destroy\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n            angular.element($window).bind('click', \n                function(){\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = false;\n                        vm.optCtxPatientShow = false;\n                    });\n                }\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi, $timeout, _);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n\n                // Initialize Commands\n                initializeCommands(cyChart, vm, $window);\n\n                // Initialize History\n                initializeHistory(cyChart, osHistory, _, $scope);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }          \n        function initializeCommands(chart, vm, $window){\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n            vm.optCommandPatient = [\n                {name:\"Show Edges\", cmd:function(){\n                    vm.optCommandPatient.selected.select();\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(){\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Genes\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected.select();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"Deselect Associated Genes\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Oncoprint\", cmd:function(){\n\n                    if (vm.datasource==\"DEMOdz\") return;\n                    if (vm.datasource.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = vm.datasource.substr(4) + \"_tcga\";\n                        var genes = vm.optCommandPatient.selected.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $window.open(url);\n                    }\n                    vm.optCtxPatientShow = false;\n                }}\n            ];\n            vm.optCommandGene = [\n                {name:\"Show Edges\", cmd:function(){\n                    vm.optCommandGene.selected.select();\n                    \n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(){\n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Patients\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandGene.selected.select();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxGeneShow = false;\n                }},\n                {name:\"Deselect Associated Patients\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Gene Card\", cmd:function(){\n                    $window.open(\"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+vm.optCommandGene.selected.data().name);\n                    vm.optCtxGeneShow = false;\n                }}\n            ];\n            vm.optCommands = {\n                 \"zoomReset\" : function(){\n                    chart.fit();\n                    chart.center();\n                },\n                \"zoomFit\" : function(){\n                    chart.fit( chart.$(':selected'), 50 )\n                },\n                \"showPatientsInCommon\": function(){\n                    var geneNodes = chart.$('node[nodeType=\"gene\"]:selected');\n                    var geneNames = geneNodes.map(function(item){ return item.data().name; });\n                    var patientNodes = geneNodes.neighborhood(\"node\");\n\n                    chart.startBatch();\n                    patientNodes.filter(function(i, patient){\n                        var patientGeneNames = patient.neighborhood(\"node\").map(function(item){ return item.data().name; })\n                        geneNames.forEach(function(geneName){\n                            if (patientGeneNames.indexOf(geneName)==-1) return false;\n                        })\n                        return true;\n                    }).forEach( function(ele){\n                        ele.select();\n                    });\n                    chart.endBatch();\n                },\n                \"showGenesInCommon\": function(){\n                    var patientNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                    var genes;\n\n                    patientNodes.each(function(i, ele){\n                        var patientGenes = ele.neighborhood(\"node\").map( function(item){ return item.data().name; });\n                        if (i==0) genes = patientGenes;\n                        else{\n                            genes = genes.filter(function(gene){\n                                return patientGenes.indexOf(gene)>=0;\n                            }, patientGenes)\n                        }\n                    })\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach(function(node){\n                            if (genes.indexOf(node.data().name)>=0){\n                                node.select();\n                            }\n                        });\n                    chart.endBatch();\n\n                },\n                \"showPatientEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"hidePatientEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'none'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"showGeneEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"hideGeneEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'none'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"selectConnectedGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectConnectedPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"invertPatientSelection\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"invertGeneSelection\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"invertAll\": function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectAll\" : function(){\n                    chart.startBatch();\n                    chart.$('node:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"hideAllEdges\" : function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]').forEach(function(item){\n                        this[item.id()] = {display:'none'};\n                    }, degmap);\n                    chart.batchData(degmap);\n                }\n            };\n        }\n        function initializeViewModel(vm, $stateParams){\n\n            vm.datasource = $stateParams.datasource;\n            vm.optCommandGene = false;\n            vm.optCtxGeneShow;\n            vm.optCommandPatient;\n            vm.optCtxPatientShow = false;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.optCommands;\n            vm.patient;\n            vm.gene;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeHistory(chart, osHistory, _, $scope){\n\n            // History Integration\n            var selectedGeneIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n            var selectedPatientIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n\n            function saveSelectedGenes(){\n                var ids = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                if (_.difference(ids, selectedGeneIds).length==0) return;\n                if(ids.length>0) osHistory.addGeneSelection(\"Markers + Patients\", \"Manual\", ids);\n            }\n\n            function saveSelectedPatients(){\n                var ids = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                if (_.difference(ids, selectedPatientIds).length==0) return;\n                if(ids.length>0) osHistory.addPatientSelection(\"Markers + Patients\", \"Manual\", ids);\n            }\n\n            chart.on('select', 'node[nodeType=\"gene\"]', _.debounce(saveSelectedGenes, 900));\n            chart.on('select', 'node[nodeType=\"patient\"]', _.debounce(saveSelectedPatients, 900));\n\n            function setSelectedGenes(){\n                var degmap = [];\n                chart.startBatch();\n                if (selectedGeneIds.length==0){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                            .forEach( function(ele){\n                                ele.deselect();\n                                degmap[ele.id()] = {display:'element'};\n                            }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedGeneIds);\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            }\n            function setSelectedPatients(){\n                var degmap = [];\n                chart.startBatch();\n                if (selectedPatientIds.length==0){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                            .forEach( function(ele){\n                                ele.deselect();\n                                degmap[ele.id()] = {display:'element'};\n                            }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedPatientIds);\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            }\n            setSelectedGenes();\n            setSelectedPatients();\n\n            osHistory.onGeneSelectionChange.add(function(selection){\n                selectedGeneIds = (selection==null) ? null : selection.ids;\n                setSelectedGenes();\n            });\n            osHistory.onPatientSelectionChange.add(function(selection){\n                selectedPatientIds = (selection==null) ? null : selection.ids;\n                setSelectedPatients();\n            });\n\n            \n            \n\n\n\n\n            $scope.$on(\"$destroy\", function() {\n                saveSelectedGenes();\n                saveSelectedPatients();\n                osHistory.removeListeners();\n            });\n\n            return {\n                saveGenes: saveSelectedGenes,\n                savePatients: saveSelectedPatients\n            };\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: .05,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'core',\n                style:{\n                    'selection-box-color': '#3993fa',\n                    'selection-box-border-color': '#3993fa',\n                    'selection-box-border-width': '1px',\n                    'selection-box-opacity': '.2'\n                }\n            },\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 1,\n                    'border-color': '#FFFFFF'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var geneCtx = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var patientCtx = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    geneClick.removeAll();\n                    geneCtx.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    patientClick.removeAll();\n                    patientCtx.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    geneCtx: geneCtx,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    patientCtx: patientCtx,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch)\n                .on('cxttap', 'node[nodeType=\"gene\"]', events.geneCtx.dispatch )\n                .on('cxttap', 'node[nodeType=\"patient\"]', events.patientCtx.dispatch );\n                \n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showGeneCtxMenu: function(e){\n                    vm.optCommandGene.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#gene-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandGene.selected.data().name);\n                    return this;\n                },\n                showPatientCtxMenu: function(e){\n                    vm.optCommandPatient.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#patient-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxPatientShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandPatient.selected.data().name);\n                    return this;\n                },\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        vm.patient = e.cyTarget.attr('patient');\n                        vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                            .map(function(item) { return item.data().id });\n                        $scope.$apply();\n                    }else{\n                        var gene = {\n                            name: e.cyTarget.data().name,\n                            mutation: e.cyTarget.neighbourhood(\"edge[edgeType='mutation']\").length,\n                            cnl1: e.cyTarget.neighbourhood(\"edge[edgeType='cnLoss.1']\").length,\n                            cnl2: e.cyTarget.neighbourhood(\"edge[edgeType='cnLoss.2']\").length,\n                            cng1: e.cyTarget.neighbourhood(\"edge[edgeType='cnGain.1']\").length,\n                            cng2: e.cyTarget.neighbourhood(\"edge[edgeType='cnGain.2']\").length\n                        }\n                        gene.mutations = gene.cnl1 + gene.cnl2 + gene.cng1 + gene.cng2;\n                        vm.gene = gene;\n                        $scope.$apply();\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.gene = vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    var target = (e.cyTarget.data().nodeType == 'patient') ? 'target' : 'source';\n\n                    chart.startBatch();\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this.degmap[item.id()] = {display:'element'};\n                            item[this.target]().css({\n                                'background-color':item.data().color,\n                                'border-color': item.data().color,\n                                'border-width': 60,\n                                'border-opacity': .3\n                            });\n                        }, {degmap:degmap, target:target});\n                    chart.endBatch();\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    var target = (e.cyTarget.data().nodeType == 'patient') ? 'target' : 'source';\n                    var css = { \n                        'background-color': \"\",\n                        'border-color': \"\",\n                        'border-width': \"\",\n                        'border-opacity': \"\"\n                    }\n                    chart.startBatch();\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this.degmap[item.id()] = {display:'none'};\n                            item[target]().style(this.css);\n                        }, {degmap:degmap, css:css, target:target});\n                    chart.endBatch();                        \n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n            {\n                name: 'Commands', //1° When \n                register: function(){\n                    events.geneCtx.add(behaviors.showGeneCtxMenu);\n                    events.patientCtx.add(behaviors.showPatientCtxMenu);\n                    events.over(function(e) {\n                        behaviors.showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors.hidePatientInfo(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    events.removeAll();\n                    chart.batchData(hidePatientEdges);\n                }\n\n            },\n            {\n                name: 'Selection Highlight', //1° When \n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    chart.on('select', 'node', {ui:true}, function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',{ui:true}, function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                    events.over(function(e) {\n                        behaviors.showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors.hidePatientInfo(e);\n                    });\n\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            {\n                name: 'Roll Over Highlight', //1° On \n                register: function() {\n                    // events.click(function(e) {\n                    //     behaviors\n                    //         .showOncoPrint(e)\n                    // });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }\n          ];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: 'purple', //'#FFE11A',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item, stateName){\n                if (item.state == stateName) return;\n                item.state = stateName;\n                var state;\n                switch(stateName){\n                    case \"Highlight\":\n                        state = {'color':item.color, sizeEle:3};\n                        break;\n                    case \"Hide\":\n                        state = {'color':'#FFFFFF', sizeEle:0};\n                        break;\n                    case \"Show\":\n                        state = {'color':'#3993fa', sizeEle:3};\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", state.color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi, $timeout, _){\n            function calculateSelections(){\n                var selectedNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                var sums = {};\n                \n                // Calculate Sums\n                selectedNodes.each(function(index, node){\n                    if ( angular.isUndefined(sums[node.data().color]) ) sums[node.data().color] = 1;\n                    else sums[node.data().color] += 1;\n                });\n\n                // Populate Legand\n                $timeout(function(){\n                    for (var i=0; i<vm.legandNodes.length; i++){\n                        var color = vm.legandNodes[i].color;\n                        vm.legandNodes[i].cnt = angular.isDefined(sums[color]) ? sums[color] : 0;\n                    }\n                });\n            }\n            // Debounce To Avoid Multiple Calls\n            chart.on('select', _.debounce(calculateSelections, 20));\n            chart.on('unselect', _.debounce(calculateSelections, 20))\n            \n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple', cnt:0}, {name:'Female', color:'green', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green', cnt:0}, {name:'Old', color:'red', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)'};\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] , cnt:0} });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n                            break;\n                        }\n                        calculateSelections();\n                    });\n            });\n\n            vm.updateNode = function(item, select){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node[(select)?\"select\":\"deselect\"]();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"#FFFF00\"; //\"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = (value.data.nodeType!==\"gene\");\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = (value.data.nodeType===\"gene\");\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osHistory, $state, $timeout, $scope, moment, $stateParams, _, $, $q) {\n\n            // Redirect if No Datasource\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var vm = this;\n            var table;\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n\n            var initViewState = function(vm){\n                vm.diagnosisMin = vm.diagnosisMinValue = 1;\n                vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n                vm.survivalMin = vm.survivalMinValue = 0;\n                vm.survivalMax = vm.survivalMaxValue = 10;\n                vm.search = \"\";\n            }\n\n            var initDataTable = function(vm, columns, data){\n                \n                // Override Filter Function\n                // angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                //     var survival = parseFloat(data[3]);\n                //     var diagnosis = parseFloat(data[4]);\n                //     if (selectedIds.length!=0) {\n                //         if (selectedIds.indexOf(data[0]) == -1) return false;\n                //     }\n                //     if (isNaN(survival) || isNaN(diagnosis)) return false;\n                //     return (diagnosis >= vm.diagnosisMin &&\n                //         diagnosis < (vm.diagnosisMax + 1) &&\n                //         survival >= vm.survivalMin &&\n                //         survival < (vm.survivalMax + 1));\n                // }];\n\n                // Specify Data\n                \n\n                table = angular.element('#history-datatable').dataTable({\n                            paging: false,\n                            columns: columns,\n                            data: data\n                });\n                table.api().draw();\n            }\n\n            var initEvents = function(vm, $scope){\n                vm.applyFilter = function(filter) {\n                    selectedIds = [];\n                    table.api().draw();\n                    \n                    var o = table._('tr', {\n                        \"filter\": \"applied\"\n                    }).map(function(item) {\n                        return item[0].toString().toUpperCase()\n                    });//.map(function(value){ return [value] });\n                    o = $.map(o, function(value) {\n                        return [value];\n                    });\n                    osHistory.addPatientSelection(\"Patient History\", filter, o);\n                };\n                var init = true;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (init) {\n                        init = false;\n                        return;\n                    }\n                    vm.applyFilter(\"Search\");\n                }, 1000));\n\n                osHistory.onPatientSelectionChange.add(function(selection) {\n                    selectedIds = selection.ids;\n                    table.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n\n            var columns = [\n                {data:'patient_ID', title:'Patient Id', defaultContent:'NA'},\n                {data:'gender', title:'Gender', defaultContent:'NA'},\n                {data:'race', title:'Race', defaultContent:'NA'},\n                {data:'age_at_diagnosis', title:'DX Date', defaultContent:'NA'},\n                {data:'days_to_death', title:'DTD', defaultContent:'NA'}\n            ];\n\n            var ds = osApi.convertDatasetNameFromRToMongo($stateParams.datasource);\n            initViewState(vm);\n            osApi.query(ds+\"_pt\", {$fields:columns.map(function(f){ return f.data; })})\n            .then(function(response){\n               initDataTable(vm, columns, response.data);\n               //initEvents(vm, $scope)\n               osApi.setBusy(false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osGenesettest', genesettest);\n\n    /** @ngInject */\n    function genesettest() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/genesettest/genesettest.html',\n            controller: GenesettestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function GenesettestController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elInput = angular.element(\"#geneSetTestsInputsDiv\");\n            \n            // Properties\n            //var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n\n        \n            var cohort1 = osHistory.getPatientSelections()[0];\n            var cohort2 = osHistory.getPatientSelections()[1];\n\n            // Initialize\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                        return v.indexOf(\"mtx.mrna\") >= 0\n                    });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                console.log(\"**** mtx is: \", mtx);\n\n                if(cohort1 == null || cohort2 == null){\n                    vm.message = \"Please select two cohorts to test out the Gene Set\";\n                    vm.optCohort1 = \"Empty\";\n                    vm.optCohort2 = \"Empty\";\n                }else{\n                    vm.optCohort1 = cohort1.tool + \" \" +cohort1.desc + \" \" + cohort1.ids.length + \" Patients selected\" ;\n                    vm.optCohort2 = cohort2.tool + \" \" +cohort2.desc + \" \" + cohort2.ids.length + \" Patients selected\" ;\n                    var geneset = \"random.24\";\n                    //var geneset = \"tcga.pancan.mutated\";\n                    osApi.getGeneSetTest(vm.datasource, mtx).then(function() {\n                        $scope.$watchGroup(['vm.optCohort1', 'vm.optCohort2'], function() {\n                           calculateGeneSetScore(cohort1, cohort2, geneset);\n                        });  \n                     });   \n                }\n                osApi.setBusy(false);\n            });\n\n            var drawHeatMap = function(pt, genes, expressionData){\n                console.log(expressionData);\n                \n\n                var zValues = JSON.parse(expressionData);\n                var colorscaleValue = [\n                      [1, '#339966'],\n                      [2, '#003333']\n                    ];\n\n                    var data = [{\n                      //x: genes,\n                      y: pt,\n                      z: zValues,\n                      type: 'heatmap',\n                      //colorscale: colorscaleValue,\n                      showscale: true\n                    }];\n\n                    var layout = {\n                      title: 'GeneSet Heatmap',\n                      annotations: [],\n                      xaxis: {\n                        ticks: '',\n                        side: 'top'\n                      },\n                      yaxis: {\n                        ticks: '',\n                        ticksuffix: ' ',\n                        width: 500,\n                        height: 250,\n                        autosize: false\n                      }\n                    };\n\n\n                    Plotly.newPlot('heatMap', data, layout);\n            }\n            var drawHeatMap2 = function(pt, genes, expressionData){\n                   console.log(expressionData);\n            \n                   angular.element('#heatMap').highcharts({\n\n                        chart: {\n                            type: 'heatmap',\n                            marginTop: 40,\n                            marginBottom: 80,\n                            plotBorderWidth: 1,\n                        },\n\n\n                        title: {\n                            text: 'Gene Set Expression Heat Map'\n                        },\n\n                        xAxis: {\n                            // labels: {\n                            //     step: 1\n                            // },\n                            categories: genes\n                        },\n\n                        yAxis: {\n                            lineWidth: 5,\n                            lineColor: '#F33',\n                            categories: pt,\n                            title: null\n                        },\n\n                        colorAxis: {\n                            min: 0,\n                            //minColor:Highcharts.getOptions().colors[7],\n                            minColor: \"#FFFFFF\",\n                            maxColor:'#CC9933'\n                        },\n\n                        legend: {\n                            align: 'right',\n                            layout: 'vertical',\n                            margin: 10,\n                            verticalAlign: 'top',\n                            y: 25,\n                            symbolHeight: 280\n                        },\n\n                        tooltip: {\n                            formatter: function () {\n                                return '<b>' +this.series.yAxis.categories[this.point.y]  + ' '+ \n                                     this.series.xAxis.categories[this.point.x]+ ': ' +this.point.value + '</b>';\n                            }\n                        },\n\n                        series: [{\n                                    name: 'Sales per employee',\n                                    borderWidth: 0,\n                                    data: JSON.parse(expressionData) }]\n                    });\n\n            }    \n            // API Call To oncoprint_data_selection\n            var calculateGeneSetScore = function(cohort1, cohort2, geneset) {    \n                var Group1 = cohort1.ids;\n                var Group2 = cohort2.ids;\n\n                osApi.setBusy(true);\n                osApi.getGeneSetScore(Group1, Group2, geneset).then(function(response){\n                    console.log(response.payload);\n                    if(response.status == \"error\"){\n                        vm.message = response.payload + \"Please select two cohorts to test out the Gene Set\";\n                    }else{\n                        vm.message = response.payload.summary;\n                        var pt = response.payload.pt;\n                        var g = response.payload.genes;\n                        drawHeatMap2(pt, g, response.payload.analysisData);\n                    }\n                    osApi.setBusy(false);\n                });\n             }    \n     }\n    } \n})();   \n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"DEMO (TCGA)\",\n                \"TCGAbrain\": \"Glioma (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Squamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDataExplorer', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/dataexplorer/dataexplorer.html',\n            controller: DataExplorerController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DataExplorerController(osApi, $state, $timeout, $scope, $stateParams, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataSources;\n            vm.dataSource;\n            vm.dataDiseases;\n            vm.dataDisease;\n            vm.dataTables;\n            vm.dataTable;\n            vm.dataFields;\n            vm.dataField;\n            \n            var bar = {\n                chart: {\n                    type: 'discreteBarChart',\n                    height: 450,\n                    margin : {\n                        top: 20,\n                        right: 20,\n                        bottom: 50,\n                        left: 55\n                    },\n                    x: function(d){return d.label;},\n                    y: function(d){return d.value;},\n                    showValues: true,\n                    valueFormat: function(d){\n                        return d3.format(',.4f')(d);\n                    },\n                    duration: 500,\n                    xAxis: {\n                        axisLabel: 'X Axis'\n                    },\n                    yAxis: {\n                        axisLabel: 'Y Axis',\n                        axisLabelDistance: -10\n                    }\n                }\n            };\n\n            var pie = {\n                chart: {\n                    type: 'pieChart',\n                    height: 450,\n                    donut: false,\n                    x: function(d){return d.label; },\n                    y: function(d){return d.value; },\n                    showLabels: false,\n                    pie: {\n                        startAngle: function(d) { return d.startAngle/2 -Math.PI/2 },\n                        endAngle: function(d) { return d.endAngle/2 -Math.PI/2 }\n                    },\n                    duration: 500\n                }\n            };\n\n            vm.chartOptions = bar;\n\n            vm.toolTipContentFunction = function(){\n                return function(key, x, y, e, graph) {\n                        return  'Super New Tooltip' +\n                        '<h1>' + key + '</h1>' +\n                        '<p>' +  y + ' at ' + x + '</p>'\n                }\n            }\n\n                \n\n            vm.xFunction = function(){\n                return function(d) {\n                    return d.label;\n                };\n            }\n            \n            vm.yFunction = function(){\n                return function(d) {\n                    return d.value;\n                };\n            }\n          \n        \n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_collections\").then(function(result){\n\n                vm.dataSources = result.data;\n                vm.dataSource = vm.dataSources[0];\n                \n                $scope.$watch(\"vm.dataSource\", function(){\n                    vm.dataDiseases = vm.dataSource.diseases;\n                    vm.dataDisease = vm.dataSource.diseases[0];\n\n                });\n                $scope.$watch(\"vm.dataDisease\", function(){\n                    vm.dataTables = vm.dataDisease.tables;\n                    vm.dataTable = vm.dataTables[0];\n                });\n                $scope.$watch(\"vm.dataTable\", function(){\n                    osApi.query(\"_field_detail\", {collection:vm.dataTable.collection}).then(function(result){\n                         vm.dataFields = result.data[0].fields.filter(function(field){ return field.key!=\"_id\"; });\n                         vm.dataField = vm.dataFields[0];\n                         console.dir(vm.dataField)\n                    });\n                });\n\n               osApi.setBusy(false);\n               \n            });\n            \n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohorts', cohorts);\n\n    /** @ngInject */\n    function cohorts() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohorts/cohorts.html',\n            controller: CohortsController,\n            scope:{\n                type:\"@\"\n            },\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortsController(osHistory, $state, $timeout) {\n\n            var vm = this;\n            vm.selection;\n            vm.selections;\n            \n            vm.close = function(){\n                angular.element(\".cohorts-\"+vm.type).hide();\n            }\n            vm.setSelection = function(item){\n                osHistory[\"set\"+vm.type+\"Selection\"](item);\n            };\n            var update = function(){\n                $timeout(function() {\n                    vm.selections = osHistory[\"get\"+vm.type+\"Selections\"]();\n                    vm.selection = osHistory[\"get\"+vm.type+\"Selection\"]();\n                    \n                });\n            };\n            \n            osHistory[\"on\"+vm.type+\"Add\"].add(function(){update(true)});            \n            osHistory[\"on\"+vm.type+\"SelectionChange\"].add(function(){update(false)});\n            \n            var isDragable = false;\n            var show = function(){\n                angular.element(\".cohorts-\"+vm.type).show();\n                if (isDragable) return;\n                isDragable = true;\n                angular.element(\".cohorts-\"+vm.type).draggable();\n\n            }            \n\n            // Keypress\n            angular.element(document).keypress(function(e) {\n                if (!e.ctrlKey) return;\n                if(vm.type==\"Gene\"){\n                    switch(e.keyCode){\n                        case 12: show(); break;\n                        case 39: osHistory.getGeneSelectionNext(); break;\n                        case 59: osHistory.getGeneSelectionLast(); break;\n                    }\n                }else{\n                    switch (e.keyCode)\n                    {\n                        case 16: show(); break;\n                        case 27: osHistory.getPatientSelectionLast(); break;\n                        case 29: osHistory.getPatientSelectionNext(); break;                \n                    }\n                }\n                \n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortBuilder', cohortBuilder);\n\n    /** @ngInject */\n    function cohortBuilder() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortbuilder/cohortbuilder.html',\n            controller: CohortBuilderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortBuilderController(osApi, $state, $timeout, $scope, $stateParams, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataSources;\n            vm.dataSource;\n            vm.dataDiseases;\n            vm.dataDisease;\n            vm.dataTables;\n            vm.dataTable;\n            vm.dataFields;\n\n            vm.toolTipContentFunction = function(){\n                return function(key, x, y, e, graph) {\n                        return  'Super New Tooltip' +\n                        '<h1>' + key + '</h1>' +\n                        '<p>' +  y + ' at ' + x + '</p>'\n                }\n            }\n\n                \n\n            vm.xFunction = function(){\n                return function(d) {\n                    return d.label;\n                };\n            }\n            \n            vm.yFunction = function(){\n                return function(d) {\n                    return d.value;\n                };\n            }\n          \n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_collections\").then(function(result){\n                \n                // Transform DataSources\n                var data = result.data;\n                vm.dataSources = \n                    _.chain(data).pluck(\"source\").uniq().map(function(v){return { name:v,\n                        diseases:_.chain(data).where({source:v}).pluck(\"disease\").uniq().map(function(v){ \n                            return { name:v,\n                                tables: _.chain(data).where({source:\"tcga\",disease:v}).map(function(v){ \n                                    return {created:v.created, name:v.table, records:v.records, collection:v.collection}} ).value()\n                            };}).value()\n                    };}).value();\n                vm.dataSource = vm.dataSources[0];\n                \n                $scope.$watch(\"vm.dataSource\", function(){\n                    vm.dataDiseases = vm.dataSource.diseases;\n                    vm.dataDisease = vm.dataSource.diseases[0];\n\n                });\n                $scope.$watch(\"vm.dataDisease\", function(){\n                    vm.dataTables = vm.dataDisease.tables;\n                    vm.dataTable = vm.dataTables[0];\n                    \n                });\n                $scope.$watch(\"vm.dataTable\", function(){\n                    console.log(osApi.queryString(\"_stats\", {collection:vm.dataTable.collection}));\n                    osApi.query(\"_stats\", {collection:vm.dataTable.collection}).then(function(result){\n                        vm.dataFields = result.data[0].fields;\n                    });\n                });\n\n               osApi.setBusy(false);\n               \n            });\n            \n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osApiExplorer', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/apiexplorer/apiexplorer.html',\n            controller: ApiExplorerController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ApiExplorerController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n          \n            // Elements\n            //var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            var start = new Date().getTime();\n            osApi.query(\"TCGA_BRCA_PT\",\n                {\n                    gender:'MALE'\n                }).then(function(e){\n               debugger;\n            });\n            \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            // if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n            //      $state.transitionTo(\"landing\");\n            //      event.preventDefault();\n            // }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('dataexplorer', {\n                url: '/dataexplorer/{datasource}',\n                template: '<os-data-explorer>',\n                authenticate: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: true\n            })\n            .state('genesettest', {\n                url: '/genesettest/{datasource}',\n                template: '<os-genesettest>',\n                authenticate: true\n            })\n            .state('cohortbuilder', {\n                url: '/cohortbuilder/{datasource}',\n                template: '<os-cohort-builder>',\n                authenticate: true\n            })\n           \n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n    \n    \n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/apiexplorer/apiexplorer.html\",\"Hello There\");\n$templateCache.put(\"app/components/cohortbuilder/cohortbuilder.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content cohortbuilider\\\"><div class=\\\"row\\\"></div></section></os-tray><section class=\\\"tray-content-block dataexplorer\\\"><div class=\\\"container-fluid\\\"><h2>Cohort Builder</h2><button>+</button> <button>-</button></div></section>\");\n$templateCache.put(\"app/components/cohorts/cohorts.html\",\"<div class=\\\"cohorts panel panel-default cohorts-{{vm.type}}\\\"><div class=\\\"panel-heading\\\">{{vm.type}} History <span class=\\\"pull-right fa fa-times\\\" ng-click=\\\"vm.close()\\\"></span></div><div class=\\\"panel-body cohorts-panel-body\\\"><table><tr ng-click=\\\"vm.setSelection(item)\\\" ng-repeat=\\\"item in vm.selections\\\" ng-class=\\\"{\\'cohort-selected\\' : item==vm.selection}\\\"><td>{{item.tool}}</td><td>{{item.desc}}</td><td>{{item.ids.length}}</td></tr></table></div></div>\");\n$templateCache.put(\"app/components/dataexplorer/dataexplorer.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content dataexplorer\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Data Source</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Origin</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataSource.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataSources\\\" ng-click=\\\"vm.dataSource = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Disease</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataDisease.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataDiseases\\\" ng-click=\\\"vm.dataDisease = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Table</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataTable.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataTables\\\" ng-click=\\\"vm.dataTable = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Field</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataField.key}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataFields\\\" ng-click=\\\"vm.dataField = item\\\">{{item.key}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Table Info</h2><dl><dt>Date Uploaded</dt><dd>{{vm.dataTable.created}}</dd><dt>Record Count</dt><dd>{{vm.dataTable.records}}</dd><dt>Field Count</dt><dd>{{vm.dataFields.length}}</dd></dl></div></div></section></os-tray><section class=\\\"tray-content-block dataexplorer\\\"><div class=\\\"container-fluid\\\"><h2>Data Explorer</h2><div ng-repeat=\\\"item in vm.dataFields\\\" class=\\\"data-field\\\"><b>{{item.key}}</b><div style=\\\"width:30%; margin-top:10px\\\">{{item.name}}. {{item.desc}}</div><nvd3 options=\\\"vm.chartOptions\\\" data=\\\"item.values\\\"></nvd3></div></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/genesettest/genesettest.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><script src=\\\"https://cdn.plot.ly/plotly-latest.min.js\\\"></script><script src=\\\"/bower_components/highcharts/modules/heatmap.js\\\"></script><script src=\\\"/bower_components/highcharts/modules/exporting.js\\\"></script><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohort 1</label><p>{{vm.optCohort1}}</p></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohort 2</label><p>{{vm.optCohort2}}</p></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Gene Set Binomial Test</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"geneSetTestsModuleDiv\\\" class=\\\"genesettest\\\"><div id=\\\"geneSetTests_Div\\\"><div id=\\\"geneSetTestsControlsDiv\\\"><div class=\\\"navbar-collapse collapse navbar-inverse-collapse\\\"><div id=\\\"geneSetTestsInputsDiv\\\"><div id=\\\"geneSetTestsLaunchButtonDiv\\\"><form><div>{{vm.message}}</div><div id=\\\"heatMap\\\"></div></form></div></div></div></div></div></div></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Diagnosis\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Survival\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"></table></div></section>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Patients</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Genes\\\" ng-click=\\\"vm.optCommands.selectConnectedGenes()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Patient Selection\\\" ng-click=\\\"vm.optCommands.invertPatientSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Patients\\\" ng-click=\\\"vm.optCommands.selectPatients()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Patients\\\" ng-click=\\\"vm.optCommands.deselectPatients()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Patient Edges\\\" ng-click=\\\"vm.optCommands.showPatientEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Edges\\\" ng-click=\\\"vm.optCommands.hidePatientEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showGenesInCommon()\\\">Select Genes In Common</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Genes</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Patients\\\" ng-click=\\\"vm.optCommands.selectConnectedPatients()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Gene Selection\\\" ng-click=\\\"vm.optCommands.invertGeneSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Genes\\\" ng-click=\\\"vm.optCommands.selectGenes()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Genes\\\" ng-click=\\\"vm.optCommands.deselectGenes()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.showGeneEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.hideGeneEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showPatientsInCommon()\\\">Select Patients In Common</li></ul></div></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Global</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.invertAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Invert Selections\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.deselectAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Deselect All\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.hideAllEdges()\\\" style=\\\"width:33.333%\\\" title=\\\"Hide All Edges\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomReset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomFit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Fit</button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}};position:relative\\\">{{item.name}} ({{item.cnt}} Selected)<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, true); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};border-color:red;\\\"></div><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, false); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Edge Options</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" style=\\\"position:relative\\\">{{item.name}}<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Highlight\\'); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Show\\'); $event.stopPropagation();\\\" style=\\\"background-color:#3993fa\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Hide\\'); $event.stopPropagation();\\\" style=\\\"background-color:#FFF\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Patient Id\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Gene Name\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><ul id=\\\"gene-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxGeneShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandGene\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><ul id=\\\"patient-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxPatientShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandPatient\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><section ng-show=\\\"vm.gene\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.gene.name}}</li><li>CnGain.1: {{vm.gene.cng1}}</li><li>CnGain.2: {{vm.gene.cng2}}</li><li>CnLoss.1: {{vm.gene.cnl1}}</li><li>CnLoss.2: {{vm.gene.cnl2}}</li></ul></div></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"></span> <span class=\\\"oncoprint-label-col1\\\" id=\\\"legend\\\"></span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"font-size:150%\\\">Please select and send up to 350 genes and patients from another tab, such as Markers and Patients, to populate the display.</div><div id=\\\"oncoprintErrorSection\\\" style=\\\"font-size:150%\\\" ng-show=\\\"vm.errorMessage!=\\'\\'\\\">{{vm.errorMessage}}</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Patients Display</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span> <span class=\\\"tool-menu-beta\\\" ng-if=\\\"tool.beta\\\" style=\\\"color:red\\\">(Beta)</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}