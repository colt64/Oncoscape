{"version":3,"sources":["scripts/app-51b25de2f4.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","isUndefined","datasource","go","getTools","explore","tool","toolmenu","ToolMenuController","timelines","TimelinesController","osHistory","$scope","$window","$document","moment","d3","saveSelected","selectedIds","d3Bars","selectAll","map","p","__data__","id","length","addPatientSelection","optCohortMode","name","draw","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","selShow","selPatient","selEvent","selFields","optCohortModes","timescaleunit","timescales","timescale","features","feature","filters","filter","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","getPatientSelection","ids","zoomed","event","shiftKey","scale","translate","ch","rh","patients","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","brushing","onBrushStart","sourceEvent","target","clear","call","onBrush","extent","lower","floor","upper","each","d","i","firstChild","classed","onBrushEnd","hRow","hChart","wChart","innerWidth","processData","bounds","nice","rows","data","exit","remove","enter","on","transform","selected","indexOf","e","cols","filteredEvents","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","daysToUnit","tlScale","svg","axis","orient","ticks","tickFormat","pow","behavior","processedData","patient","dead","hasOwnProperty","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","start","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","v","__color","processFeatureData","processPatientData","key","val","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","then","getTimelines","response","log","duration","asDays","payload","pts","eventTypes","Status","Dead","unshift","$watchGroup","$watch","onPatientSelectionChange","add","selection","resize","updateEventColor","item","test","TestController","message","datasets","getDataSetNames","login","SubnavController","toolsClick","cohortClick","toggleFilter","survival","SurvivalController","getPatientHistoryTable","tbl","getCalculatedSurvivalCurves","r","PlsrController","$sce","_","addGeneSelection","node","toUpperCase","setSelected","xScale","yScale","xMax","yMax","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","onGeneSelectionChange","setScale","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","rawData","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","addEventListener","pathways","PathwaysController","cytoscape","skipSave","csChart","$","ele","startBatch","deselect","endBatch","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","search","linkTitle","links","center","term","len","nodes","unselect","substr","getPathway","fromJson","container","elements","maxZoom","layout","fit","cyTarget","source","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","getCalculatedPCA","osSound","beep","_beep","play","Audio","service","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","getDataSource","setDataSource","requestId","getRequestId","socket","protocol","host","port","debug","devel","onmessage","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","$http","req","query","table","encodeURIComponent","JSON","stringify","method","signals","_geneSelections","desc","_geneIndex","_patientSelections","_patientIndex","_onPatientAdd","Signal","_onPatientSelectionChange","_onGeneAdd","_onGeneSelectionChange","setGeneSelection","dispatch","getGeneSelections","difference","time","format","getGeneSelectionLast","getGeneSelectionNext","setPatientSelection","getPatientSelections","getPatientSelectionLast","getPatientSelectionNext","removeListeners","_geneSelection","_patientSelection","api","onPatientAdd","onGeneAdd","osSocket","osHttp","_dataSource","onDataSource","userApi","onLogin","onLogout","_user","password","authenticated","token","_domains","logout","user","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","route","img","copy","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","MetadataController","colnames","dtTable","dataTable","paging","markers","MarkersController","cyChart","initializeViewModel","optCtxGeneShow","optCtxPatientShow","loadData","styles","initializeStyles","initializeChart","initializeLayouts","initializeNodeColors","initializeEdgeColors","initializeEvents","initializeSearch","initializeZoom","initializeCommands","initializeHistory","chart","searchGene","geneSearchResult","matches","found","toLowerCase","searchGeneResult","searchPatient","searchPatientResult","optInteractiveMode","optInteractiveModes","optCommandPatient","degmap","neighborhood","batchData","cbioDsName","n","join","open","optCommandGene","optCommands","zoomReset","zoomFit","showPatientsInCommon","geneNodes","geneNames","patientNodes","patientGeneNames","geneName","showGenesInCommon","patientGenes","gene","showPatientEdges","hidePatientEdges","showGeneEdges","hideGeneEdges","selectConnectedGenes","selectConnectedPatients","selectPatients","selectGenes","deselectPatients","deselectGenes","invertPatientSelection","_private","invertGeneSelection","invertAll","deselectAll","hideAllEdges","optPatientLayouts","optPatientLayout","optNodeColors","optNodeColor","optEdgeColors","legandNodes","legandPatient","legandChromosomes","optCohortPatients","optCohortPatient","optCohortGenes","optCohortGene","saveSelectedGenes","selectedGeneIds","saveSelectedPatients","selectedPatientIds","setSelectedGenes","setSelectedPatients","$on","saveGenes","savePatients","el","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","label","geneOver","geneOut","geneClick","geneCtx","patientOver","patientOut","patientClick","patientCtx","removeAll","over","out","click","behaviors","showGeneCtxMenu","oe","originalEvent","elMenu","css","left","top","find","showPatientCtxMenu","showPatientInfo","nodeType","patientChromosomes","mutation","neighbourhood","cnl1","cnl2","cng1","cng2","mutations","hidePatientInfo","showDegreeOne","border-opacity","hideDegreeOne","showDegreeTwo","hideDegreeTwo","states","register","unregister","edge","ui","off","next","colors","state","colorMap","cnGain.1","cnLoss.1","cnGain.2","cnLoss.2","edges","sizeEle","updateEdge","stateName","font","ceil","sizeBdr","degree","sizeLbl","calculateSelections","selectedNodes","sums","cnt","gender","age","s","split","ii","updateNode","angle","cos","sin","cb","dataMarkers","hobo","locked","selectable","grabbable","edgeType","LoginController","domains","hasError","landing","LandingController","history","HistoryController","initViewState","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","initDataTable","fn","DataTable","ext","settings","parseFloat","diagnosis","isNaN","columns","c","initEvents","applyFilter","o","init","help","HelpController","videos","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","footer","FooterController","CompareController","DatasourceController","nameMap","DEMOdz","TCGAbrain","TCGAbrca","TCGAcoadread","TCGAgbm","TCGAhnsc","TCGAlgg","TCGAluad","TCGAlung","TCGAlusc","TCGApaad","TCGAprad","UWbrain","MSKbrain","cohorts","CohortsController","selections","close","type","setSelection","scroll","isDragable","draggable","document","keypress","ctrlKey","console","keyCode","ApiExplorerController","Date","getTime","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","toState","run","routerConfig","$stateProvider","$urlRouterProvider","template","authenticate","otherwise","config","constant","prototype","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"CAAA,WACI,YAEAA,SACKC,OAAO,aACJ,YACA,YACA,UACA,aACA,aACA,SACA,aACA,YACA,eACA,iBACA,2BACA,cAKZ,WACI,YAOA,SAASC,KAqBL,QAASC,GAAeC,GAGpB,GAAIC,GAAKC,IACTD,GAAGE,UAAYC,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACpDN,EAAGO,UAAYJ,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAGpD,IAAIE,IAAW,CACfR,GAAGS,OAAS,WACR,GAAIC,GAASf,QAAQgB,QAAQ,IAAIX,EAAGE,WAChCU,EAASjB,QAAQgB,QAAQ,IAAIX,EAAGO,WAChCM,EAAYlB,QAAQgB,QAAQ,IAAIX,EAAGc,QAEvCN,IAAYA,EACZI,EACKG,SAASP,EAAW,UAAY,iBAChCQ,YAAYR,EAAW,gBAAkB,WAE9CE,EAAOO,KAAK,SAAUT,EAAW,OAAS,SAEtCA,GACAK,EACKG,YAAY,gCACjBN,EACKQ,OAAO,YAAaC,GACpBD,OAAO,WAAYE,GACnBJ,YAAY,kBACjBjB,EAAS,WACLC,EAAGqB,aAIPR,EACKE,SAAS,gCACdL,EACKK,SAAS,kBACTO,KAAK,YAAaH,GAClBG,KAAK,WAAYF,GACtBrB,EAAS,WACLC,EAAGqB,YAOf,IAAIF,GAAY,WACZxB,QAAQgB,QAAQ,IAAIX,EAAGE,WAClBc,YAAY,mBAEjBI,EAAW,WACXzB,QAAQgB,QAAQ,IAAIX,EAAGE,WAClBa,SAAS,mBAxEtBjB,EAAeyB,SAAW,WAA1B,IAAIC,IACAC,SAAU,IACVC,YAAa,gCACbC,OACIC,QAAS,IACTd,QAAS,IACTO,OAAQ,KAGZQ,WAAY/B,EACZgC,aAAc,KACdC,kBAAkB,EAClBC,SAAS,EACTC,YAAY,EAGhB,OAAOT,GAvBX7B,QACKC,OAAO,aACP4B,UAAU,SAAU3B,MAsF7B,WACI,YAOA,SAASqC,KAaL,QAASC,GAAgBC,EAAOC,EAAQC,GAEpC,GAAI3C,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAId,IAAIzC,GAAKC,IACTD,GAAGwC,WAAaF,EAAaE,WAC7BxC,EAAGkC,MAAQE,EAAMM,WACjB1C,EAAG2C,QAAU,SAASC,EAAMJ,GACxBH,EAAOI,GAAGG,GACNJ,WAAYA,KAtBxBL,EAAgBZ,SAAW,QAAS,SAAU,eAD9C,IAAIC,IACAC,SAAU,IACVC,YAAa,kCACbG,WAAYM,EACZL,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,UAAWU,MAoC9B,WACI,YAOA,SAASW,KAiBL,QAASC,GAAmBV,EAAOC,GAG/B,GAAIlB,GAAY,WACZxB,QAAQgB,QAAQ,cACXK,YAAY,wBAGjBI,EAAW,WACXzB,QAAQgB,QAAQ,cACXI,SAAS,wBAGdL,EAASf,QAAQgB,QAAQ,aACzBD,GACKY,KAAK,YAAaH,GAClBG,KAAK,WAAYF,EAE1B,IAAIpB,GAAKC,IACTD,GAAGkC,MAAQE,EAAMM,WACjB1C,EAAG2C,QAAU,SAASC,GAClB5C,EAAGqB,SACHgB,EAAOI,GAAGG,GACNJ,WAAYxC,EAAGwC,cApC3BM,EAAmBvB,SAAW,QAAS,SAFvC,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbG,WAAYiB,EACZhB,aAAc,KACdH,OACIa,WAAY,IACZnB,OAAQ,KAEZU,kBAAkB,EAGtB,OAAOP,GAnBX7B,QACKC,OAAO,aACP4B,UAAU,aAAcqB,MAmDjC,WACI,YAOA,SAASE,KAaL,QAASC,GAAoBZ,EAAOa,EAAWZ,EAAQa,EAAQZ,EAAca,EAASC,EAAWC,EAAQC,GAyDrG,QAASC,KACLC,EAAcC,EAAOC,UAAU,sBAAsB,GAAGC,IAAK,SAAUC,GAAK,MAAOA,GAAEC,SAASC,KACtE,GAApBN,EAAYO,SAAWP,EAAcC,EAAOC,YAAY,GAAGC,IAAK,SAAUC,GAAK,MAAOA,GAAEC,SAASC,MACrGb,EAAUe,oBAAoB,YAAa,mBACvCR,GAEuB,UAAvBxD,EAAGiE,cAAcC,MAAgBC,IA7DzC,GAAIxE,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAKd,IAAI2B,GACAC,EACAC,EACAC,EACAC,EACAC,EAAU,EAIVzE,EAAKC,IACLD,GAAG0E,SAAU,EACb1E,EAAG2E,WACH3E,EAAG4E,SACH5E,EAAG6E,aACH7E,EAAGwC,WAAaF,EAAaE,WAC7BxC,EAAG8E,eACH9E,EAAGiE,cACHjE,EAAG+E,cACH/E,EAAGgF,WACHhF,EAAGiF,UACHjF,EAAGkF,SACHlF,EAAGmF,QACHnF,EAAGoF,QACHpF,EAAGqF,OACHrF,EAAGsF,OACHtF,EAAGuF,MACHvF,EAAGwF,KACHxF,EAAGyF,MACHzF,EAAG8E,iBAAmBZ,KAAK,cAAcA,KAAK,WAC9ClE,EAAGiE,cAAgBjE,EAAG8E,eAAe,EAGzC,IA0BIY,GAyBAC,EAnDAC,EAAUjG,QAAQgB,QAAQ,oBAC1BkF,EAAUvC,EAAGwC,OAAO,oBAAoBC,OAAO,OAC9C9E,KAAK,KAAM,SACX+E,OAAOC,MAAM,SACdC,EAASL,EAAQE,OAAO,KACvB9E,MAAMkF,QAAQ,SACdH,OAAOI,kBAAmB,aAAaC,eAAgB,MAAOC,OAAU,OAAOC,KAAQ,SACxFC,EAAYX,EAAQE,OAAO,OAC1B9E,MAAMkF,QAAQ,aACfM,EAAmBD,EAAUT,OAAO,QACnC9E,MAAMgF,MAASL,EAAQK,QAASS,OAAUvD,EAAQwD,YAAc,GAAK,GAAK,IAAI,KAC9EX,OAAOO,KAAK,YACb9C,EAAS+C,EAAUT,OAAO,KACzB9E,MAAMkF,QAAQ,SAGf3C,EAAkD,MAAnCP,EAAU2D,sBAAiC,KAAO3D,EAAU2D,sBAAsBC,IAWjGC,EAAS,WACT,IAAIxD,EAAGyD,MAAMC,SAAb,CAEA,GAAIC,GAAQxC,EAAUnB,EAAGyD,MAAME,KACrBxC,GAANwC,IAAeA,EAAQxC,EAC3B,IAAIyC,GAAW5D,EAAGyD,MAAMG,UAAU,GAE9BC,EAAKhE,EAAQwD,YAAc,GAAK,GAAK,IAAK,GAC1CS,EAAoC,GAA9BhD,EAAciD,SAAStD,OAAakD,EAC1CK,EAAKH,EAAKC,CAEVF,GAAU,IAAGA,EAAU,GACbI,EAAVJ,IAAcA,EAAUI,GAE5B5B,EAAKwB,WAAW5D,EAAGyD,MAAMG,UAAU,GAAGA,GACtC,IAAIK,GAAQ,GAAKN,EACbO,EAAeL,EAAKI,EACpBE,EAAYtH,KAAKuH,IAAIR,EAAYK,EACnC5B,GAAMgC,EAAErE,EAAG2D,MAAMW,SAASC,OAAO,EAAEV,IAAKW,QAAQL,EAAWA,EAAUD,KAGvE/D,EAAOxC,KAAK,YAAY,eAAeiG,EAAU,YAAcD,EAAQ,OAIvEc,GAAW,EACXC,EAAe,WACV1E,EAAGyD,MAAMkB,YAAYjB,SAItBe,GAAW,GAHXzE,EAAGyD,MAAMmB,OAAOC,QAChB7E,EAAGwC,OAAO7F,MAAMmI,KAAK9E,EAAGyD,MAAMmB,UAKlCG,EAAU,WACV,GAAKN,EAAL,CACA,GAAIO,GAAS3C,EAAM2C,SACfC,EAAQpI,KAAKqI,MAAMF,EAAO,GAAG,IAC7BG,EAAQtI,KAAKqI,MAAMF,EAAO,GAAG,GACjC7E,GAAOC,UAAU,cACZgF,KAAM,SAASC,EAAGC,GACftF,EAAGwC,OAAO7F,KAAK4I,YAAYC,QAAQ,oBAAsBF,GAAGL,GAAYE,GAAHG,OAG7EG,EAAa,WACRhB,IACLA,GAAW,EACXzE,EAAGyD,MAAMmB,OAAOC,QAChB7E,EAAGwC,OAAO7F,MAAMmI,KAAK9E,EAAGyD,MAAMmB,QAC9B3E,MAIAY,EAAO,WAGP,GAAI6E,GAAO,GACPC,EAAS9F,EAAQwD,YAAc,GAAK,GAAK,IACzCuC,EAAS/F,EAAQgG,WAAa,GAC9BD,GAAS,MAAMA,GAAU,KACsB,SAA/CvJ,QAAQgB,QAAQ,eAAeM,KAAK,YACpCiI,GAAU,KAGd9E,EAAgBgF,EAAY/E,EAAcrE,EAAGyF,MAAOzF,EAAGwF,MACvDjB,EAAWjB,EAAG2D,MAAMW,SAASE,OAAQ1D,EAAciF,QAASxB,OAAO,GAAIqB,EAAO,KAAKI,OACnF9E,EAAWlB,EAAG2D,MAAMW,SAASE,QAAQ,EAAG1D,EAAciD,SAAStD,SAAS8D,MAAM,EAAEoB,EAAO,IAAIK,OAC3F7E,GAAWwE,EAAO,KAAuC,GAAhC7E,EAAciD,SAAStD,QAGhD8B,EAAQ5E,MAAOyF,OAAUuC,EAAO,OAChCzC,EAAUvF,MAAOyF,OAAYuC,EAAO,GAAI,KAAMhD,MAAQiD,EAAO,OAC7DzC,EAAiBxF,MAAOyF,OAAYuC,EAAO,GAAI,KAAMhD,MAAQiD,EAAO,OACpEzF,EAAOxC,KAAK,YAAY,WAAawD,EAAU,IAG/C,IAAI8E,GAAO9F,EAAOC,UAAU,cAAc8F,KAAMpF,EAAciD,SAC1DkC,GAAKE,OAAOC,SACZH,EAAKI,QAAQ5D,OAAO,KAAK9E,MAAOkF,QAAU,aACrCyD,GAAG,YAAa,WACRtG,EAAGyD,MAAMC,UAAUvD,EAAOC,UAAU,sBAAsBoF,QAAQ,qBAAqB,KAI/F7H,MACGgF,MAASiD,EACTxC,OAAUsC,EACVa,UAAa,SAASlB,EAAGC,GAAK,MAAO,eAAmBA,EAAII,EAAO,OAEtEjD,OAAO,QACP9E,MACGkF,QAAS,eACTF,MAAS,EACTS,OAAUsC,IAIS,aAAvBhJ,EAAGiE,cAAcC,MAAqBV,EAAYO,OAAO,EACzDwF,EACKb,KAAM,SAASC,GACZ,GAAImB,GAAYtG,EAAYuG,QAAQpB,EAAE7E,KAAK,EACvCkG,EAAI1G,EAAGwC,OAAO7F,KAAK4I,WACvBmB,GAAElB,QAAQ,oBAAqBgB,KAGvCP,EACKb,KAAM,WACH,GAAIsB,GAAI1G,EAAGwC,OAAO7F,KAAK4I,WACvBmB,GAAElB,QAAQ,qBAAqB,IAK/C,IAAImB,GAAOV,EAAK7F,UAAU,cAAc8F,KAAM,SAASb,GAAK,MAAOA,GAAEuB,gBACjED,GAAKR,OAAOC,SACZO,EAAKN,QAAQ5D,OAAO,QAAQ9E,MAAMkF,QAAQ,UACrCyD,GAAG,YAAa,WACT,GAAI7C,GAAQzC,EAAWrE,KAAK4D,SAASC,GACrC9D,GAAG2E,WAAaoC,EAAMoD,UACtBnK,EAAG4E,SAAWmC,EAAMqD,IACpB,IAAIC,KACJ,KAAI,GAAIC,KAASvD,GAAMwD,OACM,MAArBxD,EAAMwD,OAAOD,KACD,QAAPA,GAAiB3K,QAAQ6K,QAAQzD,EAAMwD,OAAOD,KAC/CD,EAAOI,MAAOvG,KAAK,aAAcwG,MAAM3D,EAAMwD,OAAOD,GAAO,KAC3DD,EAAOI,MAAOvG,KAAK,YAAawG,MAAM3D,EAAMwD,OAAOD,GAAO,MAE1DD,EAAOI,MACFvG,KAAKoG,EAAOI,MAAM3D,EAAMwD,OAAOD,KAKhDtK,GAAG0E,SAAU,EACb1E,EAAG6E,UAAYwF,EACfnH,EAAOyH,WAEVf,GAAG,WAAY,WACZ5J,EAAG0E,SAAU,EACbxB,EAAOyH,WAEnBV,EAAKW,aACA5E,OAAOO,KAAO,SAASoC,GAAI,MAAOA,GAAEkC,SACpC5J,MACGyF,OAAS,SAASiC,GAAI,MAAkB,aAAVA,EAAEzE,MAA+B,QAARyE,EAAEzE,KAAgB8E,EAAK,EAAIA,GAClF/C,MAAQ,SAAS0C,GAAI,MAAoB,OAAZA,EAAEmC,SAAkB,EAAKvG,EAASoE,EAAEmC,UAAYvG,EAASoE,EAAEoC,aACxFC,EAAK,SAASrC,GAAK,MAAOxI,MAAK8K,MAAM1G,EAASoE,EAAEoC,cAChDpD,EAAK,SAASgB,GAAK,MAAmB,aAAVA,EAAEzE,KAAuB8E,EAAK,EAAI,IAGtE,IAAIkC,GAAa,SAASvC,GACtB,MAAiB,IAAbxI,KAAKuH,IAAIiB,GAAcA,EACvBxI,KAAKuH,IAAIiB,GAAG,GAAWA,EAAE,QACzBxI,KAAKuH,IAAIiB,GAAG,IAAYxI,KAAK8K,MAAQtC,EAAE,KAAQ,IAAO,GAAK,UACxDxI,KAAK8K,MAAQtC,EAAE,IAAO,IAAO,GAAK,UAEzCwC,EAAU7H,EAAG8H,IAAIC,OAChBpE,MAAM1C,GACN+G,OAAO,UACPC,MAAM,EAGPJ,GADmB,OAAnBnL,EAAGiF,UAAUf,KACHiH,EAAQK,WAAW,SAAU7C,GACnC,MAAOuC,GAAW/K,KAAK8K,OAAS,EAAFtC,EAAM,GAAK,IAAMxI,KAAKsL,IAAI,EAAItL,KAAKuH,IAAIiB,IAAK,GAAI,KAAK,OAG7EwC,EAAQK,WAAW,SAAU7C,GACnC,MAAOuC,GAAWvC,KAK9BhD,EAAQrC,EAAG8H,IAAIzF,QACVqF,EAAEzG,GACFoD,EAAErE,EAAG2D,MAAMW,SAASC,OAAO,EAAEoB,IAASnB,QAAQ,EAAG1D,EAAciD,SAAStD,UACxE6F,GAAG,QAASvB,GACZuB,GAAG,aAAc5B,GACjB4B,GAAG,WAAYb,GACpBtC,EAAiB2B,KAAKzC,GAGtBc,EAAiBmD,GAAG,YAAa,WACxBtG,EAAGyD,MAAMC,UAAUvD,EAAOC,UAAU,sBAAsBoF,QAAQ,qBAAqB,KAIhGpD,EAAOpC,EAAGoI,SAAShG,OACdsF,EAAGzG,GACHoD,EAAGnD,GACH0C,WAAW,EAAE,IACbD,MAAM,EAAGxC,GACTmF,GAAG,OAAQ9C,GAChBL,EAAiB2B,KAAK1C,GAItBQ,EAAOjF,MACHkF,QAAS,gBACTF,MAAS,IACT4D,UAAW,WAAa,MAAO,gBAAmBZ,EAAO,IAAM,OAEnE/C,EAAOkC,KAAM+C,IAOb/B,EAAc,SAAUI,EAAM/D,EAAOD,GAEjC,GAAImG,KAoEJ,OAjEAA,GAAcrG,OAAStF,EAAGsF,OAAOD,OAAQ,SAASC,GAAU,MAAOA,GAAOwE,WAG1E6B,EAActE,SAAWmC,EAAKnE,OAAO,SAASuG,GAC1C,MAAoB,cAAhB5L,EAAGqF,OAAOnB,MAAsB0H,EAAQC,MAAa,GACrC,aAAhB7L,EAAGqF,OAAOnB,MAAsB0H,EAAQC,OACvCD,EAAQE,eAAe,KAAK7L,KAAKwF,OAClCxF,KAAKoF,QAAUpF,KAAK4G,KACc,IAA9B5G,KAAK4G,IAAIkD,QAAQ6B,EAAQ9H,KAAgB,GAE1C,GALkD,IAOzD2B,MAAQA,EAAMvB,KAAMmB,OAAiC,UAAvBrF,EAAGiE,cAAcC,KAAiB2C,IAAMrD,IAG3D,YAAXgC,EAAKtB,KACLyH,EAActE,SAAWsE,EAActE,SAAS7B,KAAK,SAASuG,EAAEC,GAC5D,MAAID,GAAEF,MAAMG,EAAEH,KACFE,EAAEE,WAAWzG,EAAK0G,OAAOxB,MAAMsB,EAAEC,WAAWzG,EAAK0G,OAAOxB,MAAS,EAAI,GAErEqB,EAAE,KAAQ,EAAI,IAG3BvG,GAEHmG,EAActE,SAAWsE,EAActE,SAAS7B,KAAK,SAASuG,EAAEC,GAC5D,MAAQD,GAAEE,WAAWzG,EAAK0G,OAAOxB,MAAMsB,EAAEC,WAAWzG,EAAK0G,OAAOxB,MAAS,EAAI,IAC9ElF,GAKPmG,EAActE,SAAS8E,QAAQ,SAASP,GAEpCA,EAAQ1B,eAAiB0B,EAAQQ,WAAW/G,OAAO,SAASgH,GACxD,IAAK,GAAIzD,GAAE,EAAGA,EAAE3I,KAAK8D,OAAQ6E,IACzB,GAAI3I,KAAK2I,GAAG1E,MAAMmI,EAAUnI,KAAM,OAAO,CAE7C,QAAO,GACRyH,EAAcrG,QAEjBsG,EAAQ1B,eAAeiC,QAAQ,SAASG,GACpCA,EAAIvB,WAAa/K,EAAGiF,UAAUsH,OAAOD,EAAIE,MAAQvM,MACjDqM,EAAIxB,SAAqB,MAATwB,EAAIG,IAAazM,EAAGiF,UAAUsH,OAAOD,EAAIG,IAAMxM,MAAQ,OACvE2L,EAAQ,KAAK3L,KAAK,MAASiE,MAAMsI,SAErC/G,MAAQA,EAAOH,OAASqG,EAAcrG,SAG1CqG,EAActC,OAASsC,EAActE,SAASqF,OAAQ,SAAUC,EAAMC,GAElE,GAAIC,GAAgBD,EAAQ1C,eAAewC,OAAO,SAAUC,EAAMC,GAE9D,OACIzM,KAAK2M,IAAIF,EAAQ7B,WAAY4B,EAAK,IAClCxM,KAAK4M,IAAuB,MAAlBH,EAAQ9B,SAAkB8B,EAAQ7B,WAAa6B,EAAQ9B,SAAU6B,EAAK,OAGpFK,EAAAA,IAAWA,EAAAA,IAEf,QACI7M,KAAK2M,IAAID,EAAc,GAAIF,EAAK,IAChCxM,KAAK4M,IAAIF,EAAc,GAAIF,EAAK,OAEpCK,EAAAA,IAAWA,EAAAA,KACRrB,IAMf,WAEI,GAAId,GAAQ,SAASlC,GACjB,GAAIsE,GAAStE,EAAEzE,KACXgJ,EACU,UAATD,EAAqB,UACZ,cAATA,EAAwB,UACf,cAATA,EAAwB,UACf,gBAATA,EAA0B,UACjB,WAATA,EAAqB,UACZ,WAATA,EAAqB,UACZ,cAATA,EAAwB,UACf,cAATA,EAAwB,UACf,cAATA,EAAwB,UACf,SAATA,EAAmB,UACpB,OACA,OAAOC,IAIXC,EAAmB,SAAS7H,GAC5B,MAAO8H,QAAOC,KAAK/H,GAAQ3B,IAAI,SAAS2J,GAChC,GAAIJ,IAAQhJ,KAAQoJ,EAAGxD,UAAY,EAEnC,OADAoD,GAAGrC,MAAQqC,EAAGK,QAAU1C,EAAMqC,GACvBA,KAIfM,EAAqB,SAASnG,GAC9B,MAAOA,GAAS,GAAG4E,WAAWtI,IAAI,SAASgF,EAAGC,GAC1C,OAAS1E,KAAQyE,EAAEzE,KAAMgI,MAAStD,MAItC6E,EAAqB,SAASpG,EAAUwE,GAExCxE,EAAW+F,OAAOC,KAAKhG,GAAU1D,IAAI,SAAS+J,GAC1C,GAAIC,GAAMtG,EAASqG,EAEnB,OADAC,GAAI7J,GAAK4J,EACFC,GAEX,KAAK,GAAI/E,GAAI,EAAGA,EAAIvB,EAAStD,OAAQ6E,IAAK,CAGtC,GAAIhF,GAAIyD,EAASuB,GACbgF,EAAIvK,EACJwK,EAAK,aAILC,EACAlK,EAAEwI,WACD/G,OAAO,SAASsD,GACb,MAAwB,WAAjBA,EAAEoF,aAEZpK,IAAI,SAASgF,GACV,OACI6D,MAASoB,EAAEjF,EAAEqF,KAAMH,GAAII,OACvBxB,IAAO,KACPvI,KAAQyE,EAAEzE,KACVJ,GAAK6E,EAAEuF,WAKfC,EAAWvK,EAAEwI,WACZ/G,OAAO,SAASsD,GAAK,MAAsB,QAAfA,EAAEoF,aAC9BpK,IAAI,SAASgF,GAAI,OAAQ8D,IAAMmB,EAAEjF,EAAEqF,KAAMH,GAAII,OAAQnK,GAAK6E,EAAEuF,WAC7DE,EAAaxK,EAAEwI,WACd/G,OAAO,SAASsD,GAAK,MAAsB,UAAfA,EAAEoF,aAC9BpK,IAAI,SAASgF,GAAI,OAAQ6D,MAAQoB,EAAEjF,EAAEqF,KAAMH,GAAII,OAAO/J,KAAOyE,EAAEzE,KAAMJ,GAAK6E,EAAEuF,UACjFE,GACKjC,QAAQ,SAASkC,GAAKA,EAAG5B,IAAM0B,EAC3B9I,OAAO,SAASiJ,GAAM,MAAOA,GAAGxK,IAAIuK,EAAGvK,KAAM,GAAG2I,MAGzD7I,EAAEwI,WAAcgC,EAAWrK,OAAO,EAAKqK,EAAWG,OAAOT,GAAcA,EACvElK,EAAEwI,WAAWD,QAAQ,SAASxD,GAC1BA,EAAEkC,MAAQA,EAAMlC,GAChB/E,EAAE,KAAK+E,EAAEzE,MAAQyE,EACL,UAARA,EAAEzE,OACFN,EAAEiI,KAA4B,IAApBA,EAAK9B,QAAQpB,EAAE7E,OAKrC,MAAOuD,GAGXjF,GAAMoM,SAAQ,GAAM,mBACpBpM,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,WACjCtM,EAAMuM,eAAeD,KAAK,SAASE,GAG/B5O,EAAGgF,aACEd,KAAK,MACFqI,OAAQ,SAASoB,GACb,OAAY,EAAJA,EAAQ,GAAK,GAAKxN,KAAK0O,IAAI1O,KAAKuH,IAAS,IAAJiG,EAAU,OAAU,GAAGxN,KAAK0O,IAAI,MAEpF3K,KAAK,SACFqI,OAAQ,SAASoB,GACb,MAAOtK,GAAOyL,SAAa,IAAJnB,GAAUoB,YAG7C/O,EAAGiF,UAAYjF,EAAGgF,WAAW,GAG7BX,EAAeoJ,EAAmBmB,EAASI,QAAQC,IAAKL,EAASI,QAAQE,WAAWC,OAAOlC,OAAOmC,MAClG9K,EAAasK,EAASI,QAAQ1J,OAC9BtF,EAAGuF,MAAQiI,EAAmBnJ,GAE9BrE,EAAGoF,UACElB,KAAK,iBACLA,KAAK,eACLA,KAAK,cAEVlE,EAAGqF,OAASrF,EAAGoF,QAAQ,EAGvB,IAAIF,GAAWsI,EAAmBnJ,EAClCa,GAASmK,SAASnD,MAAM,GAAIhI,KAAK,SACjClE,EAAGkF,SAAYA,EACflF,EAAGmF,QAAUnF,EAAGkF,SAAS,GACzBlF,EAAGsF,OAAS6H,EAAiByB,EAASI,QAAQE,YAG9ClP,EAAGwF,KAAOxF,EAAGuF,MAAM,GACnBvF,EAAGsF,OAAO6G,QAAQ,SAASnC,GACX,SAARA,EAAE9F,OAAiB8F,EAAEF,UAAW,EAAOE,EAAEa,MAAQ,WACzC,aAARb,EAAE9F,OAAmBjE,KAAKwF,MAAQuE,IACvChK,GAGHkD,EAAOoM,aAAa,aAAc,UAAW,WAAY,eAAgB,aAAcnL,GACvFxE,QAAQgB,QAAQwC,GAAS7B,KAAK,SAAU6C,GACxCjB,EAAOqM,OAAO,mBAAoBpL,GAGlClB,EAAUuM,yBAAyBC,IAAI,SAASC,GAC5ClM,EAAckM,EAAU7I,IACxB1C,MAEJ/B,EAAMoM,SAAQ,UAO1BxO,EAAG2P,OAAS,WACRxL,KAEJnE,EAAG4P,iBAAmB,SAASC,GAC3BA,EAAK/F,UAAY+F,EAAK/F,SACtB+F,EAAKhF,MAASgF,EAAK,SAAYA,EAAKtC,QAAU,UAC9CpJ,KAlgBRnB,EAAoBzB,SAAW,QAAS,YAAa,SAAU,SAAU,eAAgB,UAAW,YAAa,SAAU,KAH3H,IAAIC,IACAC,SAAU,IACVC,YAAa,0CACbG,WAAYmB,EACZlB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,cAAeuB,MAihBlC,WACI,YAOA,SAAS+M,KAaL,QAASC,GAAe3N,GAGpB,GAAIpC,GAAKC,IACTD,GAAGgQ,QAAU,SACbhQ,EAAGiQ,YAEH7N,EAAMoM,SAAQ,GACdpM,EAAM8N,kBAAkBxB,KAAK,SAASE,GAElC5O,EAAGiQ,SAAWrB,EAASI,QAAQiB,SAE/B7N,EAAMoM,SAAQ,KAnBtBuB,EAAexO,SAAW,QAJ1B,IAAIC,IACAC,SAAU,IACVC,YAAa,gCACbG,WAAYkO,EACZjO,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,SAAUsO,MAiC7B,WACI,YAQA,SAASK,KAcL,QAASC,GAAiBhO,EAAOC,GAE7B,GAAIrC,GAAKC,IACTD,GAAG4C,KAAO,WACV5C,EAAGqF,OAAS,SAEZrF,EAAGqQ,WAAa,WACZhO,EAAOI,GAAG,SACND,WAAYxC,EAAGwC,cAIvBxC,EAAGsQ,YAAc,WACblO,EAAMmO,gBApBdH,EAAiB7O,SAAW,QAAS,SALrC,IAAIC,IACAC,SAAU,IACVC,YAAa,oCACbM,SAAS,EACTH,WAAYuO,EACZtO,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAjBX7B,QACKC,OAAO,aACP4B,UAAU,WAAY2O,MAsC/B,WACI,YAOA,SAASK,KAaL,QAASC,GAAmBrO,EAAOa,EAAWZ,EAAQtC,EAAUmD,EAAQZ,GAEpE,GAAI3C,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAMd,IAAIzC,GAAKC,IACTD,GAAGwC,WAAaF,EAAaE,WAG7BJ,EAAMoM,SAAQ,GACdpM,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,WAEI,MAAjCzL,EAAU2D,sBACVxE,EAAMsO,uBAAuB1Q,EAAGwC,YAAYkM,KAAK,SAASE,GACtDzK,EAAKyK,EAASI,QAAQ2B,IAAIhN,IAAK,SAAUgF,GAAK,MAAOA,GAAE,QAG3DxE,EAAKlB,EAAU2D,sBAAsBC,OAK7C5D,EAAUuM,yBAAyBC,IAAI,SAASC,GAC5CvL,EAAKuL,EAAU7I,MAInB,IAAI1C,GAAO,SAAS0C,GAChBzE,EAAMoM,SAAQ,GACdpM,EAAMwO,4BAA4B/J,EAAK,IAAI6H,KAAK,SAASmC,GACrDlR,QAAQgB,QAAQ,iBAAiBM,KAAK,MAAM4P,EAAE7B,SAC9C5M,EAAMoM,SAAQ,MAxC1BiC,EAAmBlP,SAAW,QAAS,YAAa,SAAU,WAAY,SAAU,eANpF,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbG,WAAY4O,EACZ3O,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,aAAcgP,MA0DjC,WACI,YAOA,SAAS7N,KAaL,QAASmO,GAAe1O,EAAOa,EAAWZ,EAAQC,EAAcvC,EAAUmD,EAAQI,EAAID,EAAQ0N,EAAM5N,EAAS6N,GA4BzG,QAASzN,KACL,GAAIuG,GAAYjE,EAAQnC,UAAU,uBAAuB,EACpC,IAAjBoG,EAAS/F,QACbd,EAAUgO,iBAAiB,OAAQ,mBAC/BpL,EAAQnC,UAAU,uBAAuB,GAAGC,IAAI,SAASuN,GACrD,MAAOA,GAAKrN,SAASK,KAAKiN,iBAItC,QAASC,KACqB,GAAtB5N,EAAYO,OACZ8B,EAAQnC,UAAU,uBAAuBoF,QAAQ,sBAAsB,GAEvEjD,EAAQnC,UAAU,UAAUoF,QAAQ,qBAAsB,WACtD,MAAQtF,GAAYuG,QAAQ9J,KAAK4D,SAASK,OAAS,IAxC/D,GAAIvE,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAKd,IAIIwD,GAAOS,EAAQ2K,EAAQC,EAAQC,EAAMC,EAAM7L,EAJ3CE,EAAUvC,EAAGwC,OAAO,eAAeC,OAAO,OAAO9E,KAAK,KAAM,SAC5DwQ,EAAYnO,EAAGwC,OAAO,QAAQC,OAAO,OAAO9E,KAAK,QAAS,wBAM1DjB,EAAKC,IACTD,GAAGwC,WAAaF,EAAaE,WAC7BxC,EAAG0R,eAAiB1R,EAAG2R,cAAgB,GACvC3R,EAAG4R,eAAiB5R,EAAG6R,cAAgB,GACvC7R,EAAG8R,kBAAoB9R,EAAG+R,iBAAmB,EAC7C/R,EAAGgS,kBAAoBhS,EAAGiS,iBAAmB,EAC7CjS,EAAGkS,YACHlS,EAAGmS,QAAU,KACbnS,EAAGoS,MACHpS,EAAGqS,IAAM,IAGT,IAAI7O,GAA+C,MAAhCP,EAAUqP,sBAAmCrP,EAAUqP,mBAAmBzL,GAqB7FzE,GAAMoM,SAAQ,GAAM,mBACpBpM,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,SAASE,GAC1C,GAAI2D,GAAM3D,EAASI,QAAQwD,SAASnN,OAAO,SAASiI,GAChD,MAAOA,GAAEvD,QAAQ,aAAe,GAEpCwI,GAAMA,EAAIA,EAAIxO,OAAS,GAAG/B,QAAQ,SAAU,IAC5CI,EAAMqQ,eAAe,wBACrBrQ,EAAMsQ,QAAQ1S,EAAGwC,WAAY+P,GAAK7D,KAAK,WACnCtM,EAAMqQ,eAAe,qBACrBrQ,EAAMuQ,kBAAkBjE,KAAK,SAASE,GAGlC5O,EAAGkS,SAAWtD,EAASI,QACvBhP,EAAGmS,QAAUnS,EAAGkS,SAAS,GACzB9P,EAAMqQ,eAAe,oBACrBrQ,EAAMwQ,qCAAqClE,KAAK,SAASE,GAGrD,GAAII,GAAUJ,EAASI,OACvBhP,GAAG2R,cAAgBxR,KAAKqI,MAAMwG,EAAQ6D,MAAM,GAAK,QACjD7S,EAAG6R,cAAgB1R,KAAKqI,MAAMwG,EAAQ6D,MAAM,GAAK,QACjD7S,EAAG+R,iBAAmB5R,KAAKqI,MAAMwG,EAAQ8D,SAAS,GAAK,QACvD9S,EAAGiS,iBAAmB9R,KAAKqI,MAAMwG,EAAQ8D,SAAS,GAAK,QACvD5P,EAAOqM,OAAO,aAAc,WACxBvP,EAAG+S,WAIP9P,EAAU+P,sBAAsBvD,IAAI,SAASC,GACzClM,EAAckM,EAAU7I,IACxBuK,cASpBpR,EAAG+S,OAAS,WA+BR,QAASE,KACLhN,EAAQ9C,EAAQgG,WAAa,IACsB,SAA/CxJ,QAAQgB,QAAQ,eAAeM,KAAK,YACpCgF,GAAS,KAEbS,EAASvD,EAAQwD,YAAc,IACc,QAAzChH,QAAQgB,QAAQ,SAASM,KAAK,YAAmBgF,GAAS,KAE9DJ,EACK5E,KAAK,QAAS,QACdA,KAAK,SAAUyF,GACpB2K,EAAS/N,EAAG2D,MAAMW,SACbE,SAASyJ,EAAMA,IACf1J,OAAO,EAAG5B,IAAQqD,OAEvBgI,EAAShO,EAAG2D,MAAMW,SACbE,SAAS0J,EAAMA,IACf3J,OAAOnB,EAAQ,IAAI4C,OAI5B,QAASnF,GAAKuD,EAAKwL,EAASC,GAExB5B,EAAa,GAAN7J,EACP8J,EAAa,GAAN9J,EACPuL,IAGAtN,EAAQrC,EAAG8H,IAAIzF,QACVqF,EAAEqG,GACF1J,EAAE2J,GACF1H,GAAG,WAAY,WACZ,GAAIwJ,GAAKzN,EAAM2C,QACfzC,GAAQnC,UAAU,UACboF,QAAQ,qBAAsB,SAASH,GACpC,MAAQA,GAAE,GAAKyK,EAAG,GAAG,IAAMzK,EAAE,GAAKyK,EAAG,GAAG,IAAMzK,EAAE,GAAKyK,EAAG,GAAG,IAAMzK,EAAE,GAAKyK,EAAG,GAAG,KAEtF9P,EAAGwC,OAAO7F,MAAM2K,aAAakE,SAAS,KACjC1G,KAAKzC,EAAM2C,SACP,EAAG,IACH,EAAG,MAEZ/E,MAGRsC,EAAQuC,KAAKzC,EAGb,IAAI0N,GAAUxN,EAAQnC,UAAU,UAAU8F,KAAK2J,EAAO,SAASxK,GAAK,MAAOA,IAC3E0K,GAAQ1J,QACH5D,OAAO,UACP9E,MACGkF,QAAS,YACTmN,GAAe,GAARrN,EACPsN,GAAe,GAAT7M,EACNmK,EAAK,IAER7K,MAAM,eAAgB,KACtB4D,GAAG,YAAa,SAASjB,GACtB8I,EAAU7G,aACLkE,SAAS,KACT9I,MAAM,UAAW,GACtByL,EAAU+B,KAAK7K,EAAEzE,MACZ8B,MAAM,OAAS1C,EAAGyD,MAAM0M,MAAM,GAAM,MACpCzN,MAAM,MAAQ1C,EAAGyD,MAAM2M,MAAM,GAAM,QAE3C9J,GAAG,WAAY,WACZ6H,EAAU7G,aACLkE,SAAS,KACT9I,MAAM,UAAW,KAEzB4D,GAAG,QAAS,SAASjB,GAClBhJ,QAAQgB,QAAQ,iBAAiBgT,OACjC,IAAIC,GAAM,sDAAwDjL,EAAEzE,IACpEhB,GAAOyH,OAAO,WACV3K,EAAGoS,MAAQrB,EAAK8C,mBAAmBD,OAG/CP,EAAQzI,aACHkE,SAAS,KACTgF,MAAM,SAASnL,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpB3H,KAAK,KAAM,SAAS0H,GACjB,MAAO0I,GAAO1I,EAAE,MAEnB1H,KAAK,KAAM,SAAS0H,GACjB,MAAO2I,GAAO3I,EAAE,MAEnB3C,MAAM,eAAgB,GAE1BqN,EAAQ5J,OACJmB,aACAkE,SAAS,KACTgF,MAAM,SAASnL,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpB3H,KAAK,KAAc,GAARgF,GACXhF,KAAK,KAAe,GAATyF,GACXV,MAAM,eAAgB,KACtB0D,QAGL,IAAIqK,GAAQlO,EAAQnC,UAAU,QAAQ8F,KAAK0J,EAC3Ca,GAAMpK,QACD5D,OAAO,QACP9E,MACGkF,QAAS,OACTE,eAAgB,EAChB2N,GAAM3C,EAAO,GACb4C,GAAM3C,EAAO,GACb4C,GAAM7C,EAAO,GACb8C,GAAM7C,EAAO,KAEhBtL,MAAM,SAAU,SAAS2C,GACtB,MAAQA,GAAEzE,KAAK6F,QAAQ,OAAU,UAAY,YAErDgK,EAAMnJ,aACDkE,SAAS,KACT7N,MACG+S,GAAM3C,EAAO,GACb4C,GAAM3C,EAAO,GACb4C,GAAM,SAAS5G,GAAK,MAAO+D,GAAO/D,EAAE,KACpC6G,GAAM,SAAS7G,GAAK,MAAOgE,GAAOhE,EAAE,OAE5CyG,EAAMtK,OAAOC,QAGb,IAAI0K,GAAOvO,EAAQnC,UAAU,QAAQ8F,KAAK0J,EAC1CkB,GAAKzK,QACA5D,OAAO,QACP9E,MACGkF,QAAS,OACT6E,EAAa,GAAR/E,EACL0B,EAAc,GAATjB,EACL2N,cAAe,SAAS/G,GAAK,MAAQA,GAAE,GAAK,EAAK,QAAU,SAE9D8G,KAAK,SAAS9G,GAAK,MAAOA,GAAEpJ,OAC5B8B,OACGO,KAAQ,QACR8N,cAAe,WAGvBD,EAAKxJ,aACAkE,SAAS,KACT7N,MACG+J,EAAK,SAASsC,GAAK,MAAO+D,GAAO/D,EAAE,KACnC3F,EAAK,SAAS2F,GAAK,MAAOgE,GAAOhE,EAAE,OAG3C8G,EAAK3K,OAAOC,SACZ0H,IArLJhP,EAAMqQ,eAAe,mBAErB,IAAI6B,KACApQ,KAAM,WACNqQ,IAAoC,OAA/BC,OAAOxU,EAAG8R,mBACf2C,KAAqC,OAA/BD,OAAOxU,EAAGgS,qBAEhB9N,KAAM,QACNqQ,IAAiC,OAA5BC,OAAOxU,EAAG0R,gBACf+C,KAAkC,OAA5BD,OAAOxU,EAAG4R,iBAGpBxP,GAAMsS,kBAAkB1U,EAAGmS,QAASmC,GAAS5F,KAAK,SAASE,GACvDxM,EAAMqQ,eAAe,iBAGrB,IAAIzD,GAAUJ,EAASI,QACnBmE,EAAQnE,EAAQ2F,SAAShR,IAAI,SAASkM,EAAM3D,GAE5C,MADA2D,GAAK3L,KAAOjE,KAAKiM,GACV2D,GACRb,EAAQ4F,cACP1B,EAAUlE,EAAQkE,QAAQvP,IAAI,SAASkM,EAAM3D,GAE7C,MADA2D,GAAK3L,KAAOjE,KAAKiM,GACV2D,GACRb,EAAQ6F,aACPnN,EAAyB,IAAnBsH,EAAQ8F,QAClB3Q,GAAKuD,EAAKwL,EAASC,GACnB/Q,EAAMoM,SAAQ,KA6JlBxO,EAAG2P,OAAS,WACRsD,IAEApN,EAAQnC,UAAU,UACbzC,MACGqS,GAAM,SAAS3K,GAAK,MAAO0I,GAAO1I,EAAE,KACpC4K,GAAM,SAAS5K,GAAK,MAAO2I,GAAO3I,EAAE,OAG5C9C,EAAQnC,UAAU,QACdzC,MACI+J,EAAK,SAASsC,GAAK,MAAO+D,GAAO/D,EAAE,KACnC3F,EAAK,SAAS2F,GAAK,MAAOgE,GAAOhE,EAAE,OAG3CzH,EAAQnC,UAAU,QACbzC,MACG+S,GAAM3C,EAAO,GACb4C,GAAM3C,EAAO,GACb4C,GAAM,SAAS5G,GAAK,MAAO+D,GAAO/D,EAAE,KACpC6G,GAAM,SAAS7G,GAAK,MAAOgE,GAAOhE,EAAE,QAKhD3N,QAAQgB,QAAQwC,GAAS7B,KAAK,SAC1B0P,EAAE+D,SAAS/U,EAAG2P,OAAQ,OA9SlCmB,EAAevP,SAAW,QAAS,YAAa,SAAU,eAAgB,WAAY,SAAU,KAAM,SAAU,OAAQ,UAAW,IAPnI,IAAIC,IACAC,SAAU,IACVC,YAAa,gCACbG,WAAYiP,EACZhP,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,SAAUmB,MAkU7B,WACI,YAOA,SAASA,KAaL,QAASqS,GAAgB5S,EAAOC,EAAQC,EAAcvC,EAAUmD,EAAQI,EAAI2R,EAAO9R,GA0G/E,QAAS+R,KAEnBC,sBAAuBD,GACvBE,EAASrC,SA3GC,GAAIpT,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAKd,IAAIzC,GAAKC,IACTD,GAAGwC,WAAaF,EAAaE,WAC7BxC,EAAGkS,YACHlS,EAAGmS,QAAU,KACbnS,EAAGuQ,aAAe,WACd5Q,QAAQgB,QAAQ,sBAAsB0U,YAAY,+BAClD1V,QAAQgB,QAAQ,4BAA4B0U,YAAY,qCAE5D,IAAIC,GAGA1P,EAAUjG,QAAQgB,QAAQ,aAI9ByB,GAAMoM,SAAQ,GAAM,mBACpBpM,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,SAASE,GAC1C,GAAI2D,GAAM3D,EAASI,QAAQwD,SAASnN,OAAO,SAASiI,GAChD,MAAOA,GAAEvD,QAAQ,aAAe,GAGpCwI,GAAMA,EAAIA,EAAIxO,OAAS,GAAG/B,QAAQ,SAAU,IAC5CI,EAAMqQ,eAAe,uBACrBrQ,EAAMmT,OAAOvV,EAAGwC,WAAY+P,GAAK7D,KAAK,WAClCtM,EAAMqQ,eAAe,qBACrBrQ,EAAMuQ,kBAAkBjE,KAAK,SAASE,GAGlC5O,EAAGkS,SAAWtD,EAASI,QACvBhP,EAAGmS,QAAUnS,EAAGkS,SAAS,GACzBhP,EAAOqM,OAAO,aAAc,WACxBwD,WAOhB,IAAIA,GAAS,WACT3Q,EAAMqQ,eAAe,mBACrBrQ,EAAMoT,kBAAkBxV,EAAGmS,SAASzD,KAAK,SAASE,GAC9CxM,EAAMqQ,eAAe,gBACrB,IAAIzD,GAAUJ,EAASI,OACvBhP,GAAGyV,IAAM7G,EAASI,QAAQ,kBAC1BhP,EAAG0V,IAAM9G,EAASI,QAAQ,iBAC1B,IAAI2G,GAAS3G,EAAQ2G,OACjB9O,EAAMmI,EAAQnI,GAClByO,GAAUK,EAAOhS,IAAI,SAASgF,EAAGC,GAE7B,MADAD,GAAE7E,GAAK+C,EAAI+B,GACJD,GACRqG,EAAQnI,KACX1C,IACA/B,EAAMoM,SAAQ,MAIlBoH,EAAQ,GAAIX,GAAMY,MAClBC,EAAS,GAAIb,GAAMc,kBAAmB,GAAI5S,EAAQgG,WAAahG,EAAQwD,YAAa,GAAK,IAC7FmP,GAAOE,SAASC,EAAI,EAEpB,IAAIC,GAAW/S,EAAQgT,sBAAwB,GAAIlB,GAAMmB,eAAgBC,WAAW,IAAU,GAAIpB,GAAMqB,cACxGJ,GAASK,cAAepT,EAAQqT,kBAChCN,EAASO,QAAStT,EAAQgG,WAAYhG,EAAQwD,aAC9Cf,EAAQG,OAAQmQ,EAASQ,WAIzB,IAAIvS,GAAO,WAKP,IAAI,GAJAwS,MACAC,EAAYtB,EAAQvR,OACpB8S,EAAiB,GAAI5B,GAAM6B,eAAe,GAAI,EAAG,GACjDC,EAAiB,GAAI9B,GAAM+B,mBAAmBnM,MAAO,YACjDoM,EAAW,EAAcL,EAAXK,EAAsBA,IAAW,CACnDN,EAAYM,GAAY,GAAIhC,GAAMiC,KAAKL,EAAgBE,EACvD,IAAII,GAAQ7B,EAAQ2B,EACpBN,GAAYM,GAAUjB,SAAShL,EAAImM,EAAM,GACzCR,EAAYM,GAAUjB,SAASrO,EAAIwP,EAAM,GACzCR,EAAYM,GAAUjB,SAASC,EAAIkB,EAAM,GACzCvB,EAAMnG,IAAIkH,EAAYM,IAE1BG,KAIAA,EAAS,WAUTlB,EAASkB,OAAQxB,EAAOE,IAalCV,EAAW,GAAIH,GAAMoC,cAAevB,EACxCV,GAASkC,iBAAkB,SAAUF,GAGvClC,IA1HQF,EAAgBzT,SAAW,QAAS,SAAU,eAAgB,WAAY,SAAU,KAAM,QAAS,UARnG,IAAIC,IACAC,SAAU,IACVC,YAAa,kCACbG,WAAYmT,EACZlT,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,UAAWmB,MAiJ9B,WACI,YAOA,SAAS4U,KAaL,QAASC,GAAmBpV,EAAOa,EAAWZ,EAAQC,EAAcY,EAAQ6N,EAAM5N,EAASE,EAAQoU,EAAWzG,GAgB1G,QAASzN,KAEL,GAAImU,EAA8B,YAAlBA,GAAW,EAC3B,IAAI7Q,GAAM8Q,EAAQC,EAAE,kCAAkCjU,IAAI,SAASkU,GAAM,MAAOA,GAAIrO,OAAO1F,GAAGqN,eAC9FlO,GAAUgO,iBAAiB,WAAY,mBAAoBpK,GAE/D,QAASuK,KAELsG,GAAW,EACXC,EAAQG,aACW,MAAftU,EACAmU,EAAQC,EAAE,kCACLzL,QAAS,SAAS0L,GACfA,EAAIE,aAGZJ,EAAQC,EAAE,yBACLzL,QAAS,SAAS0L,GACfA,EAA8B,IAAxB5X,KAAK8J,QAAQ8N,EAAI/T,MAAa,WAAa,aAClDN,GAEXmU,EAAQK,WA0HZ,QAASC,KACL,GAAIC,GAAW,mBACXC,EAAM,MACNC,EAAS,kBACTC,EAAQ,OACZ,SACQC,SAAY,OACZtS,OACIlF,QAAW,cACXyX,cAAe,SACfC,cAAe,SACfC,MAAS,UACTxS,MAAS,OACTS,OAAU,OACVmE,MAASqN,EACTQ,mBAAoB,qBACpBC,eAAgB,MAChBC,eAAgBV,KAIpBI,SAAY,OACZtS,OACIC,MAAS,MACT4S,aAAcX,EACdY,aAAc,WAKlBR,SAAY,4EACZtS,OACIlF,QAAW,GACX4X,mBAAoB,QACpBD,MAAS,oBAMbH,SAAY,oEACZtS,OACI6S,aAAcR,EACdU,qBAAsB,WACtBC,qBAAsBX,KAK1BC,SAAY,8DACZtS,OACI6S,aAAcV,EACdY,qBAAsB,MACtBC,qBAAsBb,KAK1BG,SAAY,0BACZtS,OACI6S,aAAcR,KAKlBC,SAAY,4BACZtS,OACIiT,QAAW,UAGfX,SAAY,2BACZtS,WAEAsS,SAAY,iCACZtS,OACIkT,kBAAmB,MACnBC,gBAAiB,SAMrBb,SAAY,uBACZtS,OACIlF,QAAW,cACX4X,mBAAoB,qBACpBE,eAAgB,QAChBD,eAAgB,MAChBS,YAAa,OACbX,MAAS,iBACTxS,MAAS,OACTS,OAAU,WAGd4R,SAAY,0BACZtS,OACIlF,QAAW,cACX4X,mBAAoB,qBACpBD,MAAS,UACTxS,MAAS,QACTS,OAAU,QACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,yBACZtS,OACIlF,QAAW,GACX4X,mBAAoB,qBACpBD,MAAS,UACTxS,MAAS,QACTS,OAAU,QACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,wBACZtS,OACIlF,QAAW,GACX4X,mBAAoB,qBACpBD,MAAS,UACTxS,MAAS,QACTS,OAAU,QACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,MAChBU,eAAgB,YAGpBf,SAAY,0BACZtS,OACIlF,QAAW,cACX4X,mBAAoB,qBACpBD,MAAS,UACTxS,MAAS,QACTS,OAAU,QACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,2BACZtS,OACIlF,QAAW,cACX4X,mBAAoB,oBACpBD,MAAS,UACTxS,MAAS,OACTS,OAAU,QACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,uBACZtS,OACIlF,QAAW,cACX4X,mBAAoB,oBACpBD,MAAS,UACTxS,MAAS,OACTS,OAAU,OACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,2BACZtS,OACIlF,QAAW,cACX4X,mBAAoB,qBACpBD,MAAS,iBACTxS,MAAS,QACTS,OAAU,OACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,sBACZtS,OACIlF,QAAW,cACX4X,mBAAoB,oBACpBD,MAAS,UACTxS,MAAS,QACTS,OAAU,OACV0S,YAAa,OACbR,eAAgB,QAChBD,eAAgB,SAGpBL,SAAY,+BACZtS,OACIlF,QAAW,cACX2X,MAAS,iBACTW,YAAa,OACbR,eAAgB,MAChBD,eAAgB,SAGpBL,SAAY,gBACZtS,OACImT,gBAAiB,OACjBD,kBAAmB,SAGvBZ,SAAY,4BACZtS,OACIC,MAAS,SAGbqS,SAAY,0BACZtS,OACI6S,aAAcT,KAGlBE,SAAY,4BACZtS,OACI6S,aAAc,MACd5S,MAAS,MACT6S,aAAc,SACdC,qBAAsB,WACtBC,qBAAsB,WAG1BV,SAAY,0BACZtS,OACI6S,aAAc,QACd5S,MAAS,MACT6S,aAAc,SACdC,qBAAsB,WACtBO,qBAAsB,WACtBN,qBAAsB,QACtBO,qBAAsB,SAG1BjB,SAAY,8BACZtS,OACI6S,aAAc,QACd5S,MAAS,MACT6S,aAAc,WAGlBR,SAAY,8BACZtS,OACI6S,aAAc,QACd5S,MAAS,SAGbqS,SAAY,8BACZtS,OACI6S,aAAc,MACd5S,MAAS,SAzZzB,GAAItG,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAGd,IAAI+W,GAKA7B,EAJA3X,EAAKC,KAGL2F,EAAUjG,QAAQgB,QAAQ,cAI1B+W,GAAW,EACXlU,EAA+C,MAAhCP,EAAUqP,mBAA8B,KAAOrP,EAAUqP,mBAAmBzL,GAyB/F7G,GAAGwC,WAAaF,EAAaE,WAC7BxC,EAAGyZ,OAAS,GACZzZ,EAAGoS,MACHpS,EAAGqS,IAAM,KACTrS,EAAG0Z,UAAY,GACf1Z,EAAG2Z,SAEH3Z,EAAG2P,OAAS,WACR,GAAI1J,GAAQ9C,EAAQgG,UAChBlD,GAAQ,MAAMA,GAAS,KACkB,QAAzCtG,QAAQgB,QAAQ,SAASM,KAAK,YAAmBgF,GAAS,KAC9DL,EAAQK,MAAOA,GACfL,EAAQc,OAAOvD,EAAQwD,YAAc,IACjCgR,IACAA,EAAQhI,SACRgI,EAAQiC,WAKhBja,QAAQgB,QAAQwC,GAAS7B,KAAK,SAC1B0P,EAAE+D,SAAS/U,EAAG2P,OAAQ,MAG1BzM,EAAOqM,OAAO,YAAa,WACvB,IAAI5P,QAAQ4C,YAAYoV,GAAxB,CACA,GAAIkC,GAAO7Z,EAAGyZ,OAAOtI,cACjB2I,EAAMD,EAAK9V,MACf4T,GAAQG,aACRH,EAAQoC,QAAQpW,IAAI,SAASkU,GACd,GAAPiC,EACAjC,EAAImC,WACGnC,EAAI5W,KAAK,QAAQgZ,OAAO,EAAGH,KAASD,EAC3ChC,EAAI/R,SAEJ+R,EAAImC,aAGZrC,EAAQK,cAIZ5V,EAAMoM,SAAQ,GACdpM,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,WAEjCtM,EAAM8X,aAAaxL,KAAK,SAASE,GAE7B4K,EAAiB7Z,QAAQwa,SAASvL,EAASI,SAC3C2I,EAAUF,GACF2C,UAAWxU,EACXyU,SAAUb,EAAea,SACzBrU,MAAOiS,IACPxT,QAAS,GACT6V,QAAS,EACTC,QACIrW,KAAM,SACNsW,KAAK,KAGZ5Q,GAAG,SAAU,OAAQoH,EAAE+D,SAASxR,EAAc,MAC9CqG,GAAG,QAAS,OAAQ,cAQpBA,GAAG,QAAS,OAAQ,cAelBA,GAAG,YAAa,OAAQ,SAASI,GAChC9G,EAAOyH,OAAO,WACV3K,EAAGqS,IAAMrI,EAAEyQ,SAASjR,OAAOkR,OAAS,aAGxC1Q,EAAEyQ,SAASzU,OACPC,MAAS,UAEd2D,GAAG,WAAY,OAAQ,SAASI,GAC/B9G,EAAOyH,OAAO,WACV3K,EAAGqS,IAAM,OAEbrI,EAAEyQ,SAASzU,OACPC,MAAS,UAEd2D,GAAG,YAAa,OAAQ,SAASI,GAChC9G,EAAOyH,OAAO,WACV3K,EAAGqS,IAAMrI,EAAEyQ,SAASjR,OAAOtF,KAAO,iBAEvC0F,GAAG,WAAY,OAAQ,WACtB1G,EAAOyH,OAAO,WACV3K,EAAGqS,IAAM,SAKrBpP,EAAU+P,sBAAsBvD,IAAI,SAASC,GACzClM,EAAckM,EAAU7I,IACxBuK,MAEJA,IACAhP,EAAMoM,SAAQ,OA5J1BgJ,EAAmBjW,SAAW,QAAS,YAAa,SAAU,eAAgB,SAAU,OAAQ,UAAW,SAAU,YAAa,IATlI,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbG,WAAY2V,EACZ1V,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,aAAc+V,MAqbjC,WACI,YAOA,SAAS5U,KAaL,QAASgY,GAAcvY,EAAOa,EAAWZ,EAAQC,EAAcvC,EAAUmD,EAAQI,EAAID,EAAQF,EAAS6N,GA0BlG,QAASzN,KACL,GAAIuG,GAAWjE,EAAQnC,UAAU,sBAAsB,EAClC,IAAjBoG,EAAS/F,QACbd,EAAUe,oBAAoB,MAAO,mBACjC6B,EAAQnC,UAAU,sBAAsB,GAAGC,IAAI,SAASuN,GACpD,MAAOA,GAAKrN,SAASC,GAAGqN,iBAIpC,QAASC,KACmB,GAApB5N,EAAYO,OACZ8B,EAAQnC,UAAU,sBAAsBoF,QAAQ,qBAAqB,GAErEjD,EAAQnC,UAAU,UAAUoF,QAAQ,oBAAqB,WACrD,MAAQtF,GAAYuG,QAAQ9J,KAAK4D,SAASC,KAAO,IA0D7D,QAASmP,KAELhN,EAAQ9C,EAAQgG,WAAa,IACsB,SAA/CxJ,QAAQgB,QAAQ,eAAeM,KAAK,YACpCgF,GAAS,KAEbS,EAASvD,EAAQwD,YAAc,IACgB,QAA3ChH,QAAQgB,QAAQ,SAASM,KAAK,YAAqBgF,GAAS,KAEhEJ,EACK5E,KAAK,QAAS,QACdA,KAAK,SAAUyF,GACpB2K,EAAS/N,EAAG2D,MAAMW,SACbE,SAASyJ,EAAMA,IACf1J,OAAO,EAAG5B,IAAQqD,OAEvBgI,EAAShO,EAAG2D,MAAMW,SACbE,SAAS0J,EAAMA,IACf3J,OAAOnB,EAAQ,IAAI4C,OAI5B,QAASnF,KAEL,GAEI4I,GAAKD,EAFL8N,EAAUtF,CAGdvI,GAAM5M,KAAKuH,IAAIpE,EAAGyJ,IAAI6N,EAAS,SAASjS,GACpC,OAAQA,EAAE,MAEdmE,EAAM3M,KAAKuH,IAAIpE,EAAGwJ,IAAI8N,EAAS,SAASjS,GACpC,OAAQA,EAAE,MAEd4I,EAAmC,KAA1BxE,EAAMD,EAAOC,EAAMD,GAC5BC,EAAM5M,KAAKuH,IAAIpE,EAAGyJ,IAAI6N,EAAS,SAASjS,GACpC,OAAQA,EAAE,MAEdmE,EAAM3M,KAAKuH,IAAIpE,EAAGwJ,IAAI8N,EAAS,SAASjS,GACpC,OAAQA,EAAE,MAEd6I,EAAmC,KAA1BzE,EAAMD,EAAOC,EAAMD,GAE5BmG,IAEA4H,EAAQvX,EAAG8H,IAAIC,OACVpE,MAAMoK,GACN/F,OAAO,OACPC,MAAM,GAEXuP,EAAQxX,EAAG8H,IAAIC,OACVpE,MAAMqK,GACNhG,OAAO,QACPC,MAAM,EAGX,IAAI5F,GAAQrC,EAAG8H,IAAIzF,QACdqF,EAAEqG,GACF1J,EAAE2J,GACF1H,GAAG,WAAY,WACZ,GAAIwJ,GAAKzN,EAAM2C,QACfzC,GAAQnC,UAAU,UACboF,QAAQ,oBAAqB,SAASH,GACnC,MAAQA,GAAE,GAAKyK,EAAG,GAAG,IAAMzK,EAAE,GAAKyK,EAAG,GAAG,IAAMzK,EAAE,GAAKyK,EAAG,GAAG,IAAMzK,EAAE,GAAKyK,EAAG,GAAG,KAEtF9P,EAAGwC,OAAO7F,MAAM2K,aAAakE,SAAS,KACjC1G,KAAKzC,EAAM2C,SACP,EAAG,IACH,EAAG,MAEZ/E,KAGRsC,GAAQuC,KAAKzC,EAEb,IAAI0N,GAAUxN,EAAQnC,UAAU,UAAU8F,KAAK8L,EAAS,SAAS3M,GAC7D,MAAOA,IAGX0K,GAAQ1J,QACH5D,OAAO,UACP9E,MACGkF,QAAS,WACTmN,GAAc,GAARrN,EACNsN,GAAe,GAAT7M,EACNmK,EAAK,IAER7K,MAAM,eAAgB,KACtB4D,GAAG,YAAa,SAASjB,GACtB8I,EAAU7G,aACLkE,SAAS,KACT9I,MAAM,UAAW,GACtByL,EAAU+B,KAAK7K,EAAE7E,IACZkC,MAAM,OAAS1C,EAAGyD,MAAM0M,MAAQ,GAAM,MACtCzN,MAAM,MAAQ1C,EAAGyD,MAAM2M,MAAQ,EAAK,QAE5C9J,GAAG,WAAY,WACZ6H,EAAU7G,aACLkE,SAAS,KACT9I,MAAM,UAAW,KAEzB4E,aACAkE,SAAS,KACTgF,MAAM,SAASnL,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpB3H,KAAK,KAAM,SAAS0H,GACjB,MAAO0I,GAAO1I,EAAE,MAEnB1H,KAAK,KAAM,SAAS0H,GACjB,MAAO2I,GAAO3I,EAAE,MAEnB3C,MAAM,eAAgB,GAE3BqN,EAAQ5J,OACHmB,aACAkE,SAAS,KACTgF,MAAM,SAASnL,EAAGC,GACf,MAAOA,GAAI,IAAM,MAEpB3H,KAAK,KAAc,GAARgF,GACXhF,KAAK,KAAe,GAATyF,GACXV,MAAM,eAAgB,KACtB0D,SAGLqR,EACK9Z,KAAK,QAAS,QACdA,KAAK,YAAa,gBAAkBqQ,EAAO,GAAK,KAChDlJ,KAAKyS,GACL9U,OAAO,QACPqO,KAAK,OAEV4G,EACK/Z,KAAK,QAAS,QACdA,KAAK,YAAa,aAAeoQ,EAAO,GAAK,QAC7CjJ,KAAK0S,GACL/U,OAAO,QACP9E,KAAK,IAAK,IACVA,KAAK,KAAM,SACXmT,KAAK,OAEVhD,IA7OJ,GAAIzR,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAKd,IAMIwD,GAAOS,EAAQ2K,EAAQC,EAAQC,EAAMC,EAAMqJ,EAAOC,EAClDxF,EAPAzP,EAAUvC,EAAGwC,OAAO,cAAcC,OAAO,OAAO9E,KAAK,KAAM,SAC3D+Z,EAAUnV,EAAQE,OAAO,KACzBgV,EAAUlV,EAAQE,OAAO,KACzB0L,EAAYnO,EAAGwC,OAAO,QAAQC,OAAO,OAAO9E,KAAK,QAAS,uBAO1DjB,EAAKC,IACTD,GAAGwC,WAAaF,EAAaE,WAC7BxC,EAAGkS,YACHlS,EAAGmS,QAAU,KACbnS,EAAGyZ,OAAS,EAGZ,IAAIjW,GAAkD,MAAnCP,EAAU2D,yBAAsC3D,EAAU2D,sBAAsBC,GAqBnGzE,GAAMoM,SAAQ,GAAM,mBACpBpM,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,SAASE,GAC1C,GAAI2D,GAAM3D,EAASI,QAAQwD,SAASnN,OAAO,SAASiI,GAChD,MAAOA,GAAEvD,QAAQ,aAAe,GAGpCwI,GAAMA,EAAI,GAAGvQ,QAAQ,SAAU,IAC/BI,EAAMqQ,eAAe,uBACrBrQ,EAAMmT,OAAOvV,EAAGwC,WAAY+P,GAAK7D,KAAK,WAElCtM,EAAMqQ,eAAe,qBACrBrQ,EAAMuQ,kBAAkBjE,KAAK,SAASE,GAGlC5O,EAAGkS,SAAWtD,EAASI,QACvBhP,EAAGkS,SAAS7C,QAAQ,OACpBrP,EAAGmS,QAAUnS,EAAGkS,SAAS,GAEzBhP,EAAOqM,OAAO,aAAc,WACxBwD,MAIJ9P,EAAUuM,yBAAyBC,IAAI,SAASC,GAC5ClM,EAAckM,EAAU7I,IACxB7G,EAAGyZ,OAAS,GACZrI,WAOhB,IAAI2B,GAAS,WACT3Q,EAAMqQ,eAAe,mBACrBrQ,EAAM6Y,iBAA8B,OAAZjb,EAAGmS,QAAkB,KAAOnS,EAAGmS,SAASzD,KAAK,SAASE,GAC1ExM,EAAMqQ,eAAe,gBACrB,IAAIzD,GAAUJ,EAASI,OACvBhP,GAAGyV,IAAMtV,KAAK8K,MAA2C,IAArC2D,EAASI,QAAQ,mBACrChP,EAAG0V,IAAMvV,KAAK8K,MAA2C,IAArC2D,EAASI,QAAQ,kBAErC,IAAI2G,GAAS3G,EAAQ2G,OACjB9O,EAAMmI,EAAQnI,GAClByO,GAAUK,EAAOhS,IAAI,SAASgF,EAAGC,GAE7B,MADAD,GAAE7E,GAAK+C,EAAI+B,GACJD,GACRqG,EAAQnI,KACX1C,IACA/B,EAAMoM,SAAQ,KAoJtBxO,GAAG2P,OAAS,WACRsD,IACA4H,EAAM5T,MAAMoK,GACZyJ,EAAM7T,MAAMqK,GACZyJ,EAAQ9Z,KAAK,YAAa,gBAAkBqQ,EAAO,GAAK,KAAKlJ,KAAKyS,GAClEG,EAAQ/Z,KAAK,YAAa,aAAeoQ,EAAO,GAAK,QAAQjJ,KAAK0S,GAClEjV,EAAQnC,UAAU,UACbzC,KAAK,KAAM,SAAS0H,GACjB,MAAO0I,GAAO1I,EAAE,MAEnB1H,KAAK,KAAM,SAAS0H,GACjB,MAAO2I,GAAO3I,EAAE,OAK5BhJ,QAAQgB,QAAQwC,GAAS7B,KAAK,SAC1B0P,EAAE+D,SAAS/U,EAAG2P,OAAQ,MApQ9BgL,EAAcpZ,SAAW,QAAS,YAAa,SAAU,eAAgB,WAAY,SAAU,KAAM,SAAU,UAAW,IAV1H,IAAIC,IACAC,SAAU,IACVC,YAAa,8BACbG,WAAY8Y,EACZ7Y,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,QAASmB,MA0R5B,WACI,YAOA,SAASuY,KAGL,QAASC,KAASC,EAAMC,OADxB,GAAID,GAAQ,GAAIE,OAAM;AAGtB,OACIH,KAAMA,GAXdxb,QACKC,OAAO,aACP2b,QAAQ,UAAWL,MAc3B,WACG,YAOA,SAASM,GAAUC,EAAQC,EAAYC,EAAIC,EAAMC,GAG7C,GACIC,GADAC,KAEAC,EAAgB,WAChB,MAAOF,IAEPG,EAAgB,SAASvR,GACzBoR,EAAapR,GAIbwR,EAAY,EACZC,EAAe,WAEf,MADe,OAAXD,IAAiBA,EAAY,GAC1BA,KAIPE,EAAS,GAAIX,GACbI,EAAUQ,WAAW,MAAMR,EAAUS,OAAO,KAAyB,QAAlBT,EAAUU,OAAkB,GAAKV,EAAUU,QAAS,aAAa,IAEhHC,OAAS,EACTC,OAAS,GAKjBL,GAAOM,UAAY,SAAS3V,GACxB,GAAIyC,GAAO7J,QAAQwa,SAASpT,EAAMyC,KAClC,IAAI7J,QAAQgd,UAAUZ,EAAUvS,EAAKoT,MAAO,CACxC,GAAIC,GAAWd,EAAUvS,EAAKoT,WACvBb,GAAUvS,EAAKoT,KACtBC,EAASC,QAAQtT,OAGjBoS,GAAKmB,MAAM,wBAAyBvT,GAK5C,IAAIwT,GAAU,SAASA,GAGnBA,EAAQH,SAAWV,IACnBa,EAAQ/P,OAAS,UACjB+P,EAAQhO,QAAUgO,EAAQhO,SAAW,GACrCgO,EAAQC,GAAKjB,GAGb,IAAIkB,GAAWvB,EAAGwB,OAalB,OAZApB,GAAUiB,EAAQH,UAAYK,EAGN,IAApBd,EAAOgB,WACPhB,EAAOiB,OAAS,WACZjB,EAAOkB,KAAK3d,QAAQ4d,OAAOP,KAG/BZ,EAAOkB,KAAK3d,QAAQ4d,OAAOP,IAIxBE,EAASM,QAAQ9O,KAAK,SAASE,GAElC,MADAoO,GAAQpO,SAAWA,EACZA,IAKf,QACIoO,QAASA,EACTf,cAAeA,GAnEvBT,EAAUja,SAAW,SAAU,aAAc,KAAM,OAAQ,aAX3D5B,QACKC,OAAO,aACP6d,QAAQ,WAAYjC,MAiF5B,WACI,YAOA,SAASA,GAAUkC,EAAO7B,GAEtB,GAAIjI,GAAMiI,EAAUQ,WAAa,MAAQR,EAAUS,OAAS,KAA4B,QAApBT,EAAUU,OAAoB,GAAKV,EAAUU,QAAU,QACvHS,EAAU,SAASW,GACnB,GAAIC,GAAQhK,EAAM+J,EAAIE,KAWtB,OAVAD,IAAS,OAAOE,mBAAmBC,KAAKC,UAAUL,EAAIC,QAU/CF,GACHO,OAAQ,MACRrK,IAAKgK,IAKb,QACIZ,QAASA,GAhBjBxB,EAAUja,SAAW,QAAS,aAZ9B5B,QACKC,OAAO,aACP6d,QAAQ,SAAUjC,MA+B5B,WACI,YAOA,SAASvY,GAAUI,EAAQ6a,EAAShD,EAASlK,GAIzC,GACImN,KAAoBtX,OAAQjE,KAAK,cAAewb,KAAK,SACrDC,EAAa,EACbC,IAAuBzX,OAAQjE,KAAK,cAAewb,KAAK,SACxDG,EAAgB,EAChBC,EAAgB,GAAIN,GAAQO,OAC5BC,EAA4B,GAAIR,GAAQO,OACxCE,EAAa,GAAIT,GAAQO,OACzBG,EAAyB,GAAIV,GAAQO,OAGrCI,EAAmB,SAASnP,GAC5B,GAAIxD,GAAQiS,EAAgBpU,QAAQ2F,EAChCxD,IAAO,IACPmS,EAAanS,EACb0S,EAAuBE,SAASxM,OAGpCyM,EAAoB,WACpB,MAAOZ,IAEP7L,EAAmB,WAGnB,MAFe,GAAX+L,IAAcA,EAAa,GAC3BA,GAAYF,EAAgBpa,SAAQsa,EAAaF,EAAgBpa,OAAO,GACrEoa,EAAgBE,IAEvBpN,EAAmB,SAASrO,EAAMwb,EAAMvX,GAExC,GADAA,EAAMA,EAAIrB,OACNqB,EAAI9C,QAAQuO,IAAmBzL,IAAI9C,QACmB,GAAlDiN,EAAEgO,WAAWnY,EAAKyL,IAAmBzL,KAAK9C,OADlD,CAGA,GAAI6J,GAAIvK,GACR8a,GAAgB1T,MAAM7H,KAAKA,EAAMwb,KAAKA,EAAMvX,IAAIA,EAAKmH,KAAKJ,EAAEK,OAAQgR,KAAKrR,EAAEsR,OAAO,UAClFb,GAAcF,EAAgBpa,OAAO,EACrC4a,EAAWG,SAASxM,OAEpB6M,EAAuB,WAEvB,GADAd,GAAc,EACC,EAAXA,EAEgB,MADhBnD,GAAQC,YACRkD,EAAa,EACjB,IAAI3O,GAAY4C,GAEhB,OADAsM,GAAuBE,SAASpP,GACzBA,GAEP0P,EAAuB,WAEvB,GADAf,GAAc,EACVA,GAAYF,EAAgBpa,OAEW,MADvCmX,GAAQC,YACRkD,EAAaF,EAAgBpa,OAAO,EACxC,IAAI2L,GAAY4C,GAEhB,OADAsM,GAAuBE,SAASpP,GACzBA,GAIP2P,EAAsB,SAAS3P,GAC/B,GAAIxD,GAAQoS,EAAmBvU,QAAQ2F,EACnCxD,IAAO,IACPqS,EAAgBrS,EAChBwS,EAA0BI,SAASlY,OAGvC0Y,EAAuB,WACvB,MAAOhB,IAEP1X,EAAsB,WAGtB,MAFkB,GAAd2X,IAAiBA,EAAgB,GACjCA,GAAeD,EAAmBva,SAAQwa,EAAgBD,EAAmBva,OAAO,GACjFua,EAAmBC,IAE1Bva,EAAsB,SAASpB,EAAMwb,EAAMvX,GAE3C,GADAA,EAAMA,EAAIrB,OACNqB,EAAI9C,QAAQ6C,IAAsBC,IAAI9C,QACmB,GAArDiN,EAAEgO,WAAWnY,EAAKD,IAAsBC,KAAK9C,OADrD,CAGA,GAAI6J,GAAIvK,GACRib,GAAmB7T,MAAM7H,KAAKA,EAAMwb,KAAKA,EAAMvX,IAAIA,EAAKmH,KAAKJ,EAAEK,OAAQgR,KAAKrR,EAAEsR,OAAO,UACrFX,EAAgBD,EAAmBva,OAAO,EAC1Cya,EAAcM,SAASlY,OAEvB2Y,EAA0B,WAE1B,GADAhB,GAAiB,EACC,EAAdA,EAEmB,MADnBrD,GAAQC,YACRoD,EAAgB,EACpB,IAAI7O,GAAY9I,GAEhB,OADA8X,GAA0BI,SAASpP,GAC5BA,GAEP8P,EAA0B,WAE1B,GADAjB,GAAiB,EACbA,GAAeD,EAAmBva,OAEW,MAD7CmX,GAAQC,YACRoD,EAAgBD,EAAmBva,OAAO,EAC9C,IAAI2L,GAAY9I,GAEhB,OADA8X,GAA0BI,SAASpP,GAC5BA,GAIP+P,EAAkB,aAGlBtX,EAAQ,WACRgW,KACAuB,eAAiB,KACjBpB,KACAqB,kBAAoB,MAIpBC,GACAC,aAAcrB,EACdhP,yBAA0BkP,EAC1BoB,UAAWnB,EACX3L,sBAAuB4L,EAEvB3N,iBAAkBA,EAClB4N,iBAAkBA,EAClBvM,iBAAkBA,EAClByM,kBAAmBA,EACnBI,qBAAsBA,EACtBC,qBAAsBA,EAEtBpb,oBAAqBA,EACrBqb,oBAAqBA,EACrBzY,oBAAqBA,EACrB0Y,qBAAsBA,EACtBE,wBAAyBA,EACzBD,wBAAyBA,EAEzBE,gBAAiBA,EACjBtX,MAAOA,EAGX,OAAOyX,GApIX3c,EAAU1B,SAAW,SAAU,UAAW,UAAW,KAbrD5B,QACKC,OAAO,aACP2b,QAAQ,YAAatY,MAkJ9B,WACE,gBAuBF,WACI,YAOA,SAASuY,GAAUuE,EAAUC,EAAQtC,EAAOQ,EAASrC,GAIjD,QAASG,KAAiB,MAAOiE,GACjC,QAAShE,GAAcvR,GACnBqV,EAAS9D,cAAcvR,GACvBuV,EAAcvV,EACdwV,EAAapB,SAASmB,GAK1B,QAASE,KAGL,GAAIC,GAAU,GAAIlC,GAAQO,OACtB4B,EAAW,GAAInC,GAAQO,OACvB6B,GACApc,KAAO,GACPqc,SAAW,GACXzY,QAAU5D,KAAO,SACjBsc,eAAgB,EAChBC,MAAS,KACTxQ,aAEAyQ,IACExc,KAAQ,UACRA,KAAQ,UACRA,KAAQ,OAEVyc,EAAS,WACTL,EAAMpc,KAAO,GACboc,EAAMC,SAAW,GACjBD,EAAMxY,QAAU5D,KAAO,SACvBoc,EAAME,eAAgB,EACtBF,EAAMG,MAAQ,KACdH,EAAMrQ,YAENoQ,EAASvB,YAET3O,EAAQ,SAASyQ,GACjBN,EAAQM,CAER,IAAIjD,IACAM,OAAQ,OACRrK,IAAKiI,EAAUQ,WAAW,MAAMR,EAAUS,OAAO,KAAyB,QAAlBT,EAAUU,OAAkB,GAAKV,EAAUU,QAAS,SAC5G/S,MACIqX,SAAUP,EAAMpc,KAChBqc,SAAUD,EAAMC,SAChBzY,OAAQwY,EAAMxY,OAAO5D,MAG7B,OAAOwZ,GAAMC,GAAKjP,KAAK,SAASoS,GACxBA,EAAItX,KAAKuX,SACTT,EAAME,eAAgB,EACtBF,EAAMG,MAAQK,EAAItX,KAAKiX,MACvBH,EAAMrQ,SAAW6Q,EAAItX,KAAKyG,SAC1BmQ,EAAQtB,SAASwB,KAEjBA,EAAME,eAAgB,EACtBF,EAAMG,MAAO,QAIzB,QACIO,WAAY,WAAY,MAAON,IAC/BO,QAAS,WAAa,MAAOX,IAC7BnQ,MAAOA,EACPwQ,OAAQA,EACRP,QAASA,EACTC,SAAUA,GAIlB,QAASa,KAAe,MAAOC,GAG/B,QAAS3S,GAAQ9D,GAMb,MALIA,GACA/K,QAAQgB,QAAQ,iBAAiBygB,OAEjCzhB,QAAQgB,QAAQ,iBAAiB0gB,OAE9B5O,EAEX,QAASA,MAGT,QAAS6O,KACL3hB,QAAQgB,QAAQ,oBAAoB4gB,cAExC,QAASC,KACL7hB,QAAQgB,QAAQ,oBAAoB4gB,cAExC,QAAShR,KACL5Q,QAAQgB,QAAQ,oBAAoB4gB,cAGxC,QAAS7e,KACL,QACIwB,KAAM,qBACNud,MAAO,UACPC,IAAK,cACLC,KAAM,8DAENzd,KAAM,YACNud,MAAO,YACPC,IAAK,gBACLC,KAAM,KAENzd,KAAM,WACNud,MAAO,WACPC,IAAK,eACLC,KAAM,+EAENzd,KAAM,OACNud,MAAO,OACPC,IAAK,WACLC,KAAM,0FAENzd,KAAM,MACNud,MAAO,MACPC,IAAK,UACLC,KAAM,wDAENzd,KAAM,WACNud,MAAO,WACPC,IAAK,eACLC,KAAM,yGAENzd,KAAM,eACNud,MAAO,UACPC,IAAK,cACLC,KAAM,KAYNzd,KAAM,WACNud,MAAO,WACPC,IAAK,eACLC,KAAM,KAId,QAAS/D,GAAMC,EAAOD,GAClB,MAAOoC,GAAOhD,SACVa,MAAOA,EACPD,MAAOA,IAKf,QAASnP,GAAWmT,GAEhB,MADA7B,GAAS9D,cAAc2F,GAChB7B,EAAS/C,SACZJ,IAAK,wBACL5N,QAAS4S,IAIjB,QAASC,GAAgBD,GACrB,MAAO7B,GAAS/C,SACZJ,IAAK,kBACL5N,QAAS4S,IAGjB,QAASlR,GAAuBkR,GAC5B,MAAO7B,GAAS/C,SACZJ,IAAK,yBACL5N,SACI8S,YAAaF,EACbG,eAAgB,YAI5B,QAASC,MACT,QAASC,MACT,QAAStP,KACL,MAAOoN,GAAS/C,SACZJ,IAAK,oBAGb,QAASsF,KACL,MAAOnC,GAAS/C,SACZJ,IAAK,iCAGb,QAASuF,GAAwBC,GAC7B,MAAOrC,GAAS/C,SACZJ,IAAK,0BACL5N,QAASoT,IAGjB,QAASC,GAAkBrT,GAEvB,MAAO+Q,GAAS/C,SACZJ,IAAK,oBACL5N,QAASA,IAGjB,QAASsT,MACT,QAASC,GAAmCC,GACxC,MAAOzC,GAAS/C,SACZJ,IAAK,qCACL5N,QAASwT,IAGjB,QAASC,MACT,QAASC,MACT,QAASnN,GAAOqM,EAAae,GACzB,GAAI3T,IACA4S,YAAaA,EACbe,WAAYA,EAEhB,OAAO5C,GAAS/C,SACZJ,IAAK,YACL5N,QAASA,IAGjB,QAASiM,GAAiB9I,GACtB,GAAInD,IACAmE,MAAOhB,EAGX,OAAO4N,GAAS/C,SACZJ,IAAK,eAEL5N,QAASA,IAGjB,QAASwG,GAAkBrD,GACvB,GAAInD,IACAmE,MAAOhB,EAEX,OAAO4N,GAAS/C,SACZJ,IAAK,gBACL5N,QAASA,IAGjB,QAAS0D,GAAQkP,EAAae,GAC1B,GAAI3T,IACA4S,YAAaA,EACbe,WAAYA,EAEhB,OAAO5C,GAAS/C,SACZJ,IAAK,aACL5N,QAASA,IAGjB,QAAS0F,GAAkBvC,EAASmC,GAChC,GAAItF,IACAmE,MAAOhB,EACPyQ,YAAatO,EAAQvQ,OACrBuQ,QAASA,EAEb,OAAOyL,GAAS/C,SACZJ,IAAK,gBACL5N,QAASA,IAGjB,QAAS4D,GAAmCiQ,GAExC,MADAA,GAAQA,IAAU,QAAS,YACpB9C,EAAS/C,SACZJ,IAAK,iCACL5N,QAAS6T,IAGjB,QAASjS,GAA4B4R,EAAYM,GAC7C,MAAO/C,GAAS/C,SACZJ,IAAK,0BACL5N,SACI+T,UAAWP,EACXM,MAAOA,KAInB,QAASnU,KACL,MAAOoR,GAAS/C,SACZJ,IAAK,oBAGb,QAASoG,MACT,QAASC,KACL,MAAOlD,GAAS/C,SACZJ,IAAK,4BACL5N,QAAS,gBAGjB,QAASkL,KACL,MAAO6F,GAAS/C,SACZJ,IAAK,aACL5N,QAAS,uBAGjB,QAASkU,GAAYC,EAAUje,GAC3B,MAAO6a,GAAS/C,SACZJ,IAAK,gBACL5N,SACImU,SAAUA,EACVje,SAAUA,KAItB,QAASke,GAAWD,EAAUje,GAC1B,MAAO6a,GAAS/C,SACZJ,IAAK,eACL5N,SACImU,SAAUA,EACVje,SAAUA,KAItB,QAASme,GAAgBF,EAAUje,GAC/B,MAAO6a,GAAS/C,SACZJ,IAAK,oBACL5N,SACImU,SAAUA,EACVje,SAAUA,KAItB,QAASoe,GAAaC,GAClB,MAAOxD,GAAS/C,SACZJ,IAAK,2BACL5N,SACIwU,mBAAoBD,KA5UhC,GAAItD,GACAC,EAAe,GAAIhC,GAAQO,OAuE3B0C,EAAWhB,GAyQf,QACIvC,MAAOA,EACP3B,cAAeA,EACfD,cAAeA,EACfkE,aAAcA,EACdxd,SAAUA,EACVwe,WAAYA,EACZI,WAAYA,EACZE,WAAYA,EACZjR,aAAcA,EACd/B,QAASA,EACTiE,eAAgBA,EAChBhE,WAAYA,EACZoT,gBAAiBA,EACjBnR,uBAAwBA,EACxBsR,qCAAsCA,EACtCC,mBAAoBA,EACpBtP,gBAAiBA,EACjBuP,6BAA8BA,EAC9BC,wBAAyBA,EACzBE,kBAAmBA,EACnBnI,WAAYA,EACZoI,wBAAyBA,EACzBC,mCAAoCA,EACpCE,gBAAiBA,EACjBC,0BAA2BA,EAC3BnN,OAAQA,EACR0F,iBAAkBA,EAClBzF,kBAAmBA,EACnB9C,QAASA,EACTgC,kBAAmBA,EACnB9B,mCAAoCA,EACpChC,4BAA6BA,EAC7BjC,aAAcA,EACdqU,uBAAwBA,EACxBE,YAAaA,EACbE,WAAYA,EACZC,gBAAiBA,EACjBJ,0BAA2BA,EAC3BK,aAAcA,GAjXtB9H,EAAUja,SAAW,WAAY,SAAU,QAAS,UAAW,aAd/D5B,QACKC,OAAO,aACP2b,QAAQ,QAASC,MAiY1B,WACI,YAOA,SAAS7Y,KAaL,QAAS8gB,GAAmBrhB,EAAOC,EAAQtC,EAAUmD,EAAQZ,GAEzD,GAAI3C,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAId,IAAIzC,GAAKC,IACTD,GAAG4a,QAAUtY,EAAaE,WAC1BxC,EAAG0jB,YACH1jB,EAAGuJ,QACHvJ,EAAGyZ,OAAS,EAGZ,IAAIkK,EAGJvhB,GAAMoM,SAAQ,GACdpM,EAAMyf,gBAAgB7hB,EAAG4a,SAASlM,KAAK,SAASE,GAC5C5O,EAAG0jB,SAAW9U,EAASI,QAAQ0U,SAC/B1jB,EAAGuJ,KAAOqF,EAASI,QAAQuD,IAC3BxS,EAAS,WACL4jB,EAAUhkB,QAAQgB,QAAQ,uBAAuBijB,WAC7CC,QAAU,IAEd3gB,EAAOqM,OAAO,YAAa,WACvBoU,EAAQ/D,MAAMnG,OAAOzZ,EAAGyZ,QAAQtV,SAEpC/B,EAAMoM,SAAQ,IACf,GAAG,KAzBdiV,EAAmBliB,SAAW,QAAS,SAAU,WAAY,SAAU,eAfvE,IAAIC,IACAC,SAAU,IACVC,YAAa,wCACbG,WAAY4hB,EACZ3hB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,aAAcmB,MAmDjC,WACI,YAOA,SAASmhB,KAcL,QAASC,GAAkB3hB,EAAOa,EAAWZ,EAAQtC,EAAUmD,EAAQZ,EAAcmV,EAAWyG,EAAS7a,EAAQF,EAAS6N,GAItH,GAAIrR,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAKd,IAAIuhB,GACApe,EAAUjG,QAAQgB,QAAQ,kBAG1BX,EAAKikB,EAAoBhkB,KAAMqC,EAGnCtC,GAAG2P,OAAS,WACR,GAAI1J,GAAQ9C,EAAQgG,UACyB,SAAzCxJ,QAAQgB,QAAQ,SAASM,KAAK,YAAmBgF,GAAS,KAC9DL,EAAQK,MAAOA,GACfL,EAAQc,OAAOvD,EAAQwD,YAAc,IACjCqd,GAASA,EAAQrU,UAIzBhQ,QAAQgB,QAAQwC,GAAS7B,KAAK,SAC1B0P,EAAE+D,SAAS/U,EAAG2P,OAAQ,MAE1BhQ,QAAQgB,QAAQwC,GAAS7B,KAAK,QAC1B,WACI4B,EAAOyH,OAAO,WACV3K,EAAGkkB,gBAAiB,EACpBlkB,EAAGmkB,mBAAoB,MAMnC/hB,EAAMoM,SAAQ,GACd4V,EAAShiB,EAAOpC,EAAI,SAASwJ,GAGzBxJ,EAAG2P,QAGH,IAAI0U,GAASC,GAGbN,GAAUO,EAAgB/a,EAAM6a,EAAQ5M,EAAW9X,QAAQgB,QAAQ,mBAGnE6jB,EAAkBR,EAAShkB,EAAIkD,GAG/BuhB,EAAqBT,EAAShkB,EAAIkD,EAAQd,EAAOrC,EAAUiR,GAG3D0T,EAAqBV,EAAShkB,EAAIkD,EAAQnD,GAG1C4kB,EAAiBX,EAAShkB,EAAIkD,EAAQnD,EAAUqC,EAAO8b,GAGvD0G,EAAiBZ,EAAShkB,EAAIkD,GAG9B2hB,EAAeb,EAAShT,GAGxB8T,EAAmBd,EAAShkB,EAAImD,GAGhC4hB,EAAkBf,EAAS/gB,EAAW+N,EAAG9N,GAGzCd,EAAMoM,SAAQ,KAItB,QAASoW,GAAiBI,EAAOhlB,EAAIkD,GAGjCA,EAAOqM,OAAO,gBAAiB,WAC3B,GAAI5P,QAAQ4C,YAAYvC,EAAGilB,YAEvB,YADAjlB,EAAGklB,iBAAmB,GAG1BF,GAAMlN,YACN,IAAIqN,IAAWC,MAAM,EACrBJ,GAAMjL,MAAM,yBACP5N,QAAQ,SAAS0L,GACd,MAAmB,IAAf7X,EAAGilB,eAAkBpN,GAAIE,gBAC2C,GAApEF,EAAIrO,OAAOtF,KAAKmhB,cAActb,QAAQ/J,EAAGilB,WAAWI,gBACpDxN,EAAI/R,SACJ7F,KAAKmlB,OAAS,GAEdvN,EAAIE,aAEToN,GACPH,EAAMhN,WACa,IAAfhY,EAAGilB,WAAgBjlB,EAAGslB,iBAAmB,GACxCtlB,EAAGslB,iBAAmB,IAAIH,EAAQC,MAAO,cAIlDliB,EAAOqM,OAAO,mBAAoB,WAC9B,IAAI5P,QAAQ4C,YAAYvC,EAAGulB,eAA3B,CACAP,EAAMlN,YACN,IAAIqN,IAAWC,MAAM,EACrBJ,GAAMjL,MAAM,4BACP5N,QAAQ,SAAS0L,GACd,MAAsB,IAAlB7X,EAAGulB,kBAAqB1N,GAAIE,gBACyC,GAArEF,EAAIrO,OAAO1F,GAAGuhB,cAActb,QAAQ/J,EAAGulB,cAAcF,gBACrDxN,EAAI/R,SACJ7F,KAAKmlB,OAAS,GAEdvN,EAAIE,aAEboN,GACHH,EAAMhN,WACgB,IAAlBhY,EAAGulB,cAAmBvlB,EAAGwlB,oBAAsB,GAC9CxlB,EAAGwlB,oBAAsB,IAAIL,EAAQC,MAAO,eAGzD,QAASN,GAAmBE,EAAOhlB,EAAImD,GACnCnD,EAAGylB,mBAAqBzlB,EAAG0lB,oBAAoB,GAC/C1lB,EAAG2lB,oBACEzhB,KAAK,aAAc0Y,IAAI,WACpB5c,EAAG2lB,kBAAkB7b,SAAShE,QAC9B,IAAI8f,KACJ5lB,GAAG2lB,kBAAkB7b,SAChB+b,aAAa,QACb1Z,QAAQ,SAAS0D,GACd5P,KAAK4P,EAAK/L,OAASmV,QAAQ,YAC5B2M,GACPZ,EAAMc,UAAUF,MAEnB1hB,KAAK,aAAc0Y,IAAI,WACpB,GAAIgJ,KACJ5lB,GAAG2lB,kBAAkB7b,SAChB+b,aAAa,QACb1Z,QAAQ,SAAS0D,GACd5P,KAAK4P,EAAK/L,OAASmV,QAAQ,SAC5B2M,GACPZ,EAAMc,UAAUF,MAEnB1hB,KAAK,0BAA2B0Y,IAAI,WACjCoI,EAAMlN,aACN9X,EAAG2lB,kBAAkB7b,SAAShE,SAC9B9F,EAAG2lB,kBAAkB7b,SAChB+b,aAAa,QACb1Z,QAAS,SAAS0L,GACfA,EAAI/R,WAEZkf,EAAMhN,WACNhY,EAAGmkB,mBAAoB,KAE1BjgB,KAAK,4BAA6B0Y,IAAI,WACnCoI,EAAMlN,aACN9X,EAAG2lB,kBAAkB7b,SAChB+b,aAAa,QACb1Z,QAAS,SAAS0L,GACfA,EAAIE,aAEZiN,EAAMhN,WACNhY,EAAGmkB,mBAAoB,KAE1BjgB,KAAK,iBAAkB0Y,IAAI,WAExB,GAAmB,UAAf5c,EAAGwC,WAAP,CACA,GAAIxC,EAAGwC,WAAWuH,SAAQ,GAAc,CACpC,GAAIgc,GAAa/lB,EAAGwC,WAAWyX,OAAO,GAAK,QACvC9G,EAAQnT,EAAG2lB,kBAAkB7b,SAAS+b,aAAa,QAAQliB,IAAI,SAASqiB,GACxE,MAAOA,GAAExc,OAAOtF,OACjB+hB,KAAK,KACJrS,EAAM,gDAAkDmS,EAAa,MAAQ5S,CACjFhQ,GAAQ+iB,KAAKtS,GAEjB5T,EAAGmkB,mBAAoB,MAG/BnkB,EAAGmmB,iBACEjiB,KAAK,aAAc0Y,IAAI,WACpB5c,EAAGmmB,eAAerc,SAAShE,QAE3B,IAAI8f,KACJ5lB,GAAGmmB,eAAerc,SACb+b,aAAa,QACb1Z,QAAQ,SAAS0D,GACd5P,KAAK4P,EAAK/L,OAASmV,QAAQ,YAC5B2M,GACPZ,EAAMc,UAAUF,MAEnB1hB,KAAK,aAAc0Y,IAAI,WACpB,GAAIgJ,KACJ5lB,GAAGmmB,eAAerc,SACb+b,aAAa,QACb1Z,QAAQ,SAAS0D,GACd5P,KAAK4P,EAAK/L,OAASmV,QAAQ,SAC5B2M,GACPZ,EAAMc,UAAUF,MAEnB1hB,KAAK,6BAA8B0Y,IAAI,WACpCoI,EAAMlN,aACN9X,EAAGmmB,eAAerc,SAAShE,SAC3B9F,EAAGmmB,eAAerc,SACb+b,aAAa,QACb1Z,QAAS,SAAS0L,GACfA,EAAI/R,WAEZkf,EAAMhN,WACNhY,EAAGkkB,gBAAiB,KAEvBhgB,KAAK,+BAAgC0Y,IAAI,WACtCoI,EAAMlN,aACN9X,EAAGmmB,eAAerc,SACb+b,aAAa,QACb1Z,QAAS,SAAS0L,GACfA,EAAIE,aAEZiN,EAAMhN,WACNhY,EAAGmkB,mBAAoB,KAE1BjgB,KAAK,iBAAkB0Y,IAAI,WACxBzZ,EAAQ+iB,KAAK,qDAAqDlmB,EAAGmmB,eAAerc,SAASN,OAAOtF,MACpGlE,EAAGkkB,gBAAiB,KAG5BlkB,EAAGomB,aACEC,UAAc,WACXrB,EAAMxK,MACNwK,EAAMpL,UAEV0M,QAAY,WACRtB,EAAMxK,IAAKwK,EAAMpN,EAAE,aAAc,KAErC2O,qBAAwB,WACpB,GAAIC,GAAYxB,EAAMpN,EAAE,kCACpB6O,EAAYD,EAAU7iB,IAAI,SAASkM,GAAO,MAAOA,GAAKrG,OAAOtF,OAC7DwiB,EAAeF,EAAUX,aAAa,OAE1Cb,GAAMlN,aACN4O,EAAarhB,OAAO,SAASuD,EAAGgD,GAC5B,GAAI+a,GAAmB/a,EAAQia,aAAa,QAAQliB,IAAI,SAASkM,GAAO,MAAOA,GAAKrG,OAAOtF,MAI3F,OAHAuiB,GAAUta,QAAQ,SAASya,GACvB,MAAwC,IAApCD,EAAiB5c,QAAQ6c,IAAsB,EAAnD,UAEG,IACRza,QAAS,SAAS0L,GACjBA,EAAI/R,WAERkf,EAAMhN,YAEV6O,kBAAqB,WACjB,GACI1T,GADAuT,EAAe1B,EAAMpN,EAAE,oCAG3B8O,GAAahe,KAAK,SAASE,EAAGiP,GAC1B,GAAIiP,GAAejP,EAAIgO,aAAa,QAAQliB,IAAK,SAASkM,GAAO,MAAOA,GAAKrG,OAAOtF,MAC1EiP,GAAH,GAAHvK,EAAcke,EAEN3T,EAAM9N,OAAO,SAAS0hB,GAC1B,MAAOD,GAAa/c,QAAQgd,IAAO,GACpCD,KAGX9B,EAAMlN,aACNkN,EAAMpN,EAAE,yBACHzL,QAAQ,SAAS+E,GACViC,EAAMpJ,QAAQmH,EAAK1H,OAAOtF,OAAO,GACjCgN,EAAKpL,WAGjBkf,EAAMhN,YAGVgP,iBAAoB,WAChB,GAAIpB,KACJZ,GAAMpN,EAAE,qCACHzL,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QAAQ1Z,QAAQ,SAAS0D,GACvC5P,KAAK4P,EAAK/L,OAASmV,QAAQ,YAC5BhZ,OACR2lB,GACHZ,EAAMc,UAAUF,IAEpBqB,iBAAoB,WAChB,GAAIrB,KACJZ,GAAMpN,EAAE,qCACHzL,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QAAQ1Z,QAAQ,SAAS0D,GACvC5P,KAAK4P,EAAK/L,OAASmV,QAAQ,SAC5BhZ,OACR2lB,GACHZ,EAAMc,UAAUF,IAEpBsB,cAAiB,WACb,GAAItB,KACJZ,GAAMpN,EAAE,kCACHzL,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QAAQ1Z,QAAQ,SAAS0D,GACvC5P,KAAK4P,EAAK/L,OAASmV,QAAQ,YAC5BhZ,OACR2lB,GACHZ,EAAMc,UAAUF,IAEpBuB,cAAiB,WACb,GAAIvB,KACJZ,GAAMpN,EAAE,kCACHzL,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QAAQ1Z,QAAQ,SAAS0D,GACvC5P,KAAK4P,EAAK/L,OAASmV,QAAQ,SAC5BhZ,OACR2lB,GACHZ,EAAMc,UAAUF,IAEpBwB,qBAAyB,WACrBpC,EAAMlN,aACNkN,EAAMpN,EAAE,qCACHiO,aAAa,QACb1Z,QAAS,SAAS0L,GACfA,EAAI/R,WAEZkf,EAAMhN,YAEVqP,wBAA4B,WACxBrC,EAAMlN,aACNkN,EAAMpN,EAAE,kCACHiO,aAAa,QACb1Z,QAAS,SAAS0L,GACfA,EAAI/R,WAEZkf,EAAMhN,YAEVsP,eAAmB,WACftC,EAAMlN,aACNkN,EAAMpN,EAAE,4BACHzL,QAAS,SAAS0L,GACfA,EAAI/R,WAEZkf,EAAMhN,YAEVuP,YAAgB,WACZvC,EAAMlN,aACNkN,EAAMpN,EAAE,yBACHzL,QAAS,SAAS0L,GACfA,EAAI/R,WAEZkf,EAAMhN,YAEVwP,iBAAqB,WACjBxC,EAAMlN,aACNkN,EAAMpN,EAAE,qCACHzL,QAAS,SAAS0L,GACfA,EAAIE,aAEZiN,EAAMhN,YAEVyP,cAAkB,WACdzC,EAAMlN,aACNkN,EAAMpN,EAAE,kCACHzL,QAAS,SAAS0L,GACfA,EAAIE,aAEZiN,EAAMhN,YAEV0P,uBAA2B,WACvB1C,EAAMlN,aACNkN,EAAMpN,EAAE,4BACHzL,QAAS,SAAS0L,GACfA,EAAIA,EAAI8P,SAAS7d,SAAS,WAAW,cAE7Ckb,EAAMhN,YAEV4P,oBAAwB,WACpB5C,EAAMlN,aACNkN,EAAMpN,EAAE,yBACHzL,QAAS,SAAS0L,GACfA,EAAIA,EAAI8P,SAAS7d,SAAS,WAAW,cAE7Ckb,EAAMhN,YAEV6P,UAAa,WACT7C,EAAMlN,aACNkN,EAAMpN,EAAE,4BACHzL,QAAS,SAAS0L,GACfA,EAAIA,EAAI8P,SAAS7d,SAAS,WAAW,cAE7Ckb,EAAMpN,EAAE,yBACHzL,QAAS,SAAS0L,GACfA,EAAIA,EAAI8P,SAAS7d,SAAS,WAAW,cAE7Ckb,EAAMhN,YAEV8P,YAAgB,WACZ9C,EAAMlN,aACNkN,EAAMpN,EAAE,iBACHzL,QAAS,SAAS0L,GACfA,EAAIE,aAEZiN,EAAMhN,YAEV+P,aAAiB,WACb,GAAInC,KACJZ,GAAMpN,EAAE,gCAAgCzL,QAAQ,SAAS0D,GACrD5P,KAAK4P,EAAK/L,OAASmV,QAAQ,SAC5B2M,GACHZ,EAAMc,UAAUF,KAI5B,QAAS3B,GAAoBjkB,EAAIsC,GA+B7B,MA7BAtC,GAAGwC,WAAaF,EAAaE,WAC7BxC,EAAGmmB,gBAAiB,EACpBnmB,EAAGkkB,eACHlkB,EAAG2lB,kBACH3lB,EAAGmkB,mBAAoB,EACvBnkB,EAAG0lB,oBACH1lB,EAAGylB,mBACHzlB,EAAGgoB,kBACHhoB,EAAGioB,iBACHjoB,EAAGkoB,cACHloB,EAAGmoB,aACHnoB,EAAGooB,cACHpoB,EAAGqoB,YACHroB,EAAGsoB,cACHtoB,EAAGuoB,kBACHvoB,EAAGilB,WACHjlB,EAAGslB,iBAAmB,GACtBtlB,EAAGulB,cACHvlB,EAAGwlB,oBAAsB,GACzBxlB,EAAG8E,eACH9E,EAAGiE,cAAgB,GACnBjE,EAAGwoB,kBACHxoB,EAAGyoB,iBACHzoB,EAAG0oB,eACH1oB,EAAG2oB,cACH3oB,EAAGomB,YACHpmB,EAAG4L,QACH5L,EAAG+mB,KACH/mB,EAAGoS,MACIpS,EAGX,QAAS+kB,GAAkBC,EAAO/hB,EAAW+N,EAAG9N,GAM5C,QAAS0lB,KACL,GAAI/hB,GAAMme,EAAMpN,EAAE,kCAAkCjU,IAAI,SAASkU,GAAM,MAAOA,GAAIrO,OAAO1F,GAAGqN,eAC7C,IAA3CH,EAAEgO,WAAWnY,EAAKgiB,GAAiB9kB,QACpC8C,EAAI9C,OAAO,GAAGd,EAAUgO,iBAAiB,qBAAsB,SAAUpK,GAGhF,QAASiiB,KACL,GAAIjiB,GAAMme,EAAMpN,EAAE,qCAAqCjU,IAAI,SAASkU,GAAM,MAAOA,GAAIrO,OAAO1F,GAAGqN,eAC7C,IAA9CH,EAAEgO,WAAWnY,EAAKkiB,GAAoBhlB,QACvC8C,EAAI9C,OAAO,GAAGd,EAAUe,oBAAoB,qBAAsB,SAAU6C,GAMnF,QAASmiB,KACL,GAAIpD,KACJZ,GAAMlN,aACsB,GAAxB+Q,EAAgB9kB,OAChBihB,EAAMpN,EAAE,kCACCzL,QAAS,SAAS0L,GACfA,EAAIE,WACJ6N,EAAO/N,EAAI/T,OAASmV,QAAQ,YAC7B2M,GAEXZ,EAAMpN,EAAE,yBACHzL,QAAS,SAAS0L,GACfA,EAA8B,IAAxB5X,KAAK8J,QAAQ8N,EAAI/T,MAAa,WAAa,aAClD+kB,GAEX7D,EAAMc,UAAUF,GAChBZ,EAAMhN,WAEV,QAASiR,KACL,GAAIrD,KACJZ,GAAMlN,aACyB,GAA3BiR,EAAmBhlB,OACnBihB,EAAMpN,EAAE,qCACCzL,QAAS,SAAS0L,GACfA,EAAIE,WACJ6N,EAAO/N,EAAI/T,OAASmV,QAAQ,YAC7B2M,GAEXZ,EAAMpN,EAAE,4BACHzL,QAAS,SAAS0L,GACfA,EAA8B,IAAxB5X,KAAK8J,QAAQ8N,EAAI/T,MAAa,WAAa,aAClDilB,GAEX/D,EAAMc,UAAUF,GAChBZ,EAAMhN,WApDV,GAAI6Q,GAAmD,MAAhC5lB,EAAUqP,sBAAmCrP,EAAUqP,mBAAmBzL,IAC7FkiB,EAAyD,MAAnC9lB,EAAU2D,yBAAsC3D,EAAU2D,sBAAsBC,GA6E1G,OA/DAme,GAAMpb,GAAG,SAAU,wBAAyBoH,EAAE+D,SAAS6T,EAAmB,MAC1E5D,EAAMpb,GAAG,SAAU,2BAA4BoH,EAAE+D,SAAS+T,EAAsB,MAsChFE,IACAC,IAEAhmB,EAAU+P,sBAAsBvD,IAAI,SAASC,GACzCmZ,EAA8B,MAAXnZ,EAAmB,KAAOA,EAAU7I,IACvDmiB,MAEJ/lB,EAAUuM,yBAAyBC,IAAI,SAASC,GAC5CqZ,EAAiC,MAAXrZ,EAAmB,KAAOA,EAAU7I,IAC1DoiB,MASJ/lB,EAAOgmB,IAAI,WAAY,WACnBN,IACAE,IACA7lB,EAAUwc,qBAIV0J,UAAWP,EACXQ,aAAcN,GAItB,QAASvE,GAAgB/a,EAAM6a,EAAQ5M,EAAW4R,GAG9C,MAAO5R,IACH2C,UAAWiP,EACXhP,SAAU7Q,EACVxD,MAAOqe,EACPiF,qBAAqB,EACrBC,sBAAsB,EACtBC,mBAAmB,EACnBC,YAAY,EACZhlB,QAAS,IACT6V,QAAS,GACTC,QACIrW,KAAM,SACNsW,KAAK,KAKjB,QAAS8J,KAeL,QAEIhM,SAAU,OACVtS,OACI0jB,sBAAuB,UACvBC,6BAA8B,UAC9BC,6BAA8B,MAC9BC,wBAAyB,QAI7BvR,SAAU,OACVtS,OACIiT,QAAW,gBACXvS,OAAU,mCACVT,MAAS,mCACTmT,YAAa,gBACbb,cAAe,YAGnBD,SAAU,2BACVtS,OACI0S,mBAAoB,cACpBF,cAAe,SACfG,eAAgB,EAChBC,eAAgB,aAGpBN,SAAU,oCACVtS,OACI4S,eAAgB,UAChBD,eAAgB,MAGpBL,SAAU,wBACVtS,OACI0S,mBAAoB,UACpBE,eAAgB,UAChBJ,cAAe,QACfsR,MAAS,WACTnR,eAAgB,mBAGpBL,SAAU,iCACVtS,OACI4S,eAAgB,UAChBD,eAAgB,MAGpBL,SAAU,8BACVtS,OACIoT,YAAa,OACbZ,cAAe,SACfE,mBAAoB,UACpB7N,MAAQ,UACR+N,eAAgB,oBAChBlS,OAAU,OACVT,MAAS,QACTwS,MAAS,iBACTqR,MAAS,gBAGbxR,SAAU,OACVtS,OACIiT,QAAW,gBACXJ,aAAc,cACd5S,MAAS,mBAKrB,QAAS0e,GAAiBK,EAAOhlB,EAAIkD,EAAQnD,EAAUqC,EAAO8b,GAG1D,GAAI5Y,GAAS,SAAU4Y,GACnB,GAAI6L,GAAW,GAAI7L,GAAQO,OACvBuL,EAAU,GAAI9L,GAAQO,OACtBwL,EAAY,GAAI/L,GAAQO,OACxByL,EAAU,GAAIhM,GAAQO,OACtB0L,EAAc,GAAIjM,GAAQO,OAC1B2L,EAAa,GAAIlM,GAAQO,OACzB4L,EAAe,GAAInM,GAAQO,OAC3B6L,EAAa,GAAIpM,GAAQO,OACzB8L,EAAY,WACZR,EAASQ,YACTP,EAAQO,YACRN,EAAUM,YACVL,EAAQK,YACRJ,EAAYI,YACZH,EAAWG,YACXF,EAAaE,YACbD,EAAWC,aAEXC,EAAO,SAASxgB,GAChB+f,EAASta,IAAIzF,GACbmgB,EAAY1a,IAAIzF,IAEhBygB,EAAM,SAASzgB,GACfggB,EAAQva,IAAIzF,GACZogB,EAAW3a,IAAIzF,IAEf0gB,EAAQ,SAAS1gB,GACjBigB,EAAUxa,IAAIzF,GACdqgB,EAAa5a,IAAIzF,GAErB,QACI+f,SAAUA,EACVC,QAASA,EACTC,UAAWA,EACXC,QAASA,EACTC,YAAaA,EACbC,WAAYA,EACZC,aAAcA,EACdC,WAAYA,EACZE,KAAMA,EACNC,IAAKA,EACLC,MAAOA,EACPH,UAAWA,IAEhBrM,EAGH8G,GACKpb,GAAG,QAAS,wBAAyBtE,EAAO2kB,UAAUnL,UACtDlV,GAAG,QAAS,2BAA4BtE,EAAO+kB,aAAavL,UAC5DlV,GAAG,YAAa,wBAAyBtE,EAAOykB,SAASjL,UACzDlV,GAAG,YAAa,2BAA4BtE,EAAO6kB,YAAYrL,UAC/DlV,GAAG,WAAY,wBAAyBtE,EAAO0kB,QAAQlL,UACvDlV,GAAG,WAAY,2BAA4BtE,EAAO8kB,WAAWtL,UAC7DlV,GAAG,SAAU,wBAAyBtE,EAAO4kB,QAAQpL,UACrDlV,GAAG,SAAU,2BAA4BtE,EAAOglB,WAAWxL,SAIhE,IAAImI,KACJjC,GAAMpN,EAAE,gCACHzL,QAAQ,SAAS+E,GAAOjR,KAAKiR,EAAKpN,OAAUmV,QAAS,SAAYgO,EAGtE,IAAI0D,IACAC,gBAAiB,SAAS5gB,GACtBhK,EAAGmmB,eAAerc,SAAWE,EAAEyQ,QAC/B,IAAIoQ,GAAK7gB,EAAE8gB,cACPC,EAASprB,QAAQgB,QAAQ,iBAO7B,OANAoqB,GAAO3J,OACPle,EAAOyH,OAAO,WACV3K,EAAGkkB,gBAAiB,IAExB6G,EAAOC,KAAKC,KAAMJ,EAAGpX,MAAM,GAAIyX,IAAKL,EAAGnX,MAAM,KAC7CqX,EAAOI,KAAK,UAAU/W,KAAKpU,EAAGmmB,eAAerc,SAASN,OAAOtF,MACtDjE,MAEXmrB,mBAAoB,SAASphB,GACzBhK,EAAG2lB,kBAAkB7b,SAAWE,EAAEyQ,QAClC,IAAIoQ,GAAK7gB,EAAE8gB,cACPC,EAASprB,QAAQgB,QAAQ,oBAO7B,OANAoqB,GAAO3J,OACPle,EAAOyH,OAAO,WACV3K,EAAGmkB,mBAAoB,IAE3B4G,EAAOC,KAAKC,KAAMJ,EAAGpX,MAAM,GAAIyX,IAAKL,EAAGnX,MAAM,KAC7CqX,EAAOI,KAAK,UAAU/W,KAAKpU,EAAG2lB,kBAAkB7b,SAASN,OAAOtF,MACzDjE,MAEXorB,gBAAiB,SAASrhB,GACtB,GAAkC,WAA9BA,EAAEyQ,SAASjR,OAAO8hB,SAClBtrB,EAAG4L,QAAU5B,EAAEyQ,SAASxZ,KAAK,WAC7BjB,EAAGurB,mBAAqBvhB,EAAEyQ,SAASoL,aAAa,QAC3CliB,IAAI,SAASkM,GAAQ,MAAOA,GAAKrG,OAAO1F,KAC7CZ,EAAOyH,aACN,CACD,GAAIoc,IACA7iB,KAAM8F,EAAEyQ,SAASjR,OAAOtF,KACxBsnB,SAAUxhB,EAAEyQ,SAASgR,cAAc,6BAA6B1nB,OAChE2nB,KAAM1hB,EAAEyQ,SAASgR,cAAc,6BAA6B1nB,OAC5D4nB,KAAM3hB,EAAEyQ,SAASgR,cAAc,6BAA6B1nB,OAC5D6nB,KAAM5hB,EAAEyQ,SAASgR,cAAc,6BAA6B1nB,OAC5D8nB,KAAM7hB,EAAEyQ,SAASgR,cAAc,6BAA6B1nB,OAEhEgjB,GAAK+E,UAAY/E,EAAK2E,KAAO3E,EAAK4E,KAAO5E,EAAK6E,KAAO7E,EAAK8E,KAC1D7rB,EAAG+mB,KAAOA,EACV7jB,EAAOyH,SAEX,MAAO1K,OAEX8rB,gBAAiB,WAIb,MAHA7oB,GAAOyH,OAAO,WACV3K,EAAG+mB,KAAO/mB,EAAG4L,QAAU5L,EAAGurB,mBAAqB,OAE5CtrB,MAEX+rB,cAAe,SAAShiB,GACpB,GAAI4b,MACA1d,EAAwC,WAA9B8B,EAAEyQ,SAASjR,OAAO8hB,SAAyB,SAAW,QAEpEtG,GAAMlN,aACN9N,EAAEyQ,SAASoL,aAAa,QACnB1Z,QAAQ,SAAS0D,GACd5P,KAAK2lB,OAAO/V,EAAK/L,OAASmV,QAAQ,WAClCpJ,EAAK5P,KAAKiI,UAAU8iB,KAChBtS,mBAAmB7I,EAAKrG,OAAOqB,MAC/B+N,eAAgB/I,EAAKrG,OAAOqB,MAC5B8N,eAAgB,GAChBsT,iBAAkB,OAEtBrG,OAAOA,EAAQ1d,OAAOA,IAC9B8c,EAAMhN,WACNgN,EAAMc,UAAUF,IAEpBsG,cAAe,SAASliB,GACpB,GAAI4b,MACA1d,EAAwC,WAA9B8B,EAAEyQ,SAASjR,OAAO8hB,SAAyB,SAAW,SAChEN,GACAtS,mBAAoB,GACpBE,eAAgB,GAChBD,eAAgB,GAChBsT,iBAAkB,GAEtBjH,GAAMlN,aACN9N,EAAEyQ,SAASoL,aAAa,QACnB1Z,QAAQ,SAAS0D,GACd5P,KAAK2lB,OAAO/V,EAAK/L,OAASmV,QAAQ,QAClCpJ,EAAK3H,KAAUlC,MAAM/F,KAAK+qB,OAC1BpF,OAAOA,EAAQoF,IAAIA,EAAK9iB,OAAOA,IACvC8c,EAAMhN,WACNgN,EAAMc,UAAUF,IAEpBuG,cAAe,SAASniB,GACpB,GAAI4b,KACJ5b,GAAEyQ,SAASoL,aAAa,QACnB1Z,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QACb1Z,QAAQ,SAAS0D,GACd5P,KAAK4P,EAAK/L,OAASmV,QAAQ,YAChChZ,OACJ2lB,GACPZ,EAAMc,UAAUF,IAEpBwG,cAAe,SAASpiB,GACpB,GAAI4b,KACJ5b,GAAEyQ,SAASoL,aAAa,QACnB1Z,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QACb1Z,QAAQ,SAAS0D,GACd5P,KAAK4P,EAAK/L,OAASmV,QAAQ,SAChChZ,OACJ2lB,GACPZ,EAAMc,UAAUF,KAKpByG,IAEAnoB,KAAM,WACNooB,SAAU,WACNhnB,EAAO4kB,QAAQza,IAAIkb,EAAUC,iBAC7BtlB,EAAOglB,WAAW7a,IAAIkb,EAAUS,oBAChC9lB,EAAOklB,KAAK,SAASxgB,GACjB2gB,EAAUU,gBAAgBrhB,KAE9B1E,EAAOmlB,IAAI,SAASzgB,GAChB2gB,EAAUoB,gBAAgB/hB,MAGlCuiB,WAAY,WAGRjnB,EAAOilB,YACPvF,EAAMc,UAAUmB,MAKpB/iB,KAAM,sBACNooB,SAAU,WACN,GAAI1G,KACJZ,GAAMpN,EAAE,qCACHzL,QAAQ,SAAS+E,GACdA,EAAK2U,aAAa,QAAQ1Z,QAAS,SAASqgB,GACxCvsB,KAAKusB,EAAK1oB,OAAUmV,QAAS,YAC9B2M,IACJA,GACPZ,EAAMc,UAAUF,GAChBZ,EAAMpb,GAAG,SAAU,QAAS6iB,IAAG,GAAO,SAASziB,GAC3C2gB,EAAUqB,cAAchiB,KAE5Bgb,EAAMpb,GAAG,WAAW,QAAQ6iB,IAAG,GAAO,SAASziB,GAC3C2gB,EAAUuB,cAAcliB,KAE5B1E,EAAOklB,KAAK,SAASxgB,GACjB2gB,EAAUU,gBAAgBrhB,KAE9B1E,EAAOmlB,IAAI,SAASzgB,GAChB2gB,EAAUoB,gBAAgB/hB,MAIlCuiB,WAAY,WAGRvH,EAAMc,UAAUmB,GAChBjC,EAAM0H,IAAI,SAAU,QACpB1H,EAAM0H,IAAI,WAAY,WAK1BxoB,KAAM,sBACNooB,SAAU,WAKNhnB,EAAOklB,KAAK,SAASxgB,GACjB2gB,EACKU,gBAAgBrhB,GAChBgiB,cAAchiB,KAGvB1E,EAAOmlB,IAAI,SAASzgB,GAChB2gB,EACKoB,gBAAgB/hB,GAChBkiB,cAAcliB,MAG3BuiB,WAAY,WACRjnB,EAAOilB,cAKfvqB,GAAG0lB,oBAAsB2G,EACzBrsB,EAAGylB,mBAAqBzlB,EAAG0lB,oBAAoB,GAG/CxiB,EAAOqM,OAAO,wBAAyB,SAASod,EAAMhgB,GAC9ChN,QAAQgd,UAAUhQ,IAAOA,EAAK4f,aAC9B5sB,QAAQgd,UAAUgQ,IAAOA,EAAKL,aAI1C,QAAS5H,GAAqBM,EAAOhlB,EAAIkD,EAAQnD,GAG7C,GAAI6sB,KACI1oB,KAAM,WACNiC,QAAO,eACP0E,MAAO,UACPgiB,MAAO,cAEP3oB,KAAM,WACNiC,QAAO,cACP0E,MAAO,UACPgiB,MAAO,cAEP3oB,KAAM,WACNiC,QAAO,cACP0E,MAAO,UACPgiB,MAAO,cAEP3oB,KAAM,WACNiC,QAAO,cACP0E,MAAO,SACPgiB,MAAO,cAEP3oB,KAAM,WACNiC,QAAO,cACP0E,MAAO,UACPgiB,MAAO,cAEXC,GACAtB,SAAaoB,EAAO,GACpBG,WAAaH,EAAO,GACpBI,WAAaJ,EAAO,GACpBK,WAAaL,EAAO,GACpBM,WAAaN,EAAO,GAIxB7sB,GAAS,WACL6sB,EAAOzgB,QAAQ,SAAS0D,GACpBlQ,QAAQgB,QAAQ,IAAMkP,EAAAA,UAAYmb,IAAI,eAAgBnb,EAAKhF,QAE/D,IAAI+a,KACJZ,GAAMmI,MAAM,gCACPhhB,QAAQ,SAASqgB,GACdvsB,KAAKusB,EAAK1oB,OAAS+G,MAAQiiB,EAASN,EAAKhjB,KAAK,aAAaqB,MAAOuiB,QAAQ,IAC3ExH,GACPZ,EAAMc,UAAUF,KAGpB5lB,EAAGooB,cAAgBwE,EAGnB5sB,EAAGqtB,WAAa,SAASxd,EAAMyd,GAC3B,GAAIzd,EAAKgd,OAASS,EAAlB,CACAzd,EAAKgd,MAAQS,CACb,IAAIT,EACJ,QAAOS,GACH,IAAK,YACDT,GAAShiB,MAAQgF,EAAKhF,MAAOuiB,QAAQ,EACrC,MACJ,KAAK,OACDP,GAAShiB,MAAQ,UAAWuiB,QAAQ,EACpC,MACJ,KAAK,OACDP,GAAShiB,MAAQ,UAAWuiB,QAAQ,GAK5CztB,QAAQgB,QAAQ,IAAMkP,EAAAA,UAAYmb,IAAI,eAAgB6B,EAAMhiB,MAG5D,IAAI+a,KACJZ,GAAMmI,MAAM,kBAAkBtd,EAAK3L,KAAK,MACnCiI,QAAQ,SAASqgB,GAEdvsB,KAAK2lB,OAAO4G,EAAK1oB,MAAQ7D,KAAK4sB,QAC9BjH,OAAOA,EAAQiH,MAAMA,IAC7B7H,EAAMc,UAAUF,KAKxB,QAASf,GAAeG,EAAOhU,GAC3BgU,EAAMpb,GAAG,MAAOoH,EAAE+D,SAAS,SAAS/K,GAChC,GAAItE,GAAOvF,KAAK4M,IAAI/C,EAAEuJ,GAAG7N,OAAQ,GAC7BkgB,KACA2H,EAAOptB,KAAKqtB,KAAKrtB,KAAK4M,IAAI,GAAGrH,EAAM,IACnC+nB,EAAUttB,KAAKqtB,KAAKrtB,KAAK4M,IAAI,EAAErH,EAAM,IACzCsf,GAAMjL,QAAQ5N,QAAQ,SAAS+E,GAC3BjR,KAAK2lB,OAAO1U,EAAKpN,OACbspB,QAAUlc,EAAKwc,SAASztB,KAAKyF,KAC7BioB,QAASJ,EACTE,QAAQA,KAEX7H,OAAOA,EAAQlgB,KAAKA,EAAM6nB,KAAKA,EAAME,QAAQA,IAClDzI,EAAMc,UAAUF,IACjB,MAGP,QAASnB,GAAqBO,EAAOhlB,EAAIkD,EAAQd,EAAOrC,EAAUiR,GAC9D,QAAS4c,KACL,GAAIC,GAAgB7I,EAAMpN,EAAE,qCACxBkW,IAGJD,GAAcnlB,KAAK,SAASwD,EAAOgF,GAC1BvR,QAAQ4C,YAAYurB,EAAK5c,EAAK1H,OAAOqB,QAAUijB,EAAK5c,EAAK1H,OAAOqB,OAAS,EACzEijB,EAAK5c,EAAK1H,OAAOqB,QAAU,IAIpC9K,EAAS,WACL,IAAK,GAAI6I,GAAE,EAAGA,EAAE5I,EAAGqoB,YAAYtkB,OAAQ6E,IAAI,CACvC,GAAIiC,GAAQ7K,EAAGqoB,YAAYzf,GAAGiC,KAC9B7K,GAAGqoB,YAAYzf,GAAGmlB,IAAMpuB,QAAQgd,UAAUmR,EAAKjjB,IAAUijB,EAAKjjB,GAAS,KAKnFma,EAAMpb,GAAG,SAAUoH,EAAE+D,SAAS6Y,EAAqB,KACnD5I,EAAMpb,GAAG,WAAYoH,EAAE+D,SAAS6Y,EAAqB,KAGrDxrB,EAAM8f,+BAA+BxT,KAAK,SAASE,GAC/C,GAAIsZ,KAAmBhkB,KAAM,YAAYA,KAAM,WAAWA,KAAM,oBAC5DvE,SAAQgd,UAAU/N,EAASI,QAAQjL,UACnCmkB,EAAgBA,EAAc3Z,OAAQK,EAASI,QAC1CrL,IAAI,SAASkM,GAAQ,OAAQ3L,KAAQ2L,OAG9C7P,EAAGkoB,cAAgBA,EACnBloB,EAAGmoB,aAAenoB,EAAGkoB,cAAc,GACnChlB,EAAOqM,OAAO,kBAAmB,WAC7B,GAAIqW,KACJ,QAAO5lB,EAAGmoB,aAAajkB,MACnB,IAAK,UACDlE,EAAGqoB,cAAgBnkB,KAAK,WAAY2G,MAAM,UAAWkjB,IAAI,IACzD/I,EAAMpN,EAAE,4BACHzL,QAAQ,SAAS+E,GACd0U,EAAO1U,EAAKpN,OAAS+G,MAAM,aAEnCma,EAAMc,UAAUF,EAChB,MACJ,KAAK,SACD5lB,EAAGqoB,cAAgBnkB,KAAK,OAAQ2G,MAAM,SAAUkjB,IAAI,IAAK7pB,KAAK,SAAU2G,MAAM,QAASkjB,IAAI,IAC3F/I,EAAMpN,EAAE,4BACHzL,QAAQ,SAAS+E,GACd,IACI,GAAI8c,GAAS9c,EAAK1H,KAAK,WAAW,GAAG,EACrCoc,GAAO1U,EAAKpN,OAAS+G,MAAiB,SAATmjB,EAAmB,SAAY,SAC/D,MAAMhkB,GACH4b,EAAO1U,EAAKpN,OAAS+G,MAAO,cAGxCma,EAAMc,UAAUF,EAChB,MACJ,KAAK,mBACD5lB,EAAGqoB,cAAgBnkB,KAAK,QAAS2G,MAAM,QAASkjB,IAAI,IAAK7pB,KAAK,MAAO2G,MAAM,MAAOkjB,IAAI,IACtF/I,EAAMpN,EAAE,4BACHzL,QAAQ,SAAS+E,GACd,IACI,GAAI+c,GAAMzZ,OAAOtD,EAAK1H,KAAK,WAAW,GAAG,GACzCoc,GAAO1U,EAAKpN,OAAS+G,MAAO,OAAW,IAAMojB,EAAO,IAAO,IAAQ,KAAO,IAAMA,GAAQ,IAAO,OAClG,MAAMjkB,GACH4b,EAAO1U,EAAKpN,OAAS+G,MAAO,cAGxCma,EAAMc,UAAUF,EAChB,MACJ,SACIxjB,EAAM+f,wBAAwBniB,EAAGmoB,aAAajkB,MAAMwK,KAAK,SAASE,GAC9D5O,EAAGqoB,YAAczZ,EAASI,QAAQ2B,IAC7BhN,IAAI,SAASqG,GAAI,MAAOA,GAAE,GAAK,IAAMA,EAAE,KACvC3E,OAAO,SAASiI,EAAG1E,EAAGslB,GAAK,MAAOA,GAAEnkB,QAAQuD,KAAO1E,IACnDjF,IAAI,SAASqG,GAAK,GAAIpG,GAAIoG,EAAEmkB,MAAM,IAC/B,QAASjqB,KAAQN,EAAE,GAAIiH,MAASjH,EAAE,GAAKmqB,IAAI,IAO/C,KAAK,GALDxkB,GAAOqF,EAASI,QAAQwD,SACxB7B,EAAM/B,EAASI,QAAQ2B,IACvBoJ,EAAQiL,EAAMpN,EAAE,4BAGXhP,EAAE,EAAGA,EAAEmR,EAAMhW,OAAQ6E,IAAI,CAC9B,GAAI9E,GAAKiW,EAAMnR,GAAG9E,IAClB8hB,GAAO9hB,IAAO+G,MAAM,UACpB,KAAK,GAAIujB,GAAG,EAAGA,EAAG7kB,EAAKxF,OAAQqqB,IACvBtqB,GAAIyF,EAAK6kB,KACTxI,EAAO9hB,IAAO+G,MAAM8F,EAAIyd,GAAI,KAIxCpJ,EAAMc,UAAUF,KAI5BgI,QAIZ5tB,EAAGquB,WAAa,SAASxe,EAAM/J,GAC3Bkf,EAAMlN,aACNkN,EAAMjL,MAAM,4BACP5N,QAAQ,SAAS+E,GACVA,EAAKlL,MAAM,qBAAqB6J,EAAKhF,OAAOqG,EAAK,EAAS,SAAS,gBAE/E8T,EAAMhN,YAId,QAASwM,GAAkBQ,EAAOhlB,EAAIkD,GAClClD,EAAGgoB,oBAAsB9jB,KAAM,SAASA,KAAM,qBAC9ClE,EAAGioB,iBAAmBjoB,EAAGgoB,kBAAkB,GAC3C9kB,EAAOqM,OAAO,sBAAuB,SAASgL,GAC1C,GAAIR,GAAQiL,EAAMjL,MAAM,2BAExB,QADAiL,EAAMlN,aACEyC,EAAOrW,MAGX,IAAK,OACD6V,EAAM5N,QAAQ,SAAS+E,GACnBA,EAAK8E,SAAS9E,EAAK1H,KAAK,UAE5B,MAGJ,KAAK,mBACDuQ,EAAM5N,QAAQ,SAAS+E,GACnB,IACI,GAAI+c,GAAMzZ,OAAOtD,EAAK1H,KAAK,WAAW,GAAG,GACzCykB,GAAMA,EAAItqB,IAAI,EAAG,IAAK,KAAO,KAC7BuN,EAAK8E,UACDrO,EAAGsmB,EACHjjB,EAAI7K,KAAKsL,IAAIwiB,EAAK,GAAK,IAAQ,MAEtC,MAAMjkB,GACHkH,EAAK8E,UAAUhL,EAAE,IAAIrD,EAAE,MAG/B,MAGJ,KAAK,SACDoS,EACK1U,OAAO,SAAS6G,EAAOgF,GACpB,IAAK,MAAkD,QAA1CA,EAAK1H,KAAK,WAAW,GAAG,GAAG6b,cACxC,MAAMrb,GAAI,OAAO,KAEpBmC,QAAQ,SAAS+E,EAAMhF,GACpB,GAAIH,GAAI,GACJC,EAAI,IACJsiB,EAAQ,IAAOpiB,EAAM,GACrBlB,EAAI,MAASe,EAAEC,EAAIsiB,GAASnuB,KAAKouB,IAAID,GACrC3mB,EAAI,OAASoE,EAAEC,EAAIsiB,GAASnuB,KAAKquB,IAAIF,EACzCpd,GAAK8E,UACDhL,EAAGA,EACHrD,EAAGA,MAGfoS,EACK1U,OAAO,SAAS6G,EAAOgF,GACpB,MAAOvR,SAAQ4C,YAAY2O,EAAK1H,KAAK,WAAW,MAEnD2C,QAAQ,SAAS+E,EAAMhF,GACpB,GAAIH,GAAI,IACJC,EAAI,IACJsiB,EAAQ,IAAOpiB,EAAM,GACrBlB,EAAI,OAASe,EAAEC,EAAIsiB,GAASnuB,KAAKouB,IAAID,GACrC3mB,EAAI,GAAKoE,EAAEC,EAAIsiB,GAASnuB,KAAKquB,IAAIF,EACrCpd,GAAK8E,UACDhL,EAAGA,EACHrD,EAAGA,MAGfoS,EACK1U,OAAO,SAAS6G,EAAOgF,GACpB,IAAK,MAAkD,UAA1CA,EAAK1H,KAAK,WAAW,GAAG,GAAG6b,cACxC,MAAMrb,GAAI,OAAO,KAEpBmC,QAAQ,SAAS+E,EAAMhF,GACpB,GAAIH,GAAI,IACJC,EAAI,IACJsiB,EAAQ,IAAOpiB,EAAM,GACrBlB,EAAI,MAASe,EAAEC,EAAIsiB,GAASnuB,KAAKouB,IAAID,GACrC3mB,EAAI,MAAQoE,EAAEC,EAAIsiB,GAASnuB,KAAKquB,IAAIF,EACxCpd,GAAK8E,UACDhL,EAAGA,EACHrD,EAAGA,MAKvBqd,EAAMhN,aAId,QAASoM,GAAShiB,EAAOpC,EAAIyuB,GAGzBrsB,EAAMqM,WAAWzO,EAAGwC,YAAYkM,KAAK,WAGjCtM,EAAMsO,uBAAuB1Q,EAAGwC,YAAYkM,KAAK,SAASE,GACtD,GAAIvK,GAAeuK,EAASI,QAAQ2B,GAGpCvO,GAAMigB,kBAAkBzT,EAASI,SAASN,KAAK,SAASE,GACpD,GAAI8f,GAAc/uB,QAAQwa,SAASvL,EAASI,SAASqL,QAGrDqU,GAAY3U,MACP1U,OAAO,SAASwK,GAAQ,MAA8B,YAAvBA,EAAKrG,KAAK8hB,WACzC3nB,IAAI,SAAS+G,GACV,GAAIlB,GAAOkB,EAAMlB,IACjBA,GAAKyP,QAAU,UACfzP,EAAKqB,MAAQ,UACbrB,EAAK4jB,QAAU5jB,EAAKkkB,OACpBlkB,EAAKmkB,QAAU,GACfnkB,EAAKikB,QAAU,EACfjkB,EAAKmlB,MAAQ3jB,EAAGN,EAAMsL,SAAShL,EAAGrD,EAAG+C,EAAMsL,SAASrO,GACpD6B,EAAKoC,QAAU3L,KAAKoF,OAAO,SAASwK,GAAO,MAAOA,GAAK,KAAKnF,EAAMlB,KAAK1F,MACxEO,GAGPqqB,EAAY3U,MACP1U,OAAO,SAASwK,GAAS,MAA8B,WAAtBA,EAAKrG,KAAK8hB,WAC3C3nB,IAAI,SAAS+G,GACV,GAAIlB,GAAOkB,EAAMlB,IASjB,OARAA,GAAKyP,QAAU,UACfzP,EAAKqB,MAAQ,oBACbrB,EAAK4jB,QAAU5jB,EAAKkkB,OACpBlkB,EAAKmkB,QAAU,GACfnkB,EAAKikB,QAAU,EACf/iB,EAAMkkB,OAAgC,SAAtBlkB,EAAMlB,KAAK8hB,SAC3B5gB,EAAMmkB,WAAoC,SAAtBnkB,EAAMlB,KAAK8hB,SAC/B5gB,EAAMokB,UAAmC,SAAtBpkB,EAAMlB,KAAK8hB,SACvB5gB,IAIfgkB,EAAYvB,MACPxpB,IAAI,SAAS+G,GACV,GAAIlB,GAAOkB,EAAMlB,IAQjB,OAPAA,GAAKyP,QAA0B,cAAfzP,EAAKulB,SAA0B,UAAY,OAC3DvlB,EAAKqB,MAAQ,oBACbrB,EAAK4jB,QAAU,EACf5jB,EAAKmkB,QAAU,GACfjjB,EAAMkkB,QAAS,EACflkB,EAAMmkB,YAAa,EACnBnkB,EAAMokB,WAAY,EACXpkB,IAIf+jB,EAAGC,SA7uCnB3K,EAAkBxiB,SAAW,QAAS,YAAa,SAAU,WAAY,SAAU,eAAgB,YAAa,UAAW,SAAU,UAAW,IAhBhJ,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbC,SACAE,WAAYkiB,EACZjiB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAhBX7B,QACKC,OAAO,aACP4B,UAAU,YAAasiB,MA0wChC,WACI,YAQA,SAAS3T,KAcL,QAAS6e,GAAgB5sB,EAAOC,GAE5B,GAAI8d,GAAU/d,EAAM8e,aAEhBlhB,EAAKC,IACTD,GAAGivB,QAAU9O,EAAQa,aACrBhhB,EAAG4gB,KAAOT,EAAQc,UAClBjhB,EAAGkvB,UAAW,EAEdlvB,EAAGmQ,MAAQ,WACP,GAAIqN,GAAU2C,EAAQhQ,MAAMnQ,EAAG4gB,KAC3BjhB,SAAQgd,UAAUa,GAClBA,EAAQ9O,KAAK,WACL1O,EAAG4gB,KAAKJ,cACRne,EAAOI,GAAG,cAEVzC,EAAGkvB,UAAW,IAItB7sB,EAAOI,GAAG,eAftBusB,EAAgBztB,SAAW,QAAS,SAjBpC,IAAIC,IACAC,SAAU,IACVC,YAAa,kCACbM,SAAS,EACTH,WAAYmtB,EACZltB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAjBX7B,QACKC,OAAO,aACP4B,UAAU,UAAW2O,MA+C9B,WACI,YAOA,SAASA,KAEL,GAAI3O,IACAC,SAAU,IACVC,YAAa,oCACbM,SAAS,EAGb,OAAOR,GAbX7B,QACKC,OAAO,aACP4B,UAAU,WAAY2O,MAgB/B,WACI,YAMA,SAASgf,KAcL,QAASC,GAAkB/sB,GACvB,GAAIrC,GAAKC,IACTD,GAAGmQ,MAAQ,WACP9N,EAAOI,GAAG,UAGlB2sB,EAAkB7tB,SAAW,SAlB7B,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbM,SAAS,EACTH,WAAYutB,EACZttB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAhBX7B,QACKC,OAAO,aACP4B,UAAU,YAAa2tB,MA2BhC,WACI,YAOA,SAASE,KAaL,QAASC,GAAkBltB,EAAOa,EAAWZ,EAAQtC,EAAUmD,EAAQG,EAAQf,EAAc0O,EAAG4G,GAG5F,GAAIjY,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAKd,IAEIob,GAFA7d,EAAKC,KAGLuD,EAAkD,MAAnCP,EAAU2D,yBAAsC3D,EAAU2D,sBAAsBC,IAE/F0oB,EAAgB,SAASvvB,EAAIwC,GAC7BxC,EAAGwC,WAAaA,EAChBxC,EAAGwvB,aAAexvB,EAAGyvB,kBAAoB,EACzCzvB,EAAG0vB,aAAe1vB,EAAG2vB,kBAAoB,GACzC3vB,EAAG4vB,YAAc5vB,EAAG+R,iBAAmB,EACvC/R,EAAG6vB,YAAc7vB,EAAGiS,iBAAmB,GACvCjS,EAAGyZ,OAAS,IAGZqW,EAAgB,SAAS9vB,EAAIwJ,GAG7B7J,QAAQgB,QAAQovB,GAAGC,UAAUC,IAAIxW,QAAU,SAASyW,EAAU1mB,GAC1D,GAAIgH,GAAW2f,WAAW3mB,EAAK,IAC3B4mB,EAAYD,WAAW3mB,EAAK,GAChC,OAAwB,IAApBhG,EAAYO,QACwB,IAAhCP,EAAYuG,QAAQP,EAAK,KAAkB,EAE/C6mB,MAAM7f,IAAa6f,MAAMD,IAAmB,EACxCA,GAAapwB,EAAGwvB,cACpBY,EAAapwB,EAAG0vB,aAAe,GAC/Blf,GAAYxQ,EAAG4vB,aACfpf,EAAYxQ,EAAG6vB,YAAc,GAIrC,IAAIS,GAAU9mB,EAAKka,SAAS/f,IAAK,SAAU4sB,GAAK,OAAQzN,MAAMyN,IAC9D1S,GAAQle,QAAQgB,QAAQ,sBAAsBijB,WAClCC,QAAQ,EACRyM,QAASA,EACT9mB,KAAMA,EAAKmH,MAEvBkN,EAAM+B,MAAMzb,QAGZqsB,EAAa,SAASxwB,EAAIkD,GAC1BlD,EAAGywB,YAAc,SAASprB,GACtB7B,KACAqa,EAAM+B,MAAMzb,MAEZ,IAAIusB,GAAI7S,EAAM7M,EAAE,MACZ3L,OAAU;GACX1B,IAAI,SAASkM,GACZ,MAAOA,GAAK,GAAGxP,WAAW8Q,eAE9Buf,GAAI9Y,EAAEjU,IAAI+sB,EAAG,SAAShmB,GAClB,OAAQA,KAEZzH,EAAUe,oBAAoB,kBAAmBqB,EAAQqrB,GAE7D,IAAIC,IAAO,CACXztB,GAAOqM,OAAO,YAAayB,EAAE+D,SAAS,WAClC,MAAI4b,QACAA,GAAO,OAGX3wB,GAAGywB,YAAY,WAChB,MAEHxtB,EAAUuM,yBAAyBC,IAAI,SAASC,GAC5ClM,EAAckM,EAAU7I,IACxBgX,EAAM+B,MAAMzb,SAMpB/B,GAAMoM,SAAQ,GACdpM,EAAMqM,WAAWnM,EAAaE,YAAYkM,KAAK,WAC3CtM,EAAMsO,uBAAuBpO,EAAaE,YAAYkM,KAAK,SAASE,GAChE2gB,EAAcvvB,EAAIsC,EAAaE,YAC/BstB,EAAc9vB,EAAI4O,EAASI,SAC3BwhB,EAAWxwB,EAAIkD,GACfd,EAAMoM,SAAQ,OA/E1B8gB,EAAkB/tB,SAAW,QAAS,YAAa,SAAU,WAAY,SAAU,SAAU,eAAgB,IAAK,IAnBlH,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbG,WAAYytB,EACZxtB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,YAAa6tB,MAgHhC,WACI,YAOA,SAASuB,KAaL,QAASC,KACL,GAAI7wB,GAAKC,IACVD,GAAG8wB,SAEM5sB,KAAM,qBACNka,KAAM,gEACNsD,IAAK,KAGLxd,KAAM,mBACNka,KAAM,gEACNsD,IAAK,KAGLxd,KAAM,qBACNka,KAAM,gEACNsD,IAAK,KAGLxd,KAAM,YACNka,KAAM,gEACNsD,IAAK,KAhCjB,GAAIlgB,IACAC,SAAU,IACVC,YAAa,gCACbG,WAAYgvB,EACZ/uB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,SAAUovB,MA6C7B,WACI,YAOA,SAASG,KAcL,QAASC,GAAiB5uB,EAAOE,EAAcD,EAAQtC,GAGnDqC,EAAM8d,aAAazQ,IAAI,WACnB1P,EAAS,WACLC,EAAGixB,WAAY,KAIvB,IAAI9Q,GAAU/d,EAAM8e,YACpBf,GAAQC,QAAQ3Q,IAAI,WAChB1P,EAAS,WACLC,EAAGkxB,UAAW,MAGtB/Q,EAAQE,SAAS5Q,IAAI,WACjB1P,EAAS,WACLC,EAAGkxB,UAAW,KAItB,IAAIlxB,GAAKC,IACTD,GAAGkxB,UAAW,EACdlxB,EAAGixB,WAAY,EAEfjxB,EAAGqQ,WAAa,WACZhO,EAAOI,GAAG,SACND,WAAYJ,EAAM4Z,mBAI1Bhc,EAAGsQ,YAAc,WACblO,EAAMmO,gBAGVvQ,EAAGmxB,YAAc,WACdhR,EAAQQ,SACRte,EAAO+uB,aAAa,YA7B3BJ,EAAiBzvB,SAAW,QAAS,eAAgB,SAAU,WApB/D,IAAIC,IACAC,SAAU,IACVC,YAAa,oCACbC,SACAE,WAAYmvB,EACZlvB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAhBX7B,QACKC,OAAO,aACP4B,UAAU,WAAYuvB,MA4D/B,WACI,YAOA,SAASM,KAaL,QAASC,MAXT,GAAI9vB,IACAC,SAAU,IACVC,YAAa,oCACbG,WAAYyvB,EACZxvB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,WAAY6vB,MAuB/B,WACI,YAOA,SAASN,KAaL,QAASQ,MAXT,GAAI/vB,IACAC,SAAU,IACVC,YAAa,sCACbG,WAAY0vB,EACZzvB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,YAAauvB,MAuBhC,WACI,YAOA,SAASvuB,KAaL,QAASgvB,GAAqBpvB,EAAOC,GACjC,GAAIrC,GAAKC,IACTD,GAAGiQ,YACHjQ,EAAG2C,QAAU,SAASC,EAAMJ,GACxBJ,EAAM6Z,cAAczZ,GACpBH,EAAOI,GAAGG,GACNJ,WAAYA,IAIpB,IAAIivB,IACAC,OAAW,sBACXC,UAAa,eACbC,SAAY,gBACZC,aAAgB,oBAChBC,QAAW,sBACXC,SAAY,qBACZC,QAAY,4BACZC,SAAY,6BACZC,SAAY,cACZC,SAAY,8BACZC,SAAY,kBACZC,SAAY,kBACZC,QAAY,aACZC,SAAY,cAIhBvyB,GAAGiQ,SAAW7N,EAAM8e,aAAaD,UAAUhR,SAAStM,IAAI,SAASkM,GACzD,OAAQ3L,KAAMjE,KAAK4P,GAAO/L,GAAI+L,IAC/B4hB,GApBXD,EAAqBjwB,SAAW,QAAS,SArBzC,IAAIC,IACAC,SAAU,IACVC,YAAa,4CACbG,WAAY2vB,EACZ1vB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,eAAgBgB,MAmDnC,WACI,YAOA,SAASgwB,KAgBL,QAASC,GAAkBxvB,EAAWZ,EAAQtC,EAAUmD,EAAQZ,GAE5D,GAAI3C,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAGd,IAAIzC,GAAKC,IACTD,GAAG0P,UACH1P,EAAG0yB,WAEH1yB,EAAG2yB,MAAQ,WACP/a,EAAE,YAAY5X,EAAG4yB,MAAMvR,QAE3BrhB,EAAG6yB,aAAe,SAAShjB,GACvB5M,EAAU,MAAMjD,EAAG4yB,KAAK,aAAa/iB,GAEzC,IAAIkD,GAAS,SAAS+f,GAClB/yB,EAAS,WACLC,EAAG0yB,WAAazvB,EAAU,MAAMjD,EAAG4yB,KAAK,gBACxC5yB,EAAG0P,UAAYzM,EAAU,MAAMjD,EAAG4yB,KAAK,iBAK/C3vB,GAAU,KAAKjD,EAAG4yB,KAAK,OAAOnjB,IAAI,WAAWsD,GAAO,KACpD9P,EAAU,KAAKjD,EAAG4yB,KAAK,mBAAmBnjB,IAAI,WAAWsD,GAAO,IAEhE,IAAIggB,IAAa,EACb3R,EAAO,WACPxJ,EAAE,YAAY5X,EAAG4yB,MAAMxR,OACnB2R,IACJA,GAAa,EACbpzB,QAAQgB,QAAQ,YAAYX,EAAG4yB,MAAMI,aAKzCrzB,SAAQgB,QAAQsyB,UAAUC,SAAS,SAASlpB,GAExC,GAAKA,EAAEmpB,QAEP,GADAC,QAAQvkB,IAAI7E,EAAEqpB,SACF,QAATrzB,EAAG4yB,KACF,OAAO5oB,EAAEqpB,SACL,IAAK,IAAIjS,GAAQ,MACjB,KAAK,IAAIne,EAAUmc,sBAAwB,MAC3C,KAAK,IAAInc,EAAUkc,2BAGvB,QAAQnV,EAAEqpB,SAEN,IAAK,IAAIjS,GAAQ,MACjB,KAAK,IAAIne,EAAUsc,yBAA2B,MAC9C,KAAK,IAAItc,EAAUuc,6BA5CnCiT,EAAkBlxB,SAAW,YAAa,SAAU,WAAY,SAAU,eAtB1E,IAAIC,IACAC,SAAU,IACVC,YAAa,sCACbG,WAAY4wB,EACZ9wB,OACIixB,KAAK,KAET9wB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAlBX7B,QACKC,OAAO,aACP4B,UAAU,YAAagxB,MAiFhC,WACI,YAOA,SAAS7vB,KAaL,QAAS2wB,GAAsBlxB,EAAOC,EAAQtC,EAAUmD,EAAQZ,GAE5D,GAAI3C,QAAQ4C,YAAYD,EAAaE,YAEjC,WADAH,GAAOI,GAAG,aAUdL,GAAMoM,SAAQ,IACF,GAAI+kB,OAAOC,SACvBpxB,GAAMwb,MAAM,gBAEJoQ,OAAO,SACRtf,KAAK,SAAS1E,MANzBspB,EAAsB/xB,SAAW,QAAS,SAAU,WAAY,SAAU,eAvB1E,IAAIC,IACAC,SAAU,IACVC,YAAa,8CACbG,WAAYyxB,EACZxxB,aAAc,KACdC,kBAAkB,EAGtB,OAAOP,GAfX7B,QACKC,OAAO,aACP4B,UAAU,gBAAiBmB,MA0CpC,WACI,YAOA,SAAS8wB,GAAS/X,EAAYrZ,EAAQc,EAASuwB,EAAmBtxB,GAG9De,EAAQwwB,QAAU,SAA4B3jB,EAAS4jB,EAAUC,EAAYC,EAAc/W,GAChFA,IACHA,EAAQ,GAAIgX,OAAO/jB,GACnB+M,EAAM6W,SAAWA,EACjB7W,EAAM8W,WAAaA,EACnB9W,EAAM+W,aAAiBA,GAAgB,GAE3CJ,EAAmB3W,GAIvB,IAAI2P,GAAMhR,EAAWwN,IAAI,oBAAqB,SAASniB,EAAOitB,GAG1D5xB,EAAMoM,SAAQ,GAGd7O,QAAQgB,QAAQovB,GAAGC,UAAUC,IAAIxW,WAUrCiC,GAAWwN,IAAI,WAAYwD,GAX/B+G,EAASlyB,SAAW,aAAc,SAAU,UAAW,oBAAqB,SAxB5E5B,QACKC,OAAO,aACPq0B,IAAIR,MAoCb,WACI,YAOA,SAASS,GAAaC,EAAgBC,GAGlCD,EACKtH,MAAM,QACHjZ,IAAK,QACLygB,SAAU,YACVC,cAAc,IAEjBzH,MAAM,WACHjZ,IAAK,IACLygB,SAAU,eACVC,cAAc,IAEjBzH,MAAM,QACHjZ,IAAK,QACLygB,SAAU,YACVC,cAAc,IAEjBzH,MAAM,cACHjZ,IAAK,cACLygB,SAAU,kBACVC,cAAc,IAEjBzH,MAAM,SACHjZ,IAAK,sBACLygB,SAAU,aACVC,cAAc,IAEjBzH,MAAM,YACHjZ,IAAK,yBACLygB,SAAU,gBACVC,cAAc,IAEjBzH,MAAM,WACHjZ,IAAK,wBACLygB,SAAU,eACVC,cAAc,IAEjBzH,MAAM,QACHjZ,IAAK,qBACLygB,SAAU,YACVC,cAAc,IAEjBzH,MAAM,OACHjZ,IAAK,oBACLygB,SAAU,WACVC,cAAc,IAEjBzH,MAAM,SACHjZ,IAAK,sBACLygB,SAAU,aACVC,cAAc,IAEjBzH,MAAM,WACHjZ,IAAK,wBACLygB,SAAU,eACVC,cAAc,IAEjBzH,MAAM,YACHjZ,IAAK,yBACLygB,SAAU,gBACVC,cAAc,IAEjBzH,MAAM,aACHjZ,IAAK,0BACLygB,SAAU,iBACVC,cAAc,IAEjBzH,MAAM,YACHjZ,IAAK,yBACLygB,SAAU,gBACVC,cAAc,IAEjBzH,MAAM,eACHjZ,IAAK,4BACLygB,SAAU,oBACVC,cAAc,IAEjBzH,MAAM,aACHjZ,IAAK,0BACLygB,SAAU,iBACVC,cAAc,IAEjBzH,MAAM,WACHjZ,IAAK,wBACLygB,SAAU,eACVC,cAAc,IAGtBF,EAAmBG,UAAU,KAtEjCL,EAAa3yB,SAAW,iBAAkB,sBAzB1C5B,QACKC,OAAO,aACP40B,OAAON,MAmGhB,WACI,YAEAv0B,SACKC,OAAO,aACP60B,SAAS,SAAUpxB,QACnBoxB,SAAS,KAAMnxB,IACfmxB,SAAS,YAAahd,WACtBgd,SAAS,UAAWvW,SACpBuW,SAAS,SAAUhZ,QACnBgZ,SAAS,QAASxf,OAClBwf,SAAS,IAAK7c,GACd6c,SAAS,IAAKzjB,GAGnBwD,OAAOkgB,UAAU/wB,IAAM,SAAUgxB,EAAQC,EAAQC,EAASC,GACtD,OAAQ70B,KAAO00B,IAAWG,EAAUD,IAAYD,EAASD,GAAUE,MAK3E,WACI,YAOA,SAASL,GAAOO,GAEZA,EAAaC,cAAa,GAmB9BR,EAAOjzB,SAAW,gBA1BlB5B,QACKC,OAAO,aACP40B,OAAOA,MAShB70B,QAAQC,OAAO,aAAaq0B,KAAK,iBAAkB,SAASgB,GAAiBA,EAAeC,IAAI,8CAA8C,eAC9ID,EAAeC,IAAI,sCAAsC,wcACzDD,EAAeC,IAAI,4CAA4C,ksBAC/DD,EAAeC,IAAI,sCAAsC,sHACzDD,EAAeC,IAAI,oCAAoC,o9CACvDD,EAAeC,IAAI,oCAAoC,k+DACvDD,EAAeC,IAAI,gCAAgC,87DACnDD,EAAeC,IAAI,sCAAsC,+xCACzDD,EAAeC,IAAI,sCAAsC,4gFACzDD,EAAeC,IAAI,kCAAkC,ymCACrDD,EAAeC,IAAI,oCAAoC,yPACvDD,EAAeC,IAAI,sCAAsC,woTACzDD,EAAeC,IAAI,wCAAwC,s4CAC3DD,EAAeC,IAAI,wCAAwC;AAC3DD,EAAeC,IAAI,8BAA8B,u0CACjDD,EAAeC,IAAI,kCAAkC,8KACrDD,EAAeC,IAAI,gCAAgC,+xEACnDD,EAAeC,IAAI,oCAAoC,oTACvDD,EAAeC,IAAI,wCAAwC,uVAC3DD,EAAeC,IAAI,gCAAgC,oIACnDD,EAAeC,IAAI,0CAA0C,s2GAC7DD,EAAeC,IAAI,wCAAwC,8bAC3DD,EAAeC,IAAI,kCAAkC,6cACrDD,EAAeC,IAAI,gCAAgC","file":"scripts/app-51b25de2f4.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'ui.bootstrap.contextMenu',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            vm.tools = osApi.getTools();\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: vm.datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osHistory, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.filters;\n                vm.filter;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[0];\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                selectedIds = d3Bars.selectAll(\".timeline-selected\")[0].map( function (p) { return p.__data__.id; }  )\n                if (selectedIds.length==0) selectedIds = d3Bars.selectAll()[0].map( function (p) { return p.__data__.id; }  )\n                osHistory.addPatientSelection(\"Timelines\", \"Manual Selection\",\n                    selectedIds\n                );\n                if (vm.optCohortMode.name==\"Filter\") draw();\n            }\n\n            var zoom;\n            var zoomed = function(){\n                if (d3.event.shiftKey) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                  brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var brushing = false;\n            var onBrushStart = function(){\n                if (!d3.event.sourceEvent.shiftKey) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }else{\n                    brushing = true;\n                }\n            }\n            var onBrush = function(){\n                if (!brushing) return;\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        d3.select(this.firstChild).classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                    });\n            }\n            var onBrushEnd = function(){\n                if (!brushing) return;\n                brushing = false;\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);    \n                saveSelected();\n            }\n\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]).nice();\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50).nice();\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                        \n                    // rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row',\n                            'width': 0,\n                            'height': hRow\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && selectedIds.length>0){\n                        rows\n                            .each( function(d){\n                                var selected = (selectedIds.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n                    var daysToUnit = function(d){\n                        if (Math.abs(d)==0) return d;\n                        if (Math.abs(d)<30) return d+\" Days\";\n                        if (Math.abs(d)<360) return Math.round( (d/30.4) * 10 ) / 10 + \" Months\";\n                        return Math.round( (d/365) * 10 ) / 10 + \" Years\";\n                    }\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(8);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return daysToUnit(Math.round((d<0 ? -1 : 1) * (Math.pow(2, (Math.abs(d)))-1) *100)/100);\n                        });\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return daysToUnit(d);\n                        });\n                    }\n\n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"class\": \"timeline-axis\",\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        if (vm.filter.name==\"Only Alive\" && patient.dead) return false;\n                        if (vm.filter.name==\"Only Dead\" && !patient.dead) return false;\n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter && this.ids){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':selectedIds});\n\n                    // Sort Patients On Align Property    \n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            if (a.dead==b.dead){\n                                return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                            }else{\n                                return (a.dead) ? 1 : -1;\n                            }\n                            \n                        }, sort);\n                    }else{\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                        }, sort);\n                    }\n\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients, dead){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                            if (d.name==\"Status\"){\n                                p.dead = (dead.indexOf(d.id)!=-1);\n                            }\n                            \n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts, response.payload.eventTypes.Status.status.Dead);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        vm.filters = [\n                            {name:'Alive + Dead'},\n                            {name:'Only Alive'},\n                            {name:'Only Dead'}\n                        ];\n                        vm.filter = vm.filters[0];\n\n\n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale', 'vm.filter'], draw);\n                        angular.element($window).bind('resize', draw);\n                        $scope.$watch(\"vm.optCohortMode\", draw );   // Triggers Inital Draw\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            draw();\n                        });\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTest', test);\n\n    /** @ngInject */\n    function test() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/test/test.html',\n            controller: TestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TestController(osApi) {\n\n            // View Model\n            var vm = this;\n            vm.message = \"Robert\";\n            vm.datasets = [];\n            \n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response){\n\n                vm.datasets = response.payload.datasets;\n\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, osHistory, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n\n            // Set Dataset \n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                // If No Patients Are Selected, Fetch All Patients\n                if (osHistory.getPatientSelection()==null){\n                    osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                        draw(response.payload.tbl.map( function (d) { return d[0]; }));\n                    });\n                }else{\n                    draw(osHistory.getPatientSelection().ids);\n                }\n            });\n\n            // Register History Component\n            osHistory.onPatientSelectionChange.add(function(selection){\n                draw(selection.ids)\n            });\n\n            // Draw\n            var draw = function(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                    angular.element(\"#survival-img\").attr('src',r.payload);\n                    osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;            \n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                var selected  = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ \n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n                \n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400; \n                    if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                        width += 300;\n                    } \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osHistory, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var markersNetwork;\n            var vm = this;\n            \n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            // History Integration\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            \n            vm.datasource = $stateParams.datasource;\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('select', 'node', _.debounce(saveSelected, 300))\n                        .on('click', 'node', function() {\n                            //if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            //angular.element('#gbm-webpage').modal();\n                            //$window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                            // $scope.$apply(function() {\n                            //     vm.frame = $sce.trustAsResourceUrl(url);\n                            // });\n                        })\n                        .on('click', 'edge', function() {\n                            // links =[\n                            //     { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                            //     { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                            //     { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                            //     { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                            // ];\n                            //$window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                            //$window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                            //$window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                            //$window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n                            // $scope.$apply(function() {\n                            //     vm.frame = $sce.trustAsResourceUrl(url);\n                            // });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n                    // Register History Component\n                    osHistory.onGeneSelectionChange.add(function(selection){\n                        selectedIds = selection.ids;\n                        setSelected();\n                    });\n                    setSelected();\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.search = \"\";\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".pca-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addPatientSelection(\"PCA\", \"Manual Selection\",\n                    d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node) {\n                        return node.__data__.id.toUpperCase();\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length==0) {\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[0].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSets.unshift(\"All\");\n                        vm.geneSet = vm.geneSets[0];\n\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            vm.search = \"\";\n                            setSelected();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA((vm.geneSet==\"All\") ? null : vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                \n                width = $window.innerWidth - 400;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    width += 300;\n                } \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                        saveSelected();\n                    });\n\n                d3Chart.call(brush);\n\n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) {\n                    return d;\n                });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\": width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n                setSelected();\n            }\n\n            vm.resize = function() {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n        function beep() { _beep.play(); }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS(\n            $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n            {\n                'debug': false,\n                'devel': false\n            }\n        );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \":\" + (($location.port() == \"3002\") ? 80 : $location.port()) + '/api/'\n         var request = function(req) {\n             var query = url + req.table;\n             query += \"/?q=\"+encodeURIComponent(JSON.stringify(req.query));\n             // switch (typeof(req.query).toString()) {\n             //     case \"object\":\n             //         query += \"/?q=\" + encodeURIComponent(JSON.stringify(req.query));\n             //         break;\n             //     case \"string\":\n             //         query += \"/\" + req.query;\n             //         break;\n             // }\n             // debugger;\n             return $http({\n                 method: 'GET',\n                 url: query\n             })\n         }\n\n         // Return Object\n         return {\n             request: request\n         };\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osHistory', osHistory);\n\n    /** @ngInject */\n    function osHistory(moment, signals, osSound, _) {\n\n        \n\n        var _historyMax = 100;\n        var _geneSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _geneIndex = 0;\n        var _patientSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _patientIndex = 0;\n        var _onPatientAdd = new signals.Signal();\n        var _onPatientSelectionChange = new signals.Signal();\n        var _onGeneAdd = new signals.Signal();\n        var _onGeneSelectionChange = new signals.Signal();\n       \n        /* Gene */\n        var setGeneSelection = function(selection){\n            var index = _geneSelections.indexOf(selection);\n            if (index>=0){\n                _geneIndex = index\n                _onGeneSelectionChange.dispatch(getGeneSelection())\n            }\n        };\n        var getGeneSelections = function(){\n            return _geneSelections;\n        };\n        var getGeneSelection = function(){\n            if (_geneIndex<0) _geneIndex = 0;\n            if (_geneIndex>=_geneSelections.length) _geneIndex = _geneSelections.length-1;\n            return _geneSelections[_geneIndex];\n        };\n        var addGeneSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getGeneSelection().ids.length){\n                if (_.difference(ids, getGeneSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _geneSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _geneIndex += _geneSelections.length-1;\n            _onGeneAdd.dispatch(getGeneSelection())\n        };\n        var getGeneSelectionLast = function(){\n            _geneIndex -= 1;\n            if (_geneIndex<0) { \n                osSound.beep();\n                _geneIndex = 0; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getGeneSelectionNext = function(){\n            _geneIndex += 1;\n            if (_geneIndex==_geneSelections.length) { \n                osSound.beep();\n                _geneIndex = _geneSelections.length-1; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n        /* Patient */\n        var setPatientSelection = function(selection){\n            var index = _patientSelections.indexOf(selection);\n            if (index>=0){\n                _patientIndex = index\n                _onPatientSelectionChange.dispatch(getPatientSelection())\n            }\n        };\n        var getPatientSelections = function(){\n            return _patientSelections;\n        };\n        var getPatientSelection = function(){\n            if (_patientIndex<0) _patientIndex = 0;\n            if (_patientIndex>=_patientSelections.length) _patientIndex = _patientSelections.length-1;\n            return _patientSelections[_patientIndex];\n        };\n        var addPatientSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getPatientSelection().ids.length){\n                if (_.difference(ids, getPatientSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _patientSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _patientIndex = _patientSelections.length-1;\n            _onPatientAdd.dispatch(getPatientSelection());\n        };\n        var getPatientSelectionLast = function(){\n            _patientIndex -= 1;\n            if (_patientIndex<0) { \n                osSound.beep();\n                _patientIndex = 0; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getPatientSelectionNext = function(){\n            _patientIndex += 1;\n            if (_patientIndex==_patientSelections.length) { \n                osSound.beep();\n                _patientIndex = _patientSelections.length-1; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n\n        var removeListeners = function(){\n          \n        };\n        var clear = function(){\n            _geneSelections = [];\n            _geneSelection = null;\n            _patientSelections = [];\n            _patientSelection = null;\n        };\n\n\n        var api = {\n            onPatientAdd: _onPatientAdd,\n            onPatientSelectionChange: _onPatientSelectionChange,\n            onGeneAdd: _onGeneAdd,\n            onGeneSelectionChange: _onGeneSelectionChange,\n\n            addGeneSelection: addGeneSelection,\n            setGeneSelection: setGeneSelection,\n            getGeneSelection: getGeneSelection,\n            getGeneSelections: getGeneSelections,\n            getGeneSelectionLast: getGeneSelectionLast,\n            getGeneSelectionNext: getGeneSelectionNext,\n\n            addPatientSelection: addPatientSelection,\n            setPatientSelection: setPatientSelection,\n            getPatientSelection: getPatientSelection,\n            getPatientSelections: getPatientSelections,\n            getPatientSelectionNext: getPatientSelectionNext,\n            getPatientSelectionLast: getPatientSelectionLast,\n\n            removeListeners: removeListeners,\n            clear: clear\n        };\n\n        return api;\n    }\n})();\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, osHttp, $http, signals, $location) {\n\n        var _dataSource;\n        var onDataSource = new signals.Signal();\n        function getDataSource(){ return _dataSource; }\n        function setDataSource(value){\n            osSocket.setDataSource(value);\n            _dataSource = value;\n            onDataSource.dispatch(_dataSource);\n        }\n\n        \n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n           \n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;\n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        function getTools(){\n            return [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png',\n                copy: 'Link copy number variation and mutation data to patients.'\n            }, {\n                name: 'Timelines',\n                route: 'timelines',\n                img: 'timelines.png',\n                copy: ''\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png',\n                copy: 'Map patient specific expression levels on a hand curated network of genes.'\n            }, {\n                name: 'PLSR',\n                route: 'plsr',\n                img: 'plsr.png',\n                copy: 'Use linear regression to correlate genes with clinical features using RNA expression.'\n            }, {\n                name: 'PCA',\n                route: 'pca',\n                img: 'pca.png',\n                copy: 'Two dimensional view of per sample expression data.'\n            }, {\n                name: 'Survival',\n                route: 'survival',\n                img: 'survival.png',\n                copy: 'Compare survival rates of selected patients against the remaining population in a Kaplan Meier plot.'\n            }, {\n                name: 'Patient Data',\n                route: 'history',\n                img: 'history.png',\n                copy: ''\n            }, {\n            //     name: 'Oncoprint',\n            //     route: 'oncoprint',\n            //     img: 'history.png',\n            //     copy: ''\n            // }, {\n            //     name: 'Api Explorer',\n            //     route: 'apiexplorer',\n            //     img: 'metadata.png',\n            //     copy: ''\n            // }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'metadata.png',\n                copy: ''\n            }];\n        }\n\n        function query(table, query){\n            return osHttp.request({\n                table: table,\n                query: query\n            });\n        }\n\n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n            \n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n\n        return {\n            query: query,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            onDataSource: onDataSource,\n            getTools: getTools,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint\n        }\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n    \n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, osHistory, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _) {\n\n\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var cyChart;\n            var elChart = angular.element(\".markers-chart\");\n\n            // Initialize View Model\n            var vm = initializeViewModel(this, $stateParams);\n\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (cyChart) cyChart.resize();\n            }\n\n            // Window Listeners // Todo: Need To Remove On $destroy\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n            angular.element($window).bind('click', \n                function(){\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = false;\n                        vm.optCtxPatientShow = false;\n                    });\n                }\n            );\n       \n            // Load Data\n            osApi.setBusy(true);\n            loadData(osApi, vm, function(data){\n\n                // Resize\n                vm.resize();\n\n                // Initalize Styles\n                var styles = initializeStyles();\n\n                // Initialize Chart\n                cyChart = initializeChart(data, styles, cytoscape, angular.element(\"#markers-chart\"));\n\n                // Initialize Layouts\n                initializeLayouts(cyChart, vm, $scope);\n\n                // Initialize Node Colors\n                initializeNodeColors(cyChart, vm, $scope, osApi, $timeout, _);\n\n                // Initialize Edge Colors\n                initializeEdgeColors(cyChart, vm, $scope, $timeout);\n\n                // Initialize Events\n                initializeEvents(cyChart, vm, $scope, $timeout, osApi, signals);\n\n                // Initalize Search\n                initializeSearch(cyChart, vm, $scope)\n\n                // Initialize Zoom\n                initializeZoom(cyChart, _);\n\n                // Initialize Commands\n                initializeCommands(cyChart, vm, $window);\n\n                // Initialize History\n                initializeHistory(cyChart, osHistory, _, $scope);\n                \n                // Ready\n                osApi.setBusy(false);\n            });\n        }\n\n        function initializeSearch(chart, vm, $scope){\n\n            // Search Gene Textbox\n            $scope.$watch(\"vm.searchGene\", function(){\n                if (angular.isUndefined(vm.searchGene)){\n                    vm.geneSearchResult = \"\";\n                    return;\n                } \n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"gene\"]')\n                    .forEach(function(ele){\n                        if (vm.searchGene==\"\") { ele.deselect(); return; }\n                        if (ele.data().name.toLowerCase().indexOf(vm.searchGene.toLowerCase())==0){\n                            ele.select(); \n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                    }, matches);\n                chart.endBatch();\n                if (vm.searchGene==\"\") vm.searchGeneResult = \"\";\n                else vm.searchGeneResult = \"(\"+matches.found +\" Matches)\"\n            });\n\n            // Search Patient Textbox\n            $scope.$watch(\"vm.searchPatient\", function(){\n                if (angular.isUndefined(vm.searchPatient)) return;\n                chart.startBatch();\n                var matches = {found:0};\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(ele){\n                        if (vm.searchPatient==\"\") { ele.deselect(); return; }\n                        if (ele.data().id.toLowerCase().indexOf(vm.searchPatient.toLowerCase())==0){\n                            ele.select()\n                            this.found += 1;\n                        }else{\n                            ele.deselect();\n                        }\n                }, matches);\n                chart.endBatch();\n                if (vm.searchPatient==\"\") vm.searchPatientResult = \"\";\n                else vm.searchPatientResult = \"(\"+matches.found +\" Matches)\"\n            });\n        }          \n        function initializeCommands(chart, vm, $window){\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n            vm.optCommandPatient = [\n                {name:\"Show Edges\", cmd:function(){\n                    vm.optCommandPatient.selected.select();\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(){\n                    var degmap = {};\n                    vm.optCommandPatient.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Genes\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected.select();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"Deselect Associated Genes\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandPatient.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Oncoprint\", cmd:function(){\n\n                    if (vm.datasource==\"DEMOdz\") return;\n                    if (vm.datasource.indexOf(\"TCGA\" == 0)) {\n                        var cbioDsName = vm.datasource.substr(4) + \"_tcga\";\n                        var genes = vm.optCommandPatient.selected.neighborhood('node').map(function(n) {\n                            return n.data().name;\n                        }).join(\"+\");\n                        var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                        $window.open(url);\n                    }\n                    vm.optCtxPatientShow = false;\n                }}\n            ];\n            vm.optCommandGene = [\n                {name:\"Show Edges\", cmd:function(){\n                    vm.optCommandGene.selected.select();\n                    \n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'element'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Hide Edges\", cmd:function(){\n                    var degmap = {};\n                    vm.optCommandGene.selected\n                        .neighborhood('edge')\n                        .forEach(function(item){\n                            this[item.id()] = {display:'none'};\n                        }, degmap);\n                    chart.batchData(degmap);\n                }},\n                {name:\"Select Associated Patients\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandGene.selected.select();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                    vm.optCtxGeneShow = false;\n                }},\n                {name:\"Deselect Associated Patients\", cmd:function(){\n                    chart.startBatch();\n                    vm.optCommandGene.selected\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                    vm.optCtxPatientShow = false;\n                }},\n                {name:\"View Gene Card\", cmd:function(){\n                    $window.open(\"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+vm.optCommandGene.selected.data().name);\n                    vm.optCtxGeneShow = false;\n                }}\n            ];\n            vm.optCommands = {\n                 \"zoomReset\" : function(){\n                    chart.fit();\n                    chart.center();\n                },\n                \"zoomFit\" : function(){\n                    chart.fit( chart.$(':selected'), 50 )\n                },\n                \"showPatientsInCommon\": function(){\n                    var geneNodes = chart.$('node[nodeType=\"gene\"]:selected');\n                    var geneNames = geneNodes.map(function(item){ return item.data().name; });\n                    var patientNodes = geneNodes.neighborhood(\"node\");\n\n                    chart.startBatch();\n                    patientNodes.filter(function(i, patient){\n                        var patientGeneNames = patient.neighborhood(\"node\").map(function(item){ return item.data().name; })\n                        geneNames.forEach(function(geneName){\n                            if (patientGeneNames.indexOf(geneName)==-1) return false;\n                        })\n                        return true;\n                    }).forEach( function(ele){\n                        ele.select();\n                    });\n                    chart.endBatch();\n                },\n                \"showGenesInCommon\": function(){\n                    var patientNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                    var genes;\n\n                    patientNodes.each(function(i, ele){\n                        var patientGenes = ele.neighborhood(\"node\").map( function(item){ return item.data().name; });\n                        if (i==0) genes = patientGenes;\n                        else{\n                            genes = genes.filter(function(gene){\n                                return patientGenes.indexOf(gene)>=0;\n                            }, patientGenes)\n                        }\n                    })\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach(function(node){\n                            if (genes.indexOf(node.data().name)>=0){\n                                node.select();\n                            }\n                        });\n                    chart.endBatch();\n\n                },\n                \"showPatientEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"hidePatientEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'none'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"showGeneEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'element'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"hideGeneEdges\": function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach(function(node){\n                            node.neighborhood('edge').forEach(function(item){\n                                this[item.id()] = {display:'none'};\n                            }, this);\n                    }, degmap);\n                    chart.batchData(degmap);\n                },\n                \"selectConnectedGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectConnectedPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .neighborhood('node')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"selectGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele.select();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectPatients\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectGenes\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"invertPatientSelection\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"invertGeneSelection\" : function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"invertAll\": function(){\n                    chart.startBatch();\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ele._private.selected?\"deselect\":\"select\"]();\n                        });\n                    chart.endBatch();\n                },\n                \"deselectAll\" : function(){\n                    chart.startBatch();\n                    chart.$('node:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                    chart.endBatch();\n                },\n                \"hideAllEdges\" : function(){\n                    var degmap = {};\n                    chart.$('edge[edgeType!=\"chromosome\"]').forEach(function(item){\n                        this[item.id()] = {display:'none'};\n                    }, degmap);\n                    chart.batchData(degmap);\n                }\n            };\n        }\n        function initializeViewModel(vm, $stateParams){\n\n            vm.datasource = $stateParams.datasource;\n            vm.optCommandGene = false;\n            vm.optCtxGeneShow;\n            vm.optCommandPatient;\n            vm.optCtxPatientShow = false;\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.searchGene;\n            vm.searchGeneResult = \"\";\n            vm.searchPatient;\n            vm.searchPatientResult = \"\";\n            vm.optCohortModes;\n            vm.optCohortMode = \"\";\n            vm.optCohortPatients;\n            vm.optCohortPatient;\n            vm.optCohortGenes;\n            vm.optCohortGene;\n            vm.optCommands;\n            vm.patient;\n            vm.gene;\n            vm.frame;\n            return vm;\n        }\n\n        function initializeHistory(chart, osHistory, _, $scope){\n\n            // History Integration\n            var selectedGeneIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n            var selectedPatientIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n\n            function saveSelectedGenes(){\n                var ids = chart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                if (_.difference(ids, selectedGeneIds).length==0) return;\n                if(ids.length>0) osHistory.addGeneSelection(\"Markers + Patients\", \"Manual\", ids);\n            }\n\n            function saveSelectedPatients(){\n                var ids = chart.$('node[nodeType=\"patient\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                if (_.difference(ids, selectedPatientIds).length==0) return;\n                if(ids.length>0) osHistory.addPatientSelection(\"Markers + Patients\", \"Manual\", ids);\n            }\n\n            chart.on('select', 'node[nodeType=\"gene\"]', _.debounce(saveSelectedGenes, 900));\n            chart.on('select', 'node[nodeType=\"patient\"]', _.debounce(saveSelectedPatients, 900));\n\n            function setSelectedGenes(){\n                var degmap = [];\n                chart.startBatch();\n                if (selectedGeneIds.length==0){\n                    chart.$('node[nodeType=\"gene\"]:selected')\n                            .forEach( function(ele){\n                                ele.deselect();\n                                degmap[ele.id()] = {display:'element'};\n                            }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedGeneIds);\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            }\n            function setSelectedPatients(){\n                var degmap = [];\n                chart.startBatch();\n                if (selectedPatientIds.length==0){\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                            .forEach( function(ele){\n                                ele.deselect();\n                                degmap[ele.id()] = {display:'element'};\n                            }, degmap);\n                }else{\n                    chart.$('node[nodeType=\"patient\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedPatientIds);\n                }\n                chart.batchData(degmap);\n                chart.endBatch();\n            }\n            setSelectedGenes();\n            setSelectedPatients();\n\n            osHistory.onGeneSelectionChange.add(function(selection){\n                selectedGeneIds = (selection==null) ? null : selection.ids;\n                setSelectedGenes();\n            });\n            osHistory.onPatientSelectionChange.add(function(selection){\n                selectedPatientIds = (selection==null) ? null : selection.ids;\n                setSelectedPatients();\n            });\n\n            \n            \n\n\n\n\n            $scope.$on(\"$destroy\", function() {\n                saveSelectedGenes();\n                saveSelectedPatients();\n                osHistory.removeListeners();\n            });\n\n            return {\n                saveGenes: saveSelectedGenes,\n                savePatients: saveSelectedPatients\n            };\n        }\n\n        function initializeChart(data, styles, cytoscape, el){\n            // Initalize Cytoscape Chart\n            // If performance becomes an issue set *Viewport attributes to true\n            return cytoscape({\n                container: el,\n                elements: data,\n                style: styles,\n                hideEdgesOnViewport: false,\n                hideLabelsOnViewport: false,\n                textureOnViewport: false,\n                motionBlur: true,\n                minZoom: .05,\n                maxZoom: 40,\n                layout: {\n                    name: \"preset\",\n                    fit: true\n                }\n            });\n        }\n\n        function initializeStyles(){\n            // Unlike CSS order of operations is determined by order\n            // Play specific attention to use of data() + mapdata() values they are dynamic\n            // Care should be taken not to update styles directly in code, but to use underlying data model\n            // Cytoscape Dynamic Style Properties Include\n            /*\n                display\n                color\n                sizeEle\n                sizeLbl\n                posX\n                posY\n                hobo\n                patient\n            */\n            return [\n            {\n                selector: 'core',\n                style:{\n                    'selection-box-color': '#3993fa',\n                    'selection-box-border-color': '#3993fa',\n                    'selection-box-border-width': '1px',\n                    'selection-box-opacity': '.2'\n                }\n            },\n            {\n                selector: 'node',\n                style: {\n                    'display': \"data(display)\",\n                    'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                    'font-size': 'data(sizeLbl)',\n                    'text-valign': 'center'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': 'data(color)',\n                    'text-halign': 'center',\n                    'border-width': 1,\n                    'border-color': '#FFFFFF'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'background-color': \"#FFFFFF\",\n                    'border-color': \"#38347b\",\n                    'text-halign': \"right\",\n                    'label': \"data(id)\",\n                    'border-width': 'data(sizeBdr)'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]:selected',\n                style: {\n                    'border-color': \"#FF0000\",\n                    'border-width': 10\n                }\n            },{\n                selector: 'node[nodeType=\"centromere\"]',\n                style:{\n                    'font-size': '24px',\n                    'text-halign': 'center',\n                    'background-color': \"#3993fa\",\n                    'color':\"#FFFFFF\",\n                    'border-color': 'rgb(19, 150, 222)',\n                    'height': '40px',\n                    'width': '120px',\n                    'shape': 'roundrectangle',\n                    'label': \"  data(id)\"\n                }\n            },{\n                selector: 'edge',\n                style:{\n                    'display': \"data(display)\",\n                    'line-color': \"data(color)\",\n                    'width': \"data(sizeEle)\"\n                }\n            }];\n        }\n\n        function initializeEvents(chart, vm, $scope, $timeout, osApi, signals){\n\n            // Create Signals\n            var events = (function(signals) {\n                var geneOver = new signals.Signal();\n                var geneOut = new signals.Signal();\n                var geneClick = new signals.Signal();\n                var geneCtx = new signals.Signal();\n                var patientOver = new signals.Signal();\n                var patientOut = new signals.Signal();\n                var patientClick = new signals.Signal();\n                var patientCtx = new signals.Signal();\n                var removeAll = function() {\n                    geneOver.removeAll();\n                    geneOut.removeAll();\n                    geneClick.removeAll();\n                    geneCtx.removeAll();\n                    patientOver.removeAll();\n                    patientOut.removeAll();\n                    patientClick.removeAll();\n                    patientCtx.removeAll();\n                }\n                var over = function(e) {\n                    geneOver.add(e);\n                    patientOver.add(e);\n                };\n                var out = function(e) {\n                    geneOut.add(e);\n                    patientOut.add(e);\n                }\n                var click = function(e) {\n                    geneClick.add(e);\n                    patientClick.add(e);\n                }\n                return {\n                    geneOver: geneOver,\n                    geneOut: geneOut,\n                    geneClick: geneClick,\n                    geneCtx: geneCtx,\n                    patientOver: patientOver,\n                    patientOut: patientOut,\n                    patientClick: patientClick,\n                    patientCtx: patientCtx,\n                    over: over,\n                    out: out,\n                    click: click,\n                    removeAll: removeAll\n                };\n            })(signals);\n\n            // Attach Event Signals To Real Events\n            chart\n                .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch)\n                .on('cxttap', 'node[nodeType=\"gene\"]', events.geneCtx.dispatch )\n                .on('cxttap', 'node[nodeType=\"patient\"]', events.patientCtx.dispatch );\n                \n\n            // Cache Hide All Edges Structure\n            var hidePatientEdges = {};\n            chart.$('edge[edgeType!=\"chromosome\"]')\n                .forEach(function(node){ this[node.id()] = { display: 'none' };}, hidePatientEdges);\n                    \n            // Define Behaviors\n            var behaviors = {\n                showGeneCtxMenu: function(e){\n                    vm.optCommandGene.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#gene-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxGeneShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandGene.selected.data().name);\n                    return this;\n                },\n                showPatientCtxMenu: function(e){\n                    vm.optCommandPatient.selected = e.cyTarget;\n                    var oe = e.originalEvent;\n                    var elMenu = angular.element(\"#patient-ctx-menu\");\n                    elMenu.show();\n                    $scope.$apply(function(){\n                        vm.optCtxPatientShow = true;\n                    });\n                    elMenu.css({left: oe.pageX-20, top: oe.pageY-20});\n                    elMenu.find(\".title\").text(vm.optCommandPatient.selected.data().name);\n                    return this;\n                },\n                showPatientInfo: function(e){\n                    if (e.cyTarget.data().nodeType == 'patient') {\n                        vm.patient = e.cyTarget.attr('patient');\n                        vm.patientChromosomes = e.cyTarget.neighborhood(\"node\")\n                            .map(function(item) { return item.data().id });\n                        $scope.$apply();\n                    }else{\n                        var gene = {\n                            name: e.cyTarget.data().name,\n                            mutation: e.cyTarget.neighbourhood(\"edge[edgeType='mutation']\").length,\n                            cnl1: e.cyTarget.neighbourhood(\"edge[edgeType='cnLoss.1']\").length,\n                            cnl2: e.cyTarget.neighbourhood(\"edge[edgeType='cnLoss.2']\").length,\n                            cng1: e.cyTarget.neighbourhood(\"edge[edgeType='cnGain.1']\").length,\n                            cng2: e.cyTarget.neighbourhood(\"edge[edgeType='cnGain.2']\").length\n                        }\n                        gene.mutations = gene.cnl1 + gene.cnl2 + gene.cng1 + gene.cng2;\n                        vm.gene = gene;\n                        $scope.$apply();\n                    }\n                    return this;\n                },\n                hidePatientInfo: function(){\n                    $scope.$apply(function() {\n                        vm.gene = vm.patient = vm.patientChromosomes = null;\n                    });\n                    return this;\n                },\n                showDegreeOne: function(e){\n                    var degmap = {};\n                    var target = (e.cyTarget.data().nodeType == 'patient') ? 'target' : 'source';\n\n                    chart.startBatch();\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this.degmap[item.id()] = {display:'element'};\n                            item[this.target]().css({\n                                'background-color':item.data().color,\n                                'border-color': item.data().color,\n                                'border-width': 60,\n                                'border-opacity': .3\n                            });\n                        }, {degmap:degmap, target:target});\n                    chart.endBatch();\n                    chart.batchData(degmap);\n                },\n                hideDegreeOne: function(e){\n                    var degmap = {};\n                    var target = (e.cyTarget.data().nodeType == 'patient') ? 'target' : 'source';\n                    var css = { \n                        'background-color': \"\",\n                        'border-color': \"\",\n                        'border-width': \"\",\n                        'border-opacity': \"\"\n                    }\n                    chart.startBatch();\n                    e.cyTarget.neighborhood('edge')\n                        .forEach(function(item){\n                            this.degmap[item.id()] = {display:'none'};\n                            item[target]().style(this.css);\n                        }, {degmap:degmap, css:css, target:target});\n                    chart.endBatch();                        \n                    chart.batchData(degmap);\n                },\n                showDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'element'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                },\n                hideDegreeTwo: function(e){\n                    var degmap = {};\n                    e.cyTarget.neighborhood('node')\n                        .forEach(function(node){\n                            node.neighborhood('edge')\n                                .forEach(function(item){\n                                    this[item.id()] = {display:'none'};\n                            }, this);\n                        }, degmap);\n                    chart.batchData(degmap);\n                }\n            }\n\n            // Use States To Associate Events + Behaviors\n            var states = [\n            {\n                name: 'Commands', //1° When \n                register: function(){\n                    events.geneCtx.add(behaviors.showGeneCtxMenu);\n                    events.patientCtx.add(behaviors.showPatientCtxMenu);\n                    events.over(function(e) {\n                        behaviors.showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors.hidePatientInfo(e);\n                    });\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    events.removeAll();\n                    chart.batchData(hidePatientEdges);\n                }\n\n            },\n            {\n                name: 'Selection Highlight', //1° When \n                register: function(){\n                    var degmap = {};\n                    chart.$('node[nodeType=\"patient\"]:selected')\n                        .forEach(function(node) {\n                            node.neighborhood('edge').forEach( function(edge) {\n                                this[edge.id()] = { display: 'element' };\n                            }, degmap)\n                        }, degmap);\n                    chart.batchData(degmap);\n                    chart.on('select', 'node', {ui:true}, function(e){\n                        behaviors.showDegreeOne(e);\n                    });\n                    chart.on('unselect','node',{ui:true}, function(e){\n                        behaviors.hideDegreeOne(e);\n                    });\n                    events.over(function(e) {\n                        behaviors.showPatientInfo(e)\n                    });\n                    events.out(function(e) {\n                        behaviors.hidePatientInfo(e);\n                    });\n\n                },\n                unregister: function(){\n\n                    // Hide All Edges\n                    chart.batchData(hidePatientEdges);\n                    chart.off('select', 'node');\n                    chart.off('unselect', 'node');\n                }\n\n            },\n            {\n                name: 'Roll Over Highlight', //1° On \n                register: function() {\n                    // events.click(function(e) {\n                    //     behaviors\n                    //         .showOncoPrint(e)\n                    // });\n                    events.over(function(e) {\n                        behaviors\n                            .showPatientInfo(e)\n                            .showDegreeOne(e)\n                        \n                    });\n                    events.out(function(e) {\n                        behaviors\n                            .hidePatientInfo(e)\n                            .hideDegreeOne(e)\n                    });\n                },\n                unregister: function() {\n                    events.removeAll();\n                }\n            }\n          ];\n\n            vm.optInteractiveModes = states;\n            vm.optInteractiveMode = vm.optInteractiveModes[0];\n\n            // What Scope To Initialize Behaviors\n            $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                if (angular.isDefined(prev)) prev.unregister();\n                if (angular.isDefined(next)) next.register();\n            });\n        }\n\n        function initializeEdgeColors(chart, vm, $scope, $timeout){\n\n            // Set Edge Options\n            var colors = [{ \n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: 'purple', //'#FFE11A',\n                    state: 'Highlight'\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight'\n                }];\n            var colorMap = {\n                'mutation' : colors[0],\n                'cnGain.1' : colors[1],\n                'cnLoss.1' : colors[2],\n                'cnGain.2' : colors[3],\n                'cnLoss.2' : colors[4]\n            };\n\n            // Default colors\n            $timeout(function(){\n                colors.forEach(function(item){\n                    angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                });\n                var degmap = {};\n                chart.edges('edge[edgeType!=\"chromosome\"]')\n                    .forEach(function(edge){\n                        this[edge.id()] = {'color':colorMap[edge.data(\"edgeType\")].color, sizeEle:3};\n                    }, degmap);\n                chart.batchData(degmap);\n            });\n\n            vm.optEdgeColors = colors;\n\n            // Update Edge Callback\n            vm.updateEdge = function(item, stateName){\n                if (item.state == stateName) return;\n                item.state = stateName;\n                var state;\n                switch(stateName){\n                    case \"Highlight\":\n                        state = {'color':item.color, sizeEle:3};\n                        break;\n                    case \"Hide\":\n                        state = {'color':'#FFFFFF', sizeEle:0};\n                        break;\n                    case \"Show\":\n                        state = {'color':'#3993fa', sizeEle:3};\n                        break;\n                }\n\n                // Set Legand color\n                angular.element(\".\" + item.class).css(\"border-color\", state.color );\n\n                // update Degree Map\n                var degmap = {};\n                chart.edges('edge[edgeType=\"'+item.name+'\"]')\n                    .forEach(function(edge){\n                        \n                        this.degmap[edge.id()] = this.state;\n                    }, {degmap:degmap, state:state});\n                chart.batchData(degmap);\n\n            }\n        }\n\n        function initializeZoom(chart, _){\n            chart.on('pan', _.debounce(function(e) {\n                var zoom = Math.max(e.cy.zoom(), 1);\n                var degmap = {};\n                var font = Math.ceil(Math.max(12/zoom, 1));\n                var sizeBdr = Math.ceil(Math.max(5/zoom, .5));\n                chart.nodes().forEach(function(node){\n                    this.degmap[node.id()] = {\n                        sizeEle: (node.degree()/this.zoom),\n                        sizeLbl: font,\n                        sizeBdr:sizeBdr\n                    };\n                }, { degmap:degmap, zoom:zoom, font:font, sizeBdr:sizeBdr });\n                chart.batchData(degmap);\n            }, 300));\n        }\n\n        function initializeNodeColors(chart, vm, $scope, osApi, $timeout, _){\n            function calculateSelections(){\n                var selectedNodes = chart.$('node[nodeType=\"patient\"]:selected');\n                var sums = {};\n                \n                // Calculate Sums\n                selectedNodes.each(function(index, node){\n                    if ( angular.isUndefined(sums[node.data().color]) ) sums[node.data().color] = 1;\n                    else sums[node.data().color] += 1;\n                });\n\n                // Populate Legand\n                $timeout(function(){\n                    for (var i=0; i<vm.legandNodes.length; i++){\n                        var color = vm.legandNodes[i].color;\n                        vm.legandNodes[i].cnt = angular.isDefined(sums[color]) ? sums[color] : 0;\n                    }\n                });\n            }\n            // Debounce To Avoid Multiple Calls\n            chart.on('select', _.debounce(calculateSelections, 20));\n            chart.on('unselect', _.debounce(calculateSelections, 20))\n            \n            \n            osApi.getSampleCategorizationNames().then(function(response) {\n                var optNodeColors =  [{name: 'Default'},{name: 'Gender'},{name: 'Age At Diagnosis'}];\n                if (angular.isDefined(response.payload.length)){\n                    optNodeColors = optNodeColors.concat( response.payload\n                        .map(function(item) { return {'name': item} }));\n\n                }\n                vm.optNodeColors = optNodeColors;\n                vm.optNodeColor = vm.optNodeColors[0];\n                $scope.$watch(\"vm.optNodeColor\", function(){\n                    var degmap = {};\n                    switch(vm.optNodeColor.name){\n                        case \"Default\":\n                            vm.legandNodes = [{name:'Patients', color:'#3993fa', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    degmap[node.id()] = {color:'#3993fa'};\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Gender\":\n                            vm.legandNodes = [{name:'Male', color:'purple', cnt:0}, {name:'Female', color:'green', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var gender = node.data(\"patient\")[0][2];\n                                        degmap[node.id()] = {color: (gender==='male') ? 'purple' :  'green' };\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#EEEEEE'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        case \"Age At Diagnosis\":\n                            vm.legandNodes = [{name:'Young', color:'green', cnt:0}, {name:'Old', color:'red', cnt:0}];\n                            chart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){\n                                    try{\n                                        var age = Number(node.data(\"patient\")[0][4]);\n                                        degmap[node.id()] = {color: 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)'};\n                                    }catch(e){\n                                        degmap[node.id()] = {color: '#000000'};\n                                    }\n                                });\n                            chart.batchData(degmap);\n                            break;\n                        default:\n                            osApi.getSampleCategorization(vm.optNodeColor.name).then(function(response) {\n                                vm.legandNodes = response.payload.tbl\n                                    .map(function(e) {return e[0] + \"|\" + e[1]; })\n                                    .filter(function(v, i, s) { return s.indexOf(v) === i; })\n                                    .map(function(e) { var p = e.split(\"|\");\n                                        return { 'name': p[0], 'color': p[1] , cnt:0} });\n\n                                    var rows = response.payload.rownames;\n                                    var tbl = response.payload.tbl;\n                                    var nodes = chart.$('node[nodeType=\"patient\"]');\n\n                                    // Revisit This.  Would be faster to not loop.\n                                    for (var i=0; i<nodes.length; i++){\n                                        var id = nodes[i].id();\n                                        degmap[id] = {color:'#DDDDDD'}\n                                        for (var ii=0; ii<rows.length; ii++){\n                                            if (id==rows[ii]){\n                                                degmap[id] = {color:tbl[ii][1]}\n                                            }\n                                        }\n                                    }\n                                    chart.batchData(degmap);\n                                });\n                            break;\n                        }\n                        calculateSelections();\n                    });\n            });\n\n            vm.updateNode = function(item, select){\n                chart.startBatch();\n                chart.nodes('node[nodeType=\"patient\"]')\n                    .forEach(function(node){ \n                        if (node.style(\"background-color\")==item.color) node[(select)?\"select\":\"deselect\"]();\n                });\n                chart.endBatch();\n            }\n        }\n\n        function initializeLayouts(chart, vm, $scope){\n            vm.optPatientLayouts = [{name: 'Hobo'},{name: 'Age At Diagnosis'}]; //,{name: 'Gender'}\n            vm.optPatientLayout = vm.optPatientLayouts[0];\n            $scope.$watch('vm.optPatientLayout', function(layout){                \n                var nodes = chart.nodes('node[nodeType=\"patient\"]');\n                chart.startBatch();\n                switch (layout.name){\n\n                    // Hobo Chart Positions Are Sent From Server In Initial Dataset + Cached Load\n                    case \"Hobo\":\n                        nodes.forEach(function(node){ \n                            node.position(node.data(\"hobo\")); \n                        });\n                        break;\n\n                    // Age At Dx Comes From Patient Table\n                    case \"Age At Diagnosis\":\n                        nodes.forEach(function(node){\n                            try{\n                                var age = Number(node.data(\"patient\")[0][4]);\n                                age = age.map(0, 100, -3000, 3000);\n                                node.position({\n                                    y: age, \n                                    x: (Math.pow(age, 2) / 5000) - 200\n                                });\n                            }catch(e){\n                                node.position({x:100,y:0});\n                            }\n                        });\n                        break;\n\n                    // Gender Comes From Patient Table\n                    case \"Gender\":\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='male')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 10;\n                                var b = 100;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = -1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                return angular.isUndefined(node.data(\"patient\")[0])\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -2500 + (a+b * angle) * Math.cos(angle);\n                                var y = 0 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        nodes\n                            .filter(function(index, node){\n                                try{ return (node.data(\"patient\")[0][2].toLowerCase()=='female')}\n                                catch(e){ return false; }\n                            })\n                            .forEach(function(node, index){\n                                var a = 400;\n                                var b = 400;\n                                var angle = 0.1 * (index+1);\n                                var x = -1000 + (a+b * angle) * Math.cos(angle);\n                                var y = 1200 + (a+b * angle) * Math.sin(angle);\n                                node.position({\n                                    x: x,\n                                    y: y\n                                });\n                            });\n                        break;\n                }\n                chart.endBatch();\n            });\n        }\n\n        function loadData(osApi, vm, cb){\n            // Today multiple nested data calls are nessisary to obtain all the data to render the chart\n            // Future server refactor should be done to limit number of calls and preformat data\n            osApi.setDataset(vm.datasource).then(function() {\n\n                // Patient Data\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    var dataPatients = response.payload.tbl;\n\n                    // Marker Data\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        var dataMarkers = angular.fromJson(response.payload).elements;\n\n                        // Process Patient Nodes (Save Hobo Positions + Patient History Info + Color + SizeEle + SizeLbl)\n                        dataMarkers.nodes\n                            .filter(function(item) { return item.data.nodeType === 'patient'; })\n                            .map(function(value) {\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"#FFFF00\"; //\"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                data.hobo = {x: value.position.x, y: value.position.y};\n                                data.patient = this.filter(function(item){ return item[0]===value.data.id });\n                            }, dataPatients);\n\n                        // Process Non Patient Nodes\n                        dataMarkers.nodes\n                            .filter(function(item) {  return  item.data.nodeType != 'patient'; })\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = \"element\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = data.degree;\n                                data.sizeLbl = 12;\n                                data.sizeBdr = 5;\n                                value.locked = (value.data.nodeType!==\"gene\");\n                                value.selectable = (value.data.nodeType===\"gene\");\n                                value.grabbable = (value.data.nodeType===\"gene\");\n                                return value;\n                            });\n\n                        // Process Edges\n                        dataMarkers.edges\n                            .map(function(value){\n                                var data = value.data;\n                                data.display = (data.edgeType==\"chromosome\") ? \"element\" : \"none\";\n                                data.color = \"rgb(19, 150, 222)\";\n                                data.sizeEle = 3;\n                                data.sizeLbl = 12;\n                                value.locked = true;\n                                value.selectable = false;\n                                value.grabbable = false;\n                                return value;\n                            });\n\n                        // Call Back\n                        cb(dataMarkers);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osHistory, $state, $timeout, $scope, moment, $stateParams, _, $) {\n\n            // Redirect if No Datasource\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Properties\n            var vm = this;\n            var data;\n            var table;\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n\n            var initViewState = function(vm, datasource){\n                vm.datasource = datasource;\n                vm.diagnosisMin = vm.diagnosisMinValue = 1;\n                vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n                vm.survivalMin = vm.survivalMinValue = 0;\n                vm.survivalMax = vm.survivalMaxValue = 10;\n                vm.search = \"\";\n            }\n\n            var initDataTable = function(vm, data){\n                \n                // Override Filter Function\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (selectedIds.length!=0) {\n                        if (selectedIds.indexOf(data[0]) == -1) return false;\n                    }\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis < (vm.diagnosisMax + 1) &&\n                        survival >= vm.survivalMin &&\n                        survival < (vm.survivalMax + 1));\n                }];\n\n                // Specify Data\n                var columns = data.colnames.map( function (c) { return {title:c}; });\n                table = angular.element('#history-datatable').dataTable({\n                            paging: false,\n                            columns: columns,\n                            data: data.tbl\n                });\n                table.api().draw();\n            }\n\n            var initEvents = function(vm, $scope){\n                vm.applyFilter = function(filter) {\n                    selectedIds = [];\n                    table.api().draw();\n                    \n                    var o = table._('tr', {\n                        \"filter\": \"applied\"\n                    }).map(function(item) {\n                        return item[0].toString().toUpperCase()\n                    });//.map(function(value){ return [value] });\n                    o = $.map(o, function(value) {\n                        return [value];\n                    });\n                    osHistory.addPatientSelection(\"Patient History\", filter, o);\n                };\n                var init = true;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (init) {\n                        init = false;\n                        return;\n                    }\n                    vm.applyFilter(\"Search\");\n                }, 1000));\n\n                osHistory.onPatientSelectionChange.add(function(selection) {\n                    selectedIds = selection.ids;\n                    table.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset($stateParams.datasource).then(function() {\n                osApi.getPatientHistoryTable($stateParams.datasource).then(function(response) {\n                    initViewState(vm, $stateParams.datasource);\n                    initDataTable(vm, response.payload);\n                    initEvents(vm, $scope)\n                    osApi.setBusy(false);\n                });\n            });\n\n            \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            var nameMap = {\n                \"DEMOdz\" : \"Glioblastoma (DEMO)\",\n                \"TCGAbrain\": \"Brain (TCGA)\",\n                \"TCGAbrca\": \"Breast (TCGA)\",\n                \"TCGAcoadread\": \"Colorectal (TCGA)\",\n                \"TCGAgbm\": \"Glioblastoma (TCGA)\",\n                \"TCGAhnsc\": \"Head + Neck (TCGA)\",\n                \"TCGAlgg\" : \"Lower Grade Glioma (TCGA)\",\n                \"TCGAluad\": \"Lung Adenocarcinoma (TCGA)\",\n                \"TCGAlung\": \"Lung (TCGA)\",\n                \"TCGAlusc\": \"Lung Sasquamous Cell (TCGA)\",\n                \"TCGApaad\": \"Pancreas (TCGA)\",\n                \"TCGAprad\": \"Prostate (TCGA)\",\n                \"UWbrain\":  \"Brain (UW)\",\n                \"MSKbrain\": \"Brain (MSK)\"\n            };\n\n            // Load Datasets\n            vm.datasets = osApi.getUserApi().getUser().datasets.map(function(item){\n                    return {name: this[item], id: item}\n                }, nameMap);\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohorts', cohorts);\n\n    /** @ngInject */\n    function cohorts() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohorts/cohorts.html',\n            controller: CohortsController,\n            scope:{\n                type:\"@\"\n            },\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortsController(osHistory, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            var vm = this;\n            vm.selection;\n            vm.selections;\n            \n            vm.close = function(){\n                $(\".cohorts-\"+vm.type).hide();\n            }\n            vm.setSelection = function(item){\n                osHistory[\"set\"+vm.type+\"Selection\"](item);\n            };\n            var update = function(scroll){\n                $timeout(function() {\n                    vm.selections = osHistory[\"get\"+vm.type+\"Selections\"]();\n                    vm.selection = osHistory[\"get\"+vm.type+\"Selection\"]();\n                    \n                });\n            };\n            \n            osHistory[\"on\"+vm.type+\"Add\"].add(function(){update(true)});            \n            osHistory[\"on\"+vm.type+\"SelectionChange\"].add(function(){update(false)});\n            \n            var isDragable = false;\n            var show = function(){\n                $(\".cohorts-\"+vm.type).show();\n                if (isDragable) return;\n                isDragable = true;\n                angular.element(\".cohorts-\"+vm.type).draggable();\n\n            }            \n\n            // Keypress\n            angular.element(document).keypress(function(e) {\n                var selection;\n                if (!e.ctrlKey) return;\n                console.log(e.keyCode)\n                if(vm.type==\"Gene\"){\n                    switch(e.keyCode){\n                        case 12: show(); break;\n                        case 39: osHistory.getGeneSelectionNext(); break;\n                        case 59: osHistory.getGeneSelectionLast(); break;\n                    }\n                }else{\n                    switch (e.keyCode)\n                    {\n                        case 16: show(); break;\n                        case 27: osHistory.getPatientSelectionLast(); break;\n                        case 29: osHistory.getPatientSelectionNext(); break;                \n                    }\n                }\n                \n            });\n            \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osApiExplorer', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/apiexplorer/apiexplorer.html',\n            controller: ApiExplorerController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ApiExplorerController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n          \n            // Elements\n            //var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            var start = new Date().getTime();\n            osApi.query(\"TCGA_BRCA_PT\",\n                {\n                    gender:'MALE'\n                }).then(function(e){\n               debugger;\n            });\n            \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            // if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n            //      $state.transitionTo(\"landing\");\n            //      event.preventDefault();\n            // }\n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('test',{\n                url: '/test',\n                template: '<os-test>',\n                authenticate: false\n            })\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true\n            })\n            .state('apiexplorer', {\n                url: '/apiexplorer/{datasource}',\n                template: '<os-api-explorer>',\n                authenticate: false\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: false\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>',\n                authenticate: true\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n    \n    \n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/apiexplorer/apiexplorer.html\",\"Hello There\");\n$templateCache.put(\"app/components/cohorts/cohorts.html\",\"<div class=\\\"cohorts panel panel-default cohorts-{{vm.type}}\\\"><div class=\\\"panel-heading\\\">{{vm.type}} History <span class=\\\"pull-right fa fa-times\\\" ng-click=\\\"vm.close()\\\"></span></div><div class=\\\"panel-body cohorts-panel-body\\\"><table><tr ng-click=\\\"vm.setSelection(item)\\\" ng-repeat=\\\"item in vm.selections\\\" ng-class=\\\"{\\'cohort-selected\\' : item==vm.selection}\\\"><td>{{item.tool}}</td><td>{{item.desc}}</td><td>{{item.ids.length}}</td></tr></table></div></div>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset.id)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.id}}.png\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}}</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"#help\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Diagnosis\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Survival\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Patients</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Genes\\\" ng-click=\\\"vm.optCommands.selectConnectedGenes()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Patient Selection\\\" ng-click=\\\"vm.optCommands.invertPatientSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Patients\\\" ng-click=\\\"vm.optCommands.selectPatients()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Patients\\\" ng-click=\\\"vm.optCommands.deselectPatients()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Patient Edges\\\" ng-click=\\\"vm.optCommands.showPatientEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Edges\\\" ng-click=\\\"vm.optCommands.hidePatientEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showGenesInCommon()\\\">Select Genes In Common</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Genes</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Patients\\\" ng-click=\\\"vm.optCommands.selectConnectedPatients()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Gene Selection\\\" ng-click=\\\"vm.optCommands.invertGeneSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Genes\\\" ng-click=\\\"vm.optCommands.selectGenes()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Genes\\\" ng-click=\\\"vm.optCommands.deselectGenes()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.showGeneEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.hideGeneEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showPatientsInCommon()\\\">Select Patients In Common</li></ul></div></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Global</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.invertAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Invert Selections\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.deselectAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Deselect All\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.hideAllEdges()\\\" style=\\\"width:33.333%\\\" title=\\\"Hide All Edges\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomReset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomFit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Fit</button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}};position:relative\\\">{{item.name}} ({{item.cnt}} Selected)<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, true); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};border-color:red;\\\"></div><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, false); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Edge Options</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" style=\\\"position:relative\\\">{{item.name}}<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Highlight\\'); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Show\\'); $event.stopPropagation();\\\" style=\\\"background-color:#3993fa\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Hide\\'); $event.stopPropagation();\\\" style=\\\"background-color:#FFF\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Search {{vm.searchPatientResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchPatient\\\" placeholder=\\\"Patient Id\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Search {{vm.searchGeneResult}}</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.searchGene\\\" placeholder=\\\"Gene Name\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3></div></section><ul id=\\\"gene-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxGeneShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandGene\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><ul id=\\\"patient-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxPatientShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandPatient\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><section ng-show=\\\"vm.gene\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.gene.name}}</li><li>CnGain.1: {{vm.gene.cng1}}</li><li>CnGain.2: {{vm.gene.cng2}}</li><li>CnLoss.1: {{vm.gene.cnl1}}</li><li>CnLoss.2: {{vm.gene.cnl2}}</li></ul></div></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/test/test.html\",\"<div class=\\\"test\\\"><input ng-model=\\\"vm.message\\\"><br>Hello {{vm.message}}<div ng-repeat=\\\"item in vm.datasets\\\">{{item}}</div></div>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Patients Display</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}