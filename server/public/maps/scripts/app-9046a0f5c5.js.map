{"version":3,"sources":["scripts/app-9046a0f5c5.js"],"names":["angular","module","tools","ToolsController","osApi","$state","$stateParams","vm","this","datasource","name","route","img","explore","tool","go","$inject","directive","restrict","templateUrl","controller","controllerAs","bindToController","timelines","TimelinesController","toggleFilter","element","toggleClass","setBusy","setDataset","then","getTimelines","PlsrController","$timeout","$scope","d3","$sce","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","update","elChart","chart","create","abs","vectors","genes","circles","remove","lines","nAbs","xScale","scale","linear","domain","range","width","yScale","height","text","svg","selectAll","data","enter","append","attr","v","lr","style","d","indexOf","on","modal","url","$apply","trustAsResourceUrl","pt","mouse","tooltip","transition","duration","each","select","delay","i","length","margin","top","right","bottom","left","response","mtx","payload","rownames","filter","replace","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","Math","floor","AgeDx","Survival","$watch","animate","factors","low","Number","high","getCalculatedPLSR","loadings","map","item","index","loadingNames","vectorNames","maxValue","PcaController","d3Chart","d3xAxis","d3yAxis","getPCA","getCalculatedPCA","pc1","pc2","draw","scores","dataset","max","min","xMax","yMax","xAxis","axis","orient","ticks","yAxis","exit","call","pathways","PathwaysController","cytoscape","getStyle","darkblue","red","purple","green","selector","content","text-valign","text-halign","shape","color","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","search","csChart","isUndefined","term","toUpperCase","len","nodes","ele","unselect","substr","getPathway","fromJson","container","elements","layout","fit","e","cyTarget","id","pmid","source","osState","signals","_root","_filter","add","children","push","onChange","dispatch","onSelect","removeAll","set","icon","ids","depth","get","Signal","getUser","password","authenticated","token","setDatasource","patientFilters","geneFilters","service","oncoscape","SockJS","$rootScope","$q","$log","callbacks","requestId","getRequestId","socket","debug","devel","onmessage","event","isDefined","cmd","callback","resolve","error","request","status","deferred","defer","readyState","onopen","send","toJson","promise","factory","osSocket","$http","login","user","req","method","username","res","success","value","show","hide","getDomains","dataPackage","getDataSetNames","getDataManifest","getPatientHistoryTable","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","getCalculatedSurvivalCurves","getCalculatedTimelines","getModuleModificationDate","getMrnaData","entities","features","getCnvData","getMutationData","showFilter","slideDown","hideFilter","slideUp","MetadataController","colnames","rows","dtTable","dataTable","paging","api","markers","MarkersController","$window","blue","black","white","gray","styles","border-opacity","label","text-background-color","text-background-opacity","text-background-shape","optInteractiveModesFactory","events","geneOver","geneOut","geneClick","patientOver","patientOut","patientClick","over","out","click","states","register","unregister","nodeType","patient","patientChromosomes","neighborhood","$","ds","cbioDsName","n","join","open","next","prev","optNodeColorsFactory","fn","legandNodes","tbl","s","p","split","forEach","optNodeColors","concat","age","optNodeColor","optEdgeColorsFactory","edgeColor","el","state","css","class","optPatientLayoutsFatory","optPatientLayout","position","pos","x","y","xMale","xFemale","toLowerCase","optInteractiveModes","optInteractiveMode","optPatientLayouts","optEdgeColors","legandPatient","legandChromosomes","scope","LoginController","domains","hasError","landing","LandingController","header","HeaderController","toolsClick","cohortClick","history","HistoryController","filterData","zf","rawData","val","diagnosisMin","diagnosisMinValue","apply","diagnosisMax","diagnosisMaxValue","ceil","survivalMin","survivalMax","fnClearTable","fnAddData","applyFilter","DataTable","ext","settings","survival","parseFloat","diagnosis","isNaN","cohort","createCohort","_","scrollY","footer","FooterController","filters","FiltersController","root","tree","reverse","links","node","nodeEnter","parent","link","target","insert","diagonal","close","size","projection","DatasourceController","datasets","CompareController","runBlock","$on","run","routerConfig","$stateProvider","$urlRouterProvider","template","otherwise","config","constant","document","$logProvider","toastrConfig","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","$templateCache","put"],"mappings":"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","file":"scripts/app-9046a0f5c5.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ui.bootstrap', 'ui-rangeSlider', 'toastr']);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n            vm.tools = [{\n                name: 'Markers + Patients',\n                route: 'markers',\n                img: 'markers.png'\n            }, {\n                name: 'Pathways',\n                route: 'pathways',\n                img: 'pathways.png'\n            }, {\n                name: 'Partial Least Squares Regression (PLSR)',\n                route: 'plsr',\n                img: 'plsr.png'\n            }, {\n                name: 'Principal Components Analysis (PCA)',\n                route: 'pca',\n                img: 'pca.png'\n            }, {\n                name: 'Patient History',\n                route: 'history',\n                img: 'history.png'\n            }, {\n                name: 'MetaData',\n                route: 'metadata',\n                img: 'MetaData.png'\n            }, {\n                name: 'Timelines (Beta)',\n                route: 'timelines',\n                img: 'tool.png'\n            }, {\n                name: 'Survival (Coming Soon)',\n                route: 'timelines',\n                img: 'tool.png'\n            }];\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, $state, $stateParams) {\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n\n            // VM Event Handlers\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            //var elChart = angular.element(\"#plsr-chart\");\n\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getTimelines().then(function(){\n                    // var payload = response.payload;\n                    // var eventTypes = payload.eventTypes;\n                    // var events = payload.events;\n                    // var patients = payload.pts;\n\n                    \n\n// var data = [\n//   {label: \"person a\", times: [\n//     {\"starting_time\": 1355752800000, \"ending_time\": 1355759900000},\n//     {\"starting_time\": 1355767900000, \"ending_time\": 1355774400000}]},\n//   {label: \"person b\", times: [\n//     {\"starting_time\": 1355759910000, \"ending_time\": 1355761900000}]},\n//   {label: \"person c\", times: [\n//     {\"starting_time\": 1355761910000, \"ending_time\": 1355763910000}]},\n//   ];\n// { var chart = d3.timeline();\n//  var svg = d3.select(\"#timelines-chart\").append(\"svg\").attr(\"width\",500)\n//  .datum(data).call(chart);}\n\n                    osApi.setBusy(false);\n                });\n            });\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, $state, $stateParams, $timeout, $scope, d3, $sce) {\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.frame;\n            vm.tip = null;\n\n            // VM Event Handlers\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            };\n            vm.update = function() {\n                update(true);\n            };\n\n            // Elements\n            var elChart = angular.element(\"#plsr-chart\");\n\n            // Chart\n            var chart = (function() {\n\n\n                // Size\n                var margin = {\n                    top: 20,\n                    right: 20,\n                    bottom: 30,\n                    left: 40\n                };\n                var width = elChart.width() - margin.left - margin.right;\n                var height = elChart.height() - margin.top - margin.bottom;\n\n                var svg = d3.select(\"#plsr-chart\").append(\"svg\")\n                    .attr(\"id\", \"chart\")\n                    .attr(\"width\", width)\n                    .attr(\"height\", height);\n\n                var tooltip = svg.append(\"div\")\n                    .style(\"position\", \"absolute\")\n                    .style(\"z-index\", \"10\")\n                    .style(\"visibility\", \"hidden\");\n\n                var lines, circles, text;\n                var xScale, yScale;\n\n                function create(abs, vectors, genes) {\n                    if (circles) circles.remove();\n                    if (lines) lines.remove();\n                    var nAbs = -1.0 * abs;\n\n                    xScale = d3.scale.linear().domain([nAbs, abs]).range([0, width])\n                    yScale = d3.scale.linear().domain([nAbs, abs]).range([height, 0])\n                    text = svg.selectAll(\"text\")\n                        .data(vectors)\n                        .enter().append(\"text\")\n                        .attr(\"class\", \"text\")\n                        .attr(\"x\", function(v) {\n                            return xScale(v[0]);\n                        })\n                        .attr(\"y\", function(v) {\n                            return yScale(v[1]);\n                        })\n                        .text(function(v) {\n                            return v.name;\n                        })\n                        .attr(\"text-anchor\",\n                            function(v) {\n                                var lr = (v[0] > 0) ? \"start\" : \"end\";\n                                return lr;\n                            })\n                        .style(\"fill\", \"black\");\n                    lines = svg.selectAll(\"line\")\n                        .data(vectors)\n                        .enter()\n                        .append(\"line\")\n                        .attr(\"class\", \"line\")\n                        .style(\"stroke-width\", 3)\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        })\n                        .attr(\"x1\", xScale(0))\n                        .attr(\"y1\", yScale(0))\n                        .attr(\"x2\", function(v) {\n                            return xScale(v[0]);\n                        })\n                        .attr(\"y2\", function(v) {\n                            return yScale(v[1]);\n                        });\n                    circles = svg.selectAll(\"circle\")\n                        .data(genes)\n                        .enter()\n                        .append(\"circle\")\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .attr(\"r\", function() {\n                            return 3;\n                        })\n                        .style(\"fill\", 'black')\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        })\n                        .on(\"mouseover\", function(d) {\n                            var pt = d3.mouse(this);\n                            tooltip\n                                .text(d.name)\n                                .style(\"top\", (pt[1] + 160) + \"px\")\n                                .style(\"left\", (pt[0] + 10) + \"px\")\n                                .style(\"visibility\", \"visible\");\n                        })\n                        .on(\"mousemove\", function() {\n                            var pt = d3.mouse(this);\n                            tooltip\n                                .style(\"top\", (pt[1] + 160) + \"px\")\n                                .style(\"left\", (pt[0] + 10) + \"px\");\n                        })\n                        .on(\"mouseout\", function() {\n                            return tooltip.style(\"visibility\", \"hidden\");\n                        });\n                }\n\n                function update(abs, vectors, genes) {\n\n                    text\n                        .data(vectors)\n                        .transition()\n                        .duration(900)\n                        .attr(\"x\", function(v) {\n                            return xScale(v[0]);\n                        })\n                        .attr(\"y\", function(v) {\n                            return yScale(v[1]);\n                        })\n\n\n                    lines\n                        .data(vectors)\n                        .transition()\n                        .duration(900)\n                        .attr(\"x1\", xScale(0))\n                        .attr(\"y1\", yScale(0))\n                        .attr(\"x2\", function(v) {\n                            return xScale(v[0]);\n                        })\n                        .attr(\"y2\", function(v) {\n                            return yScale(v[1]);\n                        });\n\n\n                    circles\n                        .data(genes) // Update with new data\n                        .transition()\n                        .duration(900)\n                        .each(\"start\", function() { // Start animation\n                            d3.select(this) // 'this' means the current element\n                                //.style(\"fill\", \"000\")  // Change color\n                                //.attr(\"r\", 2);  // Change size\n                        })\n                        .delay(function(d, i) {\n                            return i / genes.length * 500; // Dynamic delay (i.e. each item delays a little longer)\n                        })\n                        //.ease(\"linear\")  // Transition easing - default 'variable' (i.e. has acceleration), also: 'circle', 'elastic', 'bounce', 'linear'\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]); // Circle's X\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]); // Circle's Y\n                        })\n                        .each(\"end\", function() { // End animation\n                            d3.select(this) // 'this' means the current element\n                                .transition()\n                                .duration(500)\n                                .style(\"fill\", \"black\") // Change color\n                                .attr(\"r\", 3); // Change radius\n                        });\n                }\n\n\n\n                return {\n                    create: create,\n                    update: update\n\n                }\n            })(\"#plsr-chart\");\n\n\n\n\n            // Load Data\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                update(false);\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            var update = function(animate) {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = payload.loadingNames[index];\n                        return item;\n                    });\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = payload.vectorNames[index];\n                        return item;\n                    });\n                    var abs = payload.maxValue * 1.2;\n\n\n                    if (animate) chart.update(abs, vectors, genes);\n                    else chart.create(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, $state, $stateParams, $timeout, $scope, d3) {\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n            var d3Chart = d3.select(\"#pca-chart\")\n                .append(\"svg\")\n                .attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    draw(payload.scores)\n                    osApi.setBusy(false);\n                });\n            };\n\n            // Render\n            var draw = function(dataset) {\n                var width = elChart.width();\n                var height = elChart.height();\n\n                var max, min;\n                max = d3.max(dataset, function(d) {\n                    return +d[0];\n                });\n                min = d3.min(dataset, function(d) {\n                    return +d[0];\n                });\n                var xMax = ((Math.abs(max) > Math.abs(min)) ? max : min) * 1.2;\n                max = d3.max(dataset, function(d) {\n                    return +d[1];\n                });\n                min = d3.min(dataset, function(d) {\n                    return +d[1];\n                });\n                var yMax = ((Math.abs(max) > Math.abs(min)) ? max : min) * 1.2;\n\n                var xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]);\n\n                var yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]);\n\n                var xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                var yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                d3Chart\n                    .attr(\"width\", width)\n                    .attr(\"height\", height);\n\n\n                var circles = d3Chart.selectAll(\"circle\").data(dataset, function(d) {\n                    return d;\n                })\n                circles.enter()\n                    .append(\"circle\")\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .attr(\"r\", function() {\n                        return 3;\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1)\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n\n            };\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, $state, $stateParams, $scope, $sce, cytoscape) {\n            var markersNetwork;\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n\n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPathway().then(function(response) {\n\n                    markersNetwork = angular.fromJson(response.payload);\n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('select', 'node', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"http://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        })\n                        .on('select', 'edge', function(e) {\n                            angular.element('#gbm-webpage').modal();\n                            var url = \"http://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n\n\n                    osApi.setBusy(false);\n                });\n            });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n\t'use strict';\n\n\tangular\n\t\t.module('oncoscape')\n\t\t.service('osState', osState);\n\n\t/** @ngInject */\n\tfunction osState(signals, osApi) {\n\n\t\t/* User Object */\n\t\tthis.getUser = function(){\n\t\t\treturn {\n\t\t\t\t\"name\":\"\",\n\t\t\t\t\"password\":\"\",\n\t\t\t\t\"domain\":{\"name\":\"Guest\"},\n\t\t\t\t\"authenticated\":false,\n\t\t\t\t\"token\": null\n\t\t\t}\n\t\t};\n\n\n\t\tthis.setDatasource = function(name){ this.patientFilters.set(name); }\n\t\tthis.patientFilters = filter();\n\t\tthis.geneFilters = filter();\n\t\t\n\n\n\t\t\n\t\tfunction filter(){\n\t\t\tvar _root = null\n\t\t\tvar _filter = null;\n\n\t\t\tvar add = function(filter){\n\t\t\t\t_filter.children = _filter.children || [];\n\t\t\t\t_filter.children.push(filter);\n\t\t\t\t_filter = filter;\n\t\t\t\tonChange.dispatch(_filter);\n\t\t\t\tonSelect.dispatch(_filter);\n\t\t\t};\n\t\t\tvar remove = function(filter){\n\t\t\t\t\n\t\t\t};\n\t\t\tvar removeAll = function(){\n\t\t\t\t\n\t\t\t};\n\t\t\tvar select = function(filter){\n\t\t\t\t_filter = (filter.parent) ? filter : null;\n\t\t\t\tonSelect.dispatch(filter);\n\t\t\t}\n\t\t\tvar set = function(datasource){\n\t\t\t\t_root = _filter = {\n\t\t\t\t\ticon: datasource,\n\t\t\t\t\tname: datasource,\n\t\t\t\t\tids: [],\n\t\t\t\t\tchildren: [],\n\t\t\t\t\tdepth: 0\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar get = function(){\n\t\t\t\treturn _root;\n\t\t\t}\n\n\t\t\t// Events\n\t\t\tvar onChange = new signals.Signal(); // Fired When Data Changes\n\t\t\tvar onSelect = new signals.Signal(); // Fired When Selection changes\n\n\t\t\treturn {\n\t\t\t\tfilter:get,\n\t\t\t\tadd:add,\n\t\t\t\tremove:remove,\n\t\t\t\tremoveAll: removeAll,\n\t\t\t\tselect: select,\n\t\t\t\tonChange: onChange,\n\t\t\t\tonSelect: onSelect,\n\t\t\t\tget: get,\n\t\t\t\tset: set\n\t\t\t};\n\t\t\t\t\n\t\t};\n\t\t\n\n\t\t\n\t}\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, domain) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = new SockJS('http://'+domain+'/oncoscape', '', {\n            'debug': true,\n            'devel': true\n        });\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request\n        };\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, $http) {\n\n        // Functions to move during refactor\n        this.setBusy = setBusy;\n        this.setBusyMessage = setBusyMessage;\n        this.login = login;\n        this.setDataset = setDataset;\n        this.showFilter = function() {\n            angular.element(\"#filter-dropdown\").slideDown();\n        }\n        this.hideFilter = function() {\n            angular.element(\"#filter-dropdown\").slideUp();\n        }\n\n        // Valid functions\n        this.getDomains = getDomains;\n        this.getDataSetNames = getDataSetNames;\n        this.getDataManifest = getDataManifest;\n        this.getPatientHistoryTable = getPatientHistoryTable;\n        this.getPatientHistoryDxAndSurvivalMinMax = getPatientHistoryDxAndSurvivalMinMax;\n        this.getSampleDataFrame = getSampleDataFrame;\n        this.getGeneSetNames = getGeneSetNames;\n        this.getSampleCategorizationNames = getSampleCategorizationNames;\n        this.getSampleCategorization = getSampleCategorization;\n        this.getMarkersNetwork = getMarkersNetwork;\n        this.getPathway = getPathway;\n        this.getDrugGeneInteractions = getDrugGeneInteractions;\n        this.getCanonicalizePatientIDsInDataset = getCanonicalizePatientIDsInDataset;\n        this.getGeneSetGenes = getGeneSetGenes;\n        this.getOncoprintDataSelection = getOncoprintDataSelection;\n        this.getPCA = getPCA;\n        this.getCalculatedPCA = getCalculatedPCA;\n        this.getPLSR = getPLSR;\n        this.getCalculatedPLSR = getCalculatedPLSR;\n        this.getSummarizedPLSRPatientAttributes = getSummarizedPLSRPatientAttributes;\n        this.getCalculatedSurvivalCurves = getCalculatedSurvivalCurves;\n        this.getTimelines = getTimelines;\n        this.getCalculatedTimelines = getCalculatedTimelines;\n        this.getMrnaData = getMrnaData;\n        this.getCnvData = getCnvData;\n        this.getMutationData = getMutationData;\n        this.getModuleModificationDate = getModuleModificationDate;\n\n\n\n\n        function login(user) {\n            var req = {\n                method: 'POST',\n                url: 'http://localhost/login/',\n                data: {\n                    username: user.name,\n                    password: user.password,\n                    domain: user.domain.name\n                }\n            };\n            return $http(req).then(function(res) {\n                if (res.data.success) {\n                    user.authenticated = true;\n                    user.token = res.data.token;\n                } else {\n                    user.authenticated = false;\n                    user.token = null;\n                }\n            });\n        }\n\n\n        function setBusy(value) {\n\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n\n        function setBusyMessage() {\n            //console.log(value);\n        }\n\n        function getDomains() {\n            return [{\n                \"name\": \"Guest\"\n            }, {\n                \"name\": \"FHCRC\"\n            }, {\n                \"name\": \"SCCA\"\n            }];\n        }\n\n        function setDataset(dataPackage) {\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n            //.then(function(){ });\n        }\n\n        function getDataSetNames() {\n            return osSocket.request({\n                cmd: \"getDataSetNames\"\n            });\n        }\n\n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n\n        function getSampleDataFrame() {}\n\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n\n        function getDrugGeneInteractions() {}\n\n        function getCanonicalizePatientIDsInDataset() {}\n\n        function getGeneSetGenes() {}\n\n        function getOncoprintDataSelection() {}\n\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n                payload: payload\n            });\n        }\n\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n\n        function getCalculatedSurvivalCurves() {}\n\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n\n        function getCalculatedTimelines() {}\n\n        // GBM\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource || \"DEMOdz\";\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, $state, $timeout, $scope, $stateParams, cytoscape, signals, $window) {\n\n            // Const Colors \n            var color = {\n                darkblue: 'rgb(5, 108, 225)',\n                blue: 'rgb(19, 150, 222)',\n                black: 'black',\n                white: 'white',\n                red: 'red',\n                purple: 'rgb(56, 52,123)',\n                gray: '#CCC'\n            };\n\n            // Const Style\n            var styles = [{\n                selector: 'node',\n                style: {\n                    'background-color': color.black,\n                    'border-opacity': 1,\n                    'border-color': color.red,\n                    'border-width': \"0px\",\n                    'height': \"20px\",\n                    'width': \"20px\",\n                    'label': \" data(id)\",\n                    'text-halign': \"right\",\n                    'text-valign': \"center\",\n                    'text-background-color': color.white,\n                    'text-background-opacity': '.8',\n                    'text-background-shape': 'roundrectangle',\n                    'font-size': '0px'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]',\n                style: {\n                    'background-color': color.blue,\n                    'height': '50px',\n                    'width': '50px'\n                }\n            }, {\n                selector: 'edge',\n                style: {\n                    'line-color': color.gray,\n                    'line-style': 'solid',\n                    'width': '3px',\n                    'display': 'none'\n                }\n            }, { // Chromo Bars\n                selector: 'edge[edgeType=\"chromosome\"]',\n                style: {\n                    'line-color': color.darkblue,\n                    'display': 'element'\n                }\n            }, {\n                selector: 'node[nodeType=\"gene\"]',\n                style: {\n                    'border-color': color.blue,\n                    'border-width': '3px',\n                    'background-color': color.white,\n                    'height': 'mapData(degree, 0, 50, 10.0, 80.0)',\n                    'width': 'mapData(degree, 0, 50, 10.0, 80.0)'\n                }\n            }, {\n                selector: 'node[nodeType=\"patient\"]:selected',\n                style: {\n                    'background-color': color.red,\n                    'width': '100px',\n                    'height': '100px',\n                    'shape': 'diamond'\n\n                }\n            }];\n\n            // Interactive Mode Options\n            var optInteractiveModesFactory = function(chart, vm) {\n                // Event Signals\n                var events = (function() {\n                    var geneOver = new signals.Signal();\n                    var geneOut = new signals.Signal();\n                    var geneClick = new signals.Signal();\n                    var patientOver = new signals.Signal();\n                    var patientOut = new signals.Signal();\n                    var patientClick = new signals.Signal();\n                    var removeAll = function() {\n                        geneOver.removeAll();\n                        geneOut.removeAll();\n                        patientOver.removeAll();\n                        patientOut.removeAll();\n                        geneClick.removeAll();\n                        patientClick.removeAll();\n                    }\n                    var over = function(e) {\n                        geneOver.add(e);\n                        patientOver.add(e);\n                    };\n                    var out = function(e) {\n                        geneOut.add(e);\n                        patientOut.add(e);\n                    }\n                    var click = function(e) {\n                        geneClick.add(e);\n                        patientClick.add(e);\n                    }\n                    return {\n                        geneOver: geneOver,\n                        geneOut: geneOut,\n                        geneClick: geneClick,\n                        patientOver: patientOver,\n                        patientOut: patientOut,\n                        patientClick: patientClick,\n                        over: over,\n                        out: out,\n                        click: click,\n                        removeAll: removeAll\n                    };\n                })();\n\n                chart\n                    .on('click', 'node[nodeType=\"gene\"]', events.geneClick.dispatch)\n                    .on('click', 'node[nodeType=\"patient\"]', events.patientClick.dispatch)\n                    .on('mouseover', 'node[nodeType=\"gene\"]', events.geneOver.dispatch)\n                    .on('mouseover', 'node[nodeType=\"patient\"]', events.patientOver.dispatch)\n                    .on('mouseout', 'node[nodeType=\"gene\"]', events.geneOut.dispatch)\n                    .on('mouseout', 'node[nodeType=\"patient\"]', events.patientOut.dispatch);\n                // States\n                var states = [{\n                    name: 'None',\n                    register: function() {},\n                    unregister: function() {}\n                }, {\n                    name: 'Show All Edges',\n                    register: function() {\n                        events.over(function(e) {\n                            if (e.cyTarget.data().nodeType == 'patient') {\n                                $scope.$apply(function() {\n                                    vm.patient = e.cyTarget.attr('patient');\n                                    vm.patientChromosomes = e.cyTarget.neighborhood(\"node\").map(function(item) {\n                                        return item.data().id\n                                    });\n                                });\n                            }\n                            e.cyTarget.style({\n                                'font-size': '100px'\n                            });\n                            e.cyTarget.animate({\n                                style: {\n                                    'border-width': 150\n                                }\n                            }, {\n                                duration: 300\n                            });\n                            e.cyTarget.neighborhood('node').style({\n                                'font-size': '70px'\n                            });\n                        });\n                        events.out(function(e) {\n                            $scope.$apply(function() {\n                                vm.patient = vm.patientChromosomes = null;\n                            });\n                            e.cyTarget.style({\n                                'font-size': '0px'\n                            });\n                            e.cyTarget.animate({\n                                style: {\n                                    'border-width': 0\n                                }\n                            }, {\n                                duration: 100\n\n                            });\n                            e.cyTarget.neighborhood('node').style({\n                                'font-size': '0px'\n                            });\n                        });\n                        chart.$('edge[edgeType!=\"chromosome\"]').style({\n                            display: 'element'\n                        });\n                    },\n                    unregister: function() {\n                        events.removeAll();\n                        chart.$('edge[edgeType!=\"chromosome\"]').style({\n                            display: 'none'\n                        });\n                    }\n                }, {\n                    name: 'One Degree',\n                    register: function() {\n                        events.click(function(e) {\n                            var ds = vm.datasource;\n                            if (ds.indexOf(\"TCGA\" == 0)) {\n                                var cbioDsName = ds.substr(4) + \"_tcga\";\n                                var genes = e.cyTarget.neighborhood('node').map(function(n) {\n                                    return n.data().name;\n                                }).join(\"+\");\n                                var url = \"http://www.cbioportal.org/ln?cancer_study_id=\" + cbioDsName + \"&q=\" + genes;\n                                $scope.$apply(function() {\n                                    $window.open(url);\n                                });\n                            }\n                        });\n                        events.over(function(e) {\n                            if (e.cyTarget.data().nodeType == 'patient') {\n                                $scope.$apply(function() {\n                                    vm.patient = e.cyTarget.attr('patient');\n                                    vm.patientChromosomes = e.cyTarget.neighborhood(\"node\").map(function(item) {\n                                        return item.data().id\n                                    });\n                                });\n                            }\n                            e.cyTarget.style({\n                                'height': '60px',\n                                'width': '60px',\n                                'font-size': '100px'\n                            });\n                            e.cyTarget.neighborhood('node').style({\n                                'font-size': '70px'\n                            });\n                            e.cyTarget.neighborhood('edge').style({\n                                'display': 'element'\n                            });\n                        });\n                        events.out(function(e) {\n                            $scope.$apply(function() {\n                                vm.patient = vm.patientChromosomes = null;\n                            });\n                            e.cyTarget.style({\n                             \n                                'font-size': '0px'\n                            });\n                            e.cyTarget.neighborhood('node').style({\n                                'font-size': '0px'\n                            });\n                            e.cyTarget.neighborhood('edge').style({\n                                'display': 'none'\n                            });\n                        });\n                    },\n                    unregister: function() {\n                        events.removeAll();\n                    }\n                }, {\n                    name: 'Two Degrees',\n                    register: function() {\n                        events.over(function(e) {\n                            if (e.cyTarget.data().nodeType == 'patient') {\n                                $scope.$apply(function() {\n                                    vm.patient = e.cyTarget.attr('patient');\n                                    vm.patientChromosomes = e.cyTarget.neighborhood(\"node\").map(function(item) {\n                                        return item.data().id\n                                    });\n                                });\n                            }\n                            e.cyTarget.style({\n                                'height': '60px',\n                                'width': '60px',\n                                'font-size': '100px'\n                            });\n                            e.cyTarget.neighborhood('node')\n                                .neighborhood('edge').style({\n                                    'line-style': 'dashed',\n                                    'display': 'element'\n\n                                });\n\n                            // Should Have Different Line Style For 1st Degree \n                            e.cyTarget.neighborhood('edge').style({\n                                'line-style': 'solid'\n                            });\n                        });\n                        events.out(function(e) {\n                            $scope.$apply(function() {\n                                vm.patient = vm.patientChromosomes = null;\n                            });\n                            e.cyTarget.style({\n                                'font-size': '0px'\n                            });\n                            e.cyTarget.neighborhood('node').neighborhood('edge').style({\n                                'line-style': 'solid',\n                                'display': 'none'\n                            });\n                        });\n                    },\n                    unregister: function() {\n                        events.removeAll();\n                    }\n                }];\n                $scope.$watch(\"vm.optInteractiveMode\", function(next, prev) {\n                    prev.unregister();\n                    next.register();\n                });\n                return states;\n            };\n\n            // Node Color Options\n            var optNodeColorsFactory = function(chart, vm, osApi) {\n                var fn = function(item) {\n                    chart.$('node[nodeType=\"patient\"]').style({\n                        'background-color': 'rgb(19, 150, 222)'\n                    });\n                    osApi.getSampleCategorization(item.name).then(function(response) {\n                        vm.legandNodes = response.payload.tbl.map(function(e) {\n                            return e[0] + \"|\" + e[1];\n                        }).filter(function(v, i, s) {\n                            return s.indexOf(v) === i;\n                        }).map(function(e) {\n                            var p = e.split(\"|\");\n                            return {\n                                'name': p[0],\n                                'color': p[1]\n                            }\n                        });\n                        chart.$('node[nodeType=\"patient\"]').forEach(function(ele) {\n                            var id = ele.data().id;\n                            for (var i = 0; i < this.rownames.length; i++) {\n                                if (id === this.rownames[i]) {\n                                    ele.style({\n                                        'background-color': this.tbl[i][1]\n                                    });\n                                    break;\n                                }\n                            }\n                        }, response.payload);\n                    });\n                }\n                osApi.getSampleCategorizationNames().then(function(response) {\n                    vm.optNodeColors = vm.optNodeColors.concat(response.payload\n                        .map(function(item) {\n                            return {\n                                'name': item,\n                                fn: fn\n                            }\n                        }));\n                });\n\n                vm.legandNodes = [{\n                    name: 'Patients',\n                    color: '#3993fa'\n                }];\n                var value = [{\n                    name: 'Default',\n                    fn: function() {\n                        vm.legandNodes = [{\n                            name: 'Patients',\n                            color: '#3993fa'\n                        }];\n                        chart.$('node[nodeType=\"patient\"]').style({\n                            'background-color': 'rgb(19, 150, 222)'\n                        });\n                    }\n                }, {\n                    name: 'Gender',\n                    fn: function() {\n                        vm.legandNodes = [{\n                            name: 'Male',\n                            color: 'blue'\n                        }, {\n                            name: 'Female',\n                            color: 'pink'\n                        }];\n                        chart.$('node[nodeType=\"patient\"]').forEach(function(ele) {\n                            if (ele.data().patient) {\n                                ele.style({\n                                    'background-color': (ele.data().patient[2] === 'male') ? 'rgb(5, 108, 225)' : (ele.data().patient[2] === 'female') ? 'pink' : 'black'\n                                });\n                            }\n                        });\n                    }\n                }, {\n                    name: 'Age At Diagnosis',\n                    fn: function() {\n                        vm.legandNodes = [{\n                            name: 'Young',\n                            color: 'green'\n                        }, {\n                            name: 'Old',\n                            color: 'red'\n                        }];\n                        chart.$('node[nodeType=\"patient\"]').forEach(function(ele) {\n                            if (ele.data().patient) {\n                                var age = ele.data().patient[4];\n                                ele.style({\n                                    'background-color': 'rgb(' + ((255 * age) / 100) + ',' + ((255 * (100 - age)) / 100) + ',0)'\n                                });\n                            }\n                        });\n                    }\n                }];\n                vm.optNodeColor = value[0]\n                return value;\n            };\n\n            // Edge Color Options\n            var optEdgeColorsFactory = function(chart) {\n                var fn = function(edgeColor) {\n                    var el = angular.element(\".\" + edgeColor.class);\n                    switch (edgeColor.state) {\n                        case 'Visible':\n                            edgeColor.state = 'Highlight';\n                            el.css(\"border-color\", edgeColor.color);\n                            chart.$('edge[edgeType=\"' + edgeColor.name + '\"]').style({\n                                'line-color': edgeColor.color,\n                                'width': '5px'\n                            });\n                            break;\n                        case 'Hidden':\n                            edgeColor.state = 'Visible';\n                            el.css(\"border-color\", color.gray);\n                            chart.$('edge[edgeType=\"' + edgeColor.name + '\"]').style({\n                                'line-color': '#CCC',\n                                'width': '5px'\n                            });\n                            break;\n                        default:\n                            edgeColor.state = 'Hidden';\n                            el.css(\"border-color\", color.white);\n                            chart.$('edge[edgeType=\"' + edgeColor.name + '\"]').style({\n                                'width': '0px'\n                            });\n                            break;\n                    }\n                };\n                var value = [{\n                    name: 'mutation',\n                    class: 'edgeMutation',\n                    color: '#004358',\n                    state: 'Highlight',\n                    fn: fn\n                }, {\n                    name: 'cnGain.1',\n                    class: 'edgeCnGain1',\n                    color: '#1F8A70',\n                    state: 'Highlight',\n                    fn: fn\n                }, {\n                    name: 'cnLoss.1',\n                    class: 'edgeCnLoss1',\n                    color: '#BEDB39',\n                    state: 'Highlight',\n                    fn: fn\n                }, {\n                    name: 'cnGain.2',\n                    class: 'edgeCnGain2',\n                    color: '#FFE11A',\n                    state: 'Highlight',\n                    fn: fn\n\n                }, {\n                    name: 'cnLoss.2',\n                    class: 'edgeCnLoss2',\n                    color: '#FD7400',\n                    state: 'Highlight',\n                    fn: fn\n                }];\n                $timeout(function() {\n                    value.forEach(function(item) {\n                        angular.element(\".\" + item.class).css(\"border-color\", item.color);\n                        chart.$('edge[edgeType=\"' + item.name + '\"]').style({\n                            'line-color': item.color,\n                            'width': '5px'\n                        });\n                    });\n                });\n                return value;\n            };\n\n            // Patient Layouts\n            var optPatientLayoutsFatory = function(chart, vm) {\n                var value = [{\n                    name: 'Hobo',\n                    fn: function(item) {\n                        vm.optPatientLayout = item;\n                        chart.$('node[nodeType=\"patient\"]').forEach(function(item) {\n                            item.position(item.data().pos);\n                        });\n                    }\n                }, {\n                    name: 'Age At Diagnosis',\n                    fn: function(item) {\n                        vm.optPatientLayout = item;\n                        chart.$('node[nodeType=\"patient\"]').forEach(function(item) {\n                            if (item.data().patient) {\n                                item.position({\n                                    x: 500,\n                                    y: (item.data().patient[4] * 60) - 3000\n                                });\n                            }\n                        });\n\n                    }\n                }, {\n                    name: 'Gender',\n                    fn: function(item) {\n                        vm.optPatientLayout = item;\n                        var xMale = 1000;\n                        var xFemale = 1000;\n                        chart.$('node[nodeType=\"patient\"]').forEach(function(item) {\n                            if (item.data().patient) {\n                                if (item.data().patient[2].toLowerCase() == 'male') {\n                                    item.position({\n                                        x: xMale -= 50,\n                                        y: 500\n                                    });\n                                } else {\n                                    item.position({\n                                        x: xFemale -= 50,\n                                        y: -500\n                                    });\n                                }\n                            }\n                        });\n                    }\n                }];\n                vm.optPatientLayout = value[0];\n                return value;\n            };\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource || 'DEMOdz';\n            vm.optInteractiveModes;\n            vm.optInteractiveMode;\n            vm.optPatientLayouts;\n            vm.optPatientLayout;\n            vm.optNodeColors;\n            vm.optNodeColor;\n            vm.optEdgeColors;\n            vm.legandNodes;\n            vm.legandPatient;\n            vm.legandChromosomes;\n            vm.frame;\n\n            // VM Event Handlers\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n\n            // Elements\n            var elChart = angular.element(\"#markers-chart\");\n            var chart;\n\n            // Initialize\n            var data = {\n                patient: null,\n                markers: null\n            }\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    data.patient = response.payload;\n                    osApi.getMarkersNetwork(response.payload).then(function(response) {\n                        data.markers = angular.fromJson(response.payload);\n                        data.markers.elements.nodes\n                            .filter(function(item) {\n                                return item.data.nodeType === 'patient';\n                            })\n                            .map(function(value) {\n\n                                // Save Positions Of Hobo + associate With Patient Table\n                                value.data.pos = {\n                                    x: value.position.x,\n                                    y: value.position.y\n                                };\n                                value.data.patient = data.patient.tbl.filter(function(item) {\n                                    return item[0] === value.data.id;\n                                })[0];\n                            });\n\n                        // Initalize CytoScape\n                        chart = cytoscape({\n                            container: elChart,\n                            elements: data.markers.elements,\n                            style: styles,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        });\n\n                        // Opt Edge Colors\n                        vm.optPatientLayouts = optPatientLayoutsFatory(chart, vm);\n                        vm.optEdgeColors = optEdgeColorsFactory(chart, vm, $timeout);\n                        vm.optNodeColors = optNodeColorsFactory(chart, vm, osApi);\n                        vm.optInteractiveModes = optInteractiveModesFactory(chart, vm, $scope);\n                        vm.optInteractiveMode = vm.optInteractiveModes[0];\n                        osApi.setBusy(false);\n                    });\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, osState, $state) {\n            var vm = this;\n            vm.domains = osApi.getDomains();\n            vm.user = osState.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                osApi.login(vm.user).then(function() {\n                    if (vm.user.authenticated) {\n                        $state.go(\"datasource\");\n                    } else {\n                        vm.hasError = true;\n                    }\n                });\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, osState, $stateParams, $state) {\n\n\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n\n            vm.toolsClick = function(){\n            \n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.showFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osState, $state, $timeout, $scope, $stateParams) {\n\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n            if (osState.patientFilters.get()==null) osState.patientFilters.set(vm.datasource);\n            vm.colnames = [];\n            vm.rows = [];\n            vm.diagnosisMin = vm.diagnosisMinValue = 1;\n            vm.diagnosisMax = vm.diagnosisMaxValue = 99;\n            vm.survivalMin = vm.survivalMinValue = 0;\n            vm.survivalMax = vm.survivalMaxValue = 10;\n            vm.search = \"\";\n\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            };\n\n            vm.applyFilter = function() {\n                // Override Datatables Default Search Function - More Efficent Than Using Angular Bindings\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    var survival = parseFloat(data[3]);\n                    var diagnosis = parseFloat(data[4]);\n                    if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    return (diagnosis >= vm.diagnosisMin &&\n                        diagnosis <= vm.diagnosisMax &&\n                        survival >= vm.survivalMin &&\n                        survival <= vm.survivalMax);\n                }];\n                dtTable.api().draw();\n            };\n\n            vm.cohort;\n            vm.createCohort = function() {\n                osState.patientFilters.add({\n                    icon: 'history',\n                    name: vm.cohort,\n                    ids: dtTable._('tr', {\"filter\":\"applied\"}).map(function(data) { return data[0]; })\n                });\n            };\n\n            osState.patientFilters.onSelect.add(filterData);\n\n            function filterData(zf){\n\n                var data;\n                if (zf.depth===0){\n                    data = rawData.tbl;\n                }else{\n                    var ids = zf.ids;\n                    var len = ids.length;\n                    data = rawData.tbl.filter( \n                        function(value) { \n                            var val = value[0];\n                            for (var i=0; i<len; i++){\n                                if (val === ids[i]) return true;\n                            }\n                            return false;\n                        }\n                    );\n                }\n\n                var d = data.map(function(d){ return d[4]; });\n                var s = data.map(function(d){ return d[3]; });\n                vm.diagnosisMin = vm.diagnosisMinValue = Math.floor(Math.min.apply(null, d));\n                vm.diagnosisMax = vm.diagnosisMaxValue = Math.ceil(Math.max.apply(null, d));\n                vm.survivalMin = vm.survivalMinValue = Math.floor(Math.min.apply(null, s));\n                vm.survivalMax = vm.survivalMaxValue = Math.floor(Math.max.apply(null, s));\n                dtTable.fnClearTable();\n                dtTable.fnAddData(data);\n            }\n\n\n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                    rawData = response.payload;\n                    vm.colnames = rawData.colnames;\n                    vm.rows = rawData.tbl;\n                    // filterData( osState.patientFilters.get() );\n                    $timeout(function() {\n                        dtTable = angular.element('#history-datatable').dataTable({\n                            \"scrollY\": \"70vh\",\n                            \"paging\": false\n                        });\n                        $scope.$watch('vm.search', function() {\n                            dtTable.api().search(vm.search).draw();\n                        });\n                        osApi.setBusy(false);\n                    }, 0, false);\n                });\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFilters', filters);\n\n    /** @ngInject */\n    function filters() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/filters/filters.html',\n            scope: {},\n            controller: FiltersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FiltersController(osApi, osState, $stateParams, d3) {\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource || \"DEMOdz\";\n            if (osState.patientFilters.get()==null) osState.patientFilters.set(vm.datasource);\n            vm.close = function() {\n                osApi.hideFilter();\n            };\n\n            osState.patientFilters.onChange.add(function(){\n                osApi.showFilter();\n                update(osState.patientFilters.get());\n            });\n\n            // Size\n            var margin = {\n                top: 20,\n                right: 20,\n                bottom: 30,\n                left: 40\n            };\n            var width = 1000 - margin.left - margin.right;\n            var height = 250 - margin.top - margin.bottom;\n            var i = 0;\n\n            var tree = d3.layout.tree()\n                .size([height, width]);\n\n            var diagonal = d3.svg.diagonal()\n                .projection(function(d) {\n                    return [d.y, d.x];\n                });\n\n            var svg = d3.select(\"#filters-chart\").append(\"svg\")\n                .attr(\"width\", width + margin.right + margin.left)\n                .attr(\"height\", height + margin.top + margin.bottom)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + ((1000 / 2) - 100) + \",\" + margin.top + \")\");\n                \n            \n            update(osState.patientFilters.get());\n            function update(root) {\n                // Compute the new tree layout.\n                var nodes = tree.nodes(root).reverse(),\n                    links = tree.links(nodes);\n\n                // Normalize for fixed-depth.\n                nodes.forEach(function(d) {\n                    d.y = d.depth * 150;\n                });\n\n                // Declare the nodes…\n                var node = svg.selectAll(\"g.node\")\n                    .data(nodes, function(d) {\n                        return d.id || (d.id = ++i);\n                    });\n\n                // Enter the nodes.\n                var nodeEnter = node.enter().append(\"g\")\n                    .attr(\"class\", \"node\")\n                    .attr(\"transform\", function(d) {\n                        return \"translate(\" + d.y + \",\" + d.x + \")\";\n                    })\n                    .on(\"click\", function(e) {\n                        osState.patientFilters.select(e);\n                    });\n\n                nodeEnter.append(\"circle\")\n                    .attr(\"r\", function(d) {\n                        return (d.parent == null) ? 50 : 35;\n                    })\n                   \n\n                nodeEnter.append(\"text\")\n                    .attr(\"x\", function(d){ return 0})\n                    .attr(\"y\", function(d){ return 30 })\n\n                    .text(function(d){ return d.name; })\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"font-size\", \"20px\")\n                     .attr(\"fill\", \"#59a5fb\");\n\n                nodeEnter.append(\"image\")\n                      .attr(\"xlink:href\", function(d) { return './assets/images/datasets/'+d.icon+'.png'; })\n                      .attr(\"x\", function(d) { return (d.parent == null) ? -50 : -35; })\n                      .attr(\"y\", function(d) { return (d.parent == null) ? -50 : -35; })\n                      .attr(\"width\", function(d) { return (d.parent == null) ? 100 : 70; })\n                      .attr(\"height\", function(d) { return (d.parent == null) ? 100 : 70; })\n                      .style(\"display\", function(d) { return d.icon == null ? \"none\" : null; });\n\n                // Declare the links…\n                var link = svg.selectAll(\"path.link\")\n                    .data(links, function(d) {\n                        return d.target.id;\n                    });\n\n                // Enter the links.\n                link.enter().insert(\"path\", \"g\")\n                    .attr(\"class\", \"link\")\n                    .style(\"stroke\", \"#3993fa\") //function(d) { return d.target.level; })\n                    .attr(\"d\", diagonal);\n\n            }\n            \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state, osState) {\n            var vm = this;\n            vm.datasets = [];\n            vm.explore = function(tool, datasource) {\n                osState.setDatasource(datasource);\n                $state.go(tool, {\n                    datasource: datasource\n                });\n            };\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataSetNames().then(function(response) {\n                vm.datasets = response.payload.datasets;\n                osApi.setBusy(false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCompare', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/compare/compare.html',\n            controller: CompareController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CompareController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($log, $rootScope) {\n\n        // Actions To Take On State Change\n        $rootScope.$on('$stateChangeStart', function() {\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n        });\n\n        $log.debug('runBlock end');\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>'\n            })\n            .state('login', {\n                url: '/login',\n                template: '<os-login>'\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>'\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>'\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>'\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>'\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>'\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>'\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>'\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>'\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>'\n            })\n            .state('compare', {\n                url: '/compare/{datasource}',\n                template: '<os-compare>'\n            });\n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('domain', document.domain)\n        .constant('$', $);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider, toastrConfig) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n\n        // Set options third-party lib\n        toastrConfig.allowHtml = true;\n        toastrConfig.timeOut = 3000;\n        toastrConfig.positionClass = 'toast-top-right';\n        toastrConfig.preventDuplicates = true;\n        toastrConfig.progressBar = true;\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/compare/compare.html\",\"<section class=\\\"compare-v50\\\"><os-plsr></os-plsr></section><section class=\\\"compare-v50\\\"><os-pca></os-pca></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><h2>Data Sources</h2><p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</p></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-md-6\\\"><img ng-src=\\\"/assets/images/datasets/{{dataset}}.png\\\"><h2>{{dataset}}</h2><p>Lorem ipsum dolor sit amet, cras eu mollis vivamus iv, ad sollicitudin rhoncus dui proin fort numa sar.</p><nobr><a href=\\\"\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\">Explore</a> &nbsp;|&nbsp; <a href=\\\"\\\" ng-click=\\\"vm.explore(\\'metadata\\',dataset)\\\">Learn More</a></nobr></li></ul></div></div><br><br></section>\");\n$templateCache.put(\"app/components/filters/filters.html\",\"<section id=\\\"filter-dropdown\\\" class=\\\"filters container\\\"><div class=\\\"filters-tree\\\" id=\\\"filters-chart\\\"></div><button class=\\\"btn btn-primary\\\" ng-click=\\\"vm.close()\\\" style=\\\"position: absolute; bottom:0px; left:50%;border-radius: 0px;\\\">Close Cohort Panel</button><div class=\\\"nav-divider\\\" style=\\\"min-height:3px;\\\"></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/header/header.html\",\"<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"\\\" ng-click=\\\"vm.toolsClick()\\\"><span class=\\\"glyphicon glyphicon-signal\\\"></span>Tools</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.cohortClick()\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Cohorts</a></li><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-equalizer\\\"></span>Data Sources</a></li><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Account</a></li><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-question-sign\\\"></span>Help</a></li></ul></div></div></nav>\");\n$templateCache.put(\"app/components/history/history.html\",\"<section class=\\\"history container container-filters\\\"><h2>Patient History ({{vm.datasource}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Age At diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter()\\\"></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-3\\\"><label>Create Cohort</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cohort Name\\\" style=\\\"height:29px;\\\" ng-model=\\\"vm.cohort\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" style=\\\"height:29px;\\\" ng-click=\\\"vm.createCohort()\\\">Go!</button></span></div></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section class=\\\"history container\\\" style=\\\"padding-top:20px;\\\"><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered\\\" cellspacing=\\\"0\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape was conceived, and is managed, by a Steering Committee comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.fredhutch.org/en/diseases/featured-researchers/fearn-paul.html\\\">Paul Fearn</a>, <a href=\\\"https://www.linkedin.com/in/paul-shannon-a9478166\\\">Paul Shannon</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, and <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<section class=\\\"markers container container-filters\\\"><h2>Markers + Patients ({{vm.datasource}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Layout Options</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu filter-list\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Patient Distribution</li><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" class=\\\"radio\\\" style=\\\"padding-left:10px\\\"><label><input type=\\\"radio\\\" name=\\\"patientType\\\" ng-click=\\\"item.fn(item)\\\">{{item.name}}</label></li></ul></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Color Options</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">Patients + Edges <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu filter-list\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Patients Colors</li><li ng-repeat=\\\"item in vm.optNodeColors\\\" class=\\\"radio\\\" style=\\\"padding-left:10px\\\"><label><input type=\\\"radio\\\" name=\\\"patientType\\\" ng-click=\\\"item.fn(item);\\\"> {{item.name}}</label></li><li><hr></li><li style=\\\"padding:5px;font-weight:600;\\\">Edge Colors</li><li ng-repeat=\\\"item in vm.optEdgeColors\\\"><button class=\\\"btn btn-default filter-button {{item.class}}\\\" ng-click=\\\"item.fn(item); $event.stopPropagation();\\\">{{item.name}} ({{item.state}})</button></li></ul></div></div><div class=\\\"col-xs-3\\\"><label>Create Cohort</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cohort Name\\\" style=\\\"height:29px;\\\" ng-model=\\\"vm.cohort\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" style=\\\"height:29px;\\\" ng-click=\\\"vm.createCohort()\\\">Go!</button></span></div></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section id=\\\"markers-chart\\\" class=\\\"markers container-fluid container-content\\\"></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div><div class=\\\"markers container-legand\\\"><ul class=\\\"legand\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Node Colors</li><li ng-repeat=\\\"item in vm.legandNodes\\\"><div class=\\\"circle {{item.color}}\\\"></div>{{item.name}}</li><li><hr></li><li style=\\\"padding:5px;font-weight:600;\\\">Edge Colors</li><li ng-repeat=\\\"item in vm.optEdgeColors\\\"><button class=\\\"btn btn-default filter-button {{item.class}}\\\" ng-click=\\\"item.fn(item); $event.stopPropagation();\\\">{{item.name}} ({{item.state}})</button></li></ul><ul class=\\\"legand\\\" ng-if=\\\"vm.patient\\\"><li><hr></li><li style=\\\"padding:5px;font-weight:600;\\\">Patient Information</li><li>PID: {{vm.patient[0]}}</li><li>SID: {{vm.patient[1]}}</li><li>GENDER: {{vm.patient[2]}}</li><li>STATUS: {{vm.patient[6]}}</li><li>DIAGNOSED: {{vm.patient[4]}} years old</li><li>SURVIVED: {{vm.patient[3]}} years</li><li>PROGRESSION: {{vm.patient[5]}}</li><li><hr></li><li style=\\\"padding:5px;font-weight:600;\\\">Genes ({{vm.patientChromosomes.length}})</li><li><span ng-repeat=\\\"item in vm.patientChromosomes\\\">{{item}} |</span></li></ul></div>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<section class=\\\"metadata container container-filters\\\"><h2>Metadata ({{vm.dataset}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-9\\\" style=\\\"padding-right: 60px;\\\">{{vm.dataset}} raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a> on MM/DD/YYY. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>. For information on variables, units and summary choices review the <a>Code Books</a>.</div><div class=\\\"col-xs-3\\\" style=\\\"margin: 10px 0 30px;\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section class=\\\"metadata container\\\" style=\\\"padding-top:20px;\\\"><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered\\\" cellspacing=\\\"0\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<section class=\\\"pathways container container-filters\\\"><h2>Pathways ({{vm.datasource}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-4\\\" style=\\\"padding-right:20px;\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-4\\\"><label>Create Cohort</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cohort Name\\\" style=\\\"height:29px;\\\" ng-model=\\\"vm.cohort\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" style=\\\"height:29px;\\\" ng-click=\\\"vm.createCohort()\\\">Go!</button></span></div></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section id=\\\"gbm-chart\\\" class=\\\"gbm container-fluid container-content\\\"></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div><section class=\\\"markers container-legand\\\"><ul class=\\\"legand\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Legend</li><li style=\\\"border:0px solid green; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Activation</li><li style=\\\"border:0px solid red; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Inhibition</li><li style=\\\"border:0px solid #38347B; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Modification</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Genes</li></ul><ul class=\\\"legand\\\" ng-if=\\\"vm.tip\\\"><li><hr></li><li style=\\\"padding:5px;font-weight:600;\\\">Tip</li><li>View {{vm.tip}}</li></ul></section>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<section class=\\\"pca container container-filters\\\"><h2>Principal Component Analysis ({{vm.datasource}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-4\\\" style=\\\"padding-right:20px;\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-4\\\" style=\\\"padding-right:20px;\\\"><label>Color Options</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">Patients Colors <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu filter-list\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" class=\\\"radio\\\" style=\\\"padding-left:10px\\\"><label><input type=\\\"radio\\\" name=\\\"patientType\\\" ng-click=\\\"item.fn(item);\\\"> {{item.name}}</label></li></ul></div></div><div class=\\\"col-xs-4\\\"><label>Create Cohort</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cohort Name\\\" style=\\\"height:29px;\\\" ng-model=\\\"vm.cohort\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" style=\\\"height:29px;\\\" ng-click=\\\"vm.createCohort()\\\">Go!</button></span></div></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"margin:50px 100px;height: 60vh\\\"></section><section class=\\\"markers container-legand\\\"><ul class=\\\"legand\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Legend</li><li><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</li><li><hr></li><li style=\\\"padding:5px;font-weight:600;\\\">Proportion of Variance</li><li>PC1: {{vm.pc1*100}}%</li><li>PC2: {{vm.pc2*100}}%</li></ul></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<section class=\\\"plsr container container-filters\\\"><h2>Partial Least Squares Regression ({{vm.datasource}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-3\\\" style=\\\"padding-right:20px;\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-3\\\"><label>Create Cohort</label><div class=\\\"input-group\\\"><input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Cohort Name\\\" style=\\\"height:29px;\\\" ng-model=\\\"vm.cohort\\\"> <span class=\\\"input-group-btn\\\"><button class=\\\"btn btn-primary\\\" type=\\\"button\\\" style=\\\"height:29px;\\\" ng-click=\\\"vm.createCohort()\\\">Go!</button></span></div></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section id=\\\"plsr-chart\\\" class=\\\"plsr container-fluid container-content\\\"></section><div class=\\\"modal fade pathways\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div><section class=\\\"markers container-legand\\\"><ul class=\\\"legand\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Legend</li><li style=\\\"border:0px solid #1396de; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Age At Diagnosis</li><li style=\\\"border:0px solid #38347b; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Survival</li><li><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Genes</li></ul></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<section class=\\\"timelines container container-filters\\\"><h2>Timelines ({{vm.datasource}})</h2><div class=\\\"row\\\"><div class=\\\"col-xs-4\\\" style=\\\"padding-right:20px;\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div></div></section><section class=\\\"container-filter-toggle\\\"><img src=\\\"/assets/images/arrow_down.png\\\" ng-click=\\\"vm.toggleFilter()\\\"></section><section id=\\\"timelines-chart\\\" class=\\\"timelines container-fluid container-content\\\"></section><section class=\\\"markers container-legand\\\"><ul class=\\\"legand\\\"><li style=\\\"padding:5px;font-weight:600;\\\">Events</li><li style=\\\"border:0px solid green; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Birth</li><li style=\\\"border:0px solid red; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Encounter</li><li style=\\\"border:0px solid #38347B; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Diagnosis</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Procedure</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Pathology</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Radiation</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Drug</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Progression</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Status</li><li style=\\\"border:0px solid #056ce1; border-left-width:10px; padding-left:10px;margin-bottom:1px;\\\">Absent</li></ul></section>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"datasource\\\"><div class=\\\"container\\\"><div class=\\\"row\\\"><h2>Tools ({{vm.datasource}})</h2><p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.</p></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-sm-6\\\"><img ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><h2>{{tool.name}}</h2><p>Lorem ipsum dolor sit amet, cras eu mollis vivamus, ad sollicitudin rhoncus dui proin.</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Explore</a></li></ul></div></div></section>\");}]);"],"sourceRoot":"/source/"}