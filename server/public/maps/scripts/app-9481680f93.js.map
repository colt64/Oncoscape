{"version":3,"sources":["scripts/app-9481680f93.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","query","beta","then","response","data","explore","tool","datasource","go","getDataSource","disease","toolmenu","ToolMenuController","timelines","TimelinesController","osHistory","$scope","$window","$document","moment","d3","saveSelected","selectedIds","d3Bars","selectAll","map","p","__data__","id","length","addPatientSelection","optCohortMode","name","draw","isUndefined","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","selShow","selPatient","selEvent","selFields","optCohortModes","timescaleunit","timescales","timescale","features","feature","filters","filter","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","getPatientSelection","ids","zoomed","event","shiftKey","scale","translate","ch","rh","patients","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","brushing","onBrushStart","sourceEvent","target","clear","call","onBrush","extent","lower","floor","upper","each","d","i","firstChild","classed","onBrushEnd","hRow","hChart","wChart","innerWidth","processData","bounds","nice","rows","exit","remove","enter","on","transform","selected","indexOf","e","cols","filteredEvents","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","daysToUnit","tlScale","svg","axis","orient","ticks","tickFormat","pow","behavior","processedData","patient","dead","hasOwnProperty","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","start","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","v","__color","processFeatureData","processPatientData","key","val","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","getTimelines","log","duration","asDays","payload","pts","eventTypes","Status","Dead","unshift","$watchGroup","$watch","onPatientSelectionChange","add","selection","resize","updateEventColor","item","survival","SurvivalController","getPatientHistoryTable","tbl","getCalculatedSurvivalCurves","r","markers","SummaryController","cytoscape","signals","_","$q","login","SubnavController","toolsClick","cohortClick","toggleFilter","PlsrController","$sce","addGeneSelection","node","toUpperCase","setSelected","xScale","yScale","xMax","yMax","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","onGeneSelectionChange","setScale","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","rawData","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","addEventListener","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","search","getCalculatedPCA","pathways","PathwaysController","skipSave","csChart","$","ele","startBatch","deselect","endBatch","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","linkTitle","links","center","term","len","nodes","unselect","substr","result","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","osSound","beep","_beep","play","Audio","service","oncoscape","SockJS","$rootScope","$log","$location","dataSource","callbacks","setDataSource","requestId","getRequestId","socket","onmessage","fromJson","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","$http","protocol","host","port","queryString","req","table","encodeURIComponent","JSON","stringify","method","_geneSelections","desc","_geneIndex","_patientSelections","_patientIndex","_onPatientAdd","Signal","_onPatientSelectionChange","_onGeneAdd","_onGeneSelectionChange","setGeneSelection","dispatch","getGeneSelections","difference","time","format","getGeneSelectionLast","getGeneSelectionNext","setPatientSelection","getPatientSelections","getPatientSelectionLast","getPatientSelectionSecondLast","getPatientSelectionNext","removeListeners","api","onPatientAdd","onGeneAdd","osSocket","osHttp","getDataSources","_dataSources","_dataSource","onDataSource","userApi","onLogin","onLogout","_user","password","authenticated","token","datasets","_domains","logout","user","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","getTools","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getPathway","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","getGeneSetTest","getGeneSetScore","Group1","Group2","group1","group2","geneset","oncoprint","OncoprintController","displayOncoprint","msg","empty","errorMessage","parse","console","setState","processed_data","onc","Oncoprint","create","suppressRendering","when","data_gene_map","obj","gene","track_id","data_gene","Date","now","addTrack","label","removable","setRuleSet","GENETIC_ALTERATION","useSameRuleSet","setTrackData","releaseRendering","click","toggleCellPadding","setZoom","allOncoLegendBlocks","allOncoLegendLabels","j","appendChild","elControl","elInstructions","elLegend","selectedPatientIds","selectedGeneIds","geneAndPatients","config","self","getTrackId","utils","makeIdCounter","id_order","inverted_id_order","visible_id_order","visible_inverted_id_order","hidden_ids","track_groups","track_group_sort_order","sort_direction","tracks","sort_config","type","cell_padding_on","true_cell_width","cell_width","zoomed_cell_width","trigger","SET_CELL_PADDING","getCellPadding","ceil","cell_padding","getZoom","clamp","updateZoomedCellWidth","updateZoom","SET_ZOOM","increaseZoom","decreaseZoom","getFullCellWidth","getZoomedCellWidth","getCellHeight","cell_height","getTrackHeight","track_height","getTrackPadding","track_padding","getFilteredIdOrder","data_filter_fn","track_ids","getTracks","getTrackDatum","getIdOrder","getInvertedIdOrder","getVisibleIdOrder","getVisibleInvertedIdOrder","updateVisibleIdOrder","invert_array","SET_VISIBLE_ID_ORDER","setIdOrder","slice","SET_ID_ORDER","hideIds","clear_existing","showIds","getTopmostTrack","setTrackSortComparator","cmp","sort_cmp","getTrackSortComparator","getTrackSortDirection","setTrackSortDirection","dir","setTrackGroupSortOrder","order","getTrackGroupSortOrder","getTrackSortOrder","ret","getTrackGroups","group_id","setSortConfig","sortById","sortBy","identity","reverse","sortByTrack","track_id_list","cmp_list","lexicographically_ordered_cmp","id1","id2","cmp_result","_len","d1","d2","d1_undef","d2_undef","isFinite","stableSort","group","ifndef","extend","defaultTrackConfig","id_data_map","ADD_TRACK","removeTrack","track","track_group","getContainingTrackGroup","old_position","splice","REMOVE_TRACK","reference","flatten","find","grp","moveTrack","new_position","moved_tracks","MOVE_TRACK","getTrackLabel","getTrackTooltip","tooltip","setTrackTooltip","getTrackData","id_accessor","getTrackDatumIdAccessor","current_id_order","current_inverted_id_order","SET_TRACK_DATA","datum_id","getTrackDatumDataKey","datum_data_key","getTrackDatumIdKey","datum_id_key","setTrackDatumIdKey","isTrackRemovable","isTrackSortDirectionChangable","sort_direction_changable","clearData","oncoprint_events","oncoprint_utils","RuleSet","oncoprint_RuleSet","defaultOncoprintConfig","legend","hiddenOncoprintConfig","pre_track_padding","undefined","CATEGORICAL_COLOR","GRADIENT_COLOR","BAR_CHART","container_selector_string","OncoprintSVGRenderer","label_font","onc_dev","ren_dev","params","target_track_id","source_track_id","toSVG","setLegendVisible","visible","FINISHED_RENDERING","CONTENT_AREA_MOUSEENTER","CONTENT_AREA_MOUSELEAVE","OncoprintRenderer","track_cell_selections","track_cells","active_rule_set_rules","toolbar_container","label_div","label_drag_div","label_container","cell_container","cell_container_node","cell_div","legend_table","document_fragment","percent_altered_max_width","textWidth","getLabelFont","altered_data_percentage","cell_tooltip_html","content_area","LABEL_AREA_CONTAINER_CLASS","CELL_AREA_CONTAINER_CLASS","cell_column_highlight","COLUMN_HIGHLIGHT_CLASS","getCellAreaHeight","CELL_AREA_CLASS","cell_mouseover_div","calculateVisibleInterval","clipAndPositionCells","mouseMove","prev_track","prev_cell_index","prev_dom","column_highlight_timeout","highlighted_col_cells","qtip","my","at","viewport","window","classes","CELL_QTIP_CLASS","border","fixed","hover_cell","dom","finish","unhover_cell","clear_and_unhover","clearTimeout","cell","margin","mouseX","mouseY","track_cell_tops","getTrackCellTops","closest_track_dist","POSITIVE_INFINITY","closest_track","top","dist","cell_unit","cell_index","cell_id","track_cell","setTimeout","cells","hover","getTrackButtonCSSClass","stop","fadeTo","fadeOut","rule_sets","removeTrackCells","removeTrackLabels","removeTrackButtons","computeTrackCellTops","renderTrackLabels","renderTrackButtons","resizeLabelDiv","resizeCellDiv","drawCells","computeAlteredDataPercentage","renderLegend","resizeCells","LABEL_DRAGGING_CLASS","prototype","rule_set","getRuleSet","alteredData","num_altered","percent_altered","getAlteredDataPercentage","cell_ctr_rect","getBoundingClientRect","visible_interval","scrollLeft","right","left","getVisibleInterval","cellRenderTarget","document","createDocumentFragment","ready","getRuleSetId","getLabelDiv","getLabelDragDiv","getCellAreaWidth","getLabelAreaWidth","getLabelAreaHeight","div","getTrackLabelCSSSelector","render_whole_labels","label_tops","getTrackLabelTops","label_area_width","percent_altered_left","label_top","label_text","getTrackLabelCSSClass","disp_label_text","max_label_length","span","dragLabel","button_class","new_btn","imgs","descs","current_sort_setting","new_width","getCellCSSClass","getTrackCellCSSClass","drawTrackCells","fragment","cell_class","track_cell_class","bound_svg","apply","force","display_all","interval_width","interval_number","cell_x","getCellXArray","id_key","prev_interval_number","new_x","disp","new_disp","isNaN","exclude_from_legend","include_all","rendered","rule_set_id","active_rules","track_map","tr","label_header","getLegendLabel","legend_body_td","legend_div","getLegendDiv","d3SelectChildren","first_track","last_track","all_track_tops","track_tops","group_track_tops","label_area_height","drag_bounds","getRenderedTrackHeight","$label_drag_div","new_pos","moveHandler","stopPropagation","preventDefault","mouse_y","sortedIndex","mouseUpHandler","off","one","full_labels","root","offset","createElementNS","text_elt","font","weight","size","pos","cell_elt","cell_rect","cell_dim","g","appendD3SVGElement","outline_styles","trim","tagName","toLowerCase","elt","drawOncoprint","_state","split","MetadataController","colnames","dtTable","dataTable","paging","MarkersController","tmpdata","signal","over","out","edges","removeAll","cyChart","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","background-opacity","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","pan","chromosomes","chromosome","grabbable","locked","selectable","edgeType","sizeBdr","sizeEle","degree","sizeLbl","subType","q","c","showPopupSelection","optGeneSets","optGeneSet","optPatientLayouts","optPatientLayout","optPatientColors","optPatientColor","optCommandModes","optCommandMode","selectColor","filterModelEdge","vals","optEdgeColors","edge","cn","edgeToggle","deselectColor","lockPatients","lockGenes","lock","unselectify","selectify","abv","all","$fields","results","reset","resizeNodes","setOptions","worker","Worker","items","getElementById","collection","patients_resize","patients_delete","patients_insert","degrees","patients_color","patients_layout","patients_legend","legendNodes","genes_delete","genes_insert","genes_update","edges_delete","edges_insert","counts","total","edgeCounts","edges_update","options","postMessage","createOptions","opts","mode","collections","pt","colors","f","watches","needle","neighborhood","_private","LoginController","domains","hasError","landing","LandingController","history","HistoryController","initViewState","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","detail","initDataTable","columns","fn","DataTable","ext","settings","parseFloat","initEvents","applyFilter","o","init","defaultContent","$limit","help","HelpController","videos","img","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","genesettest","GenesettestController","cohort1","cohort2","message","optCohort1","optCohort2","calculateGeneSetScore","drawHeatMap2","expressionData","highcharts","chart","marginTop","marginBottom","plotBorderWidth","categories","lineWidth","lineColor","colorAxis","minColor","maxColor","verticalAlign","symbolHeight","formatter","series","point","borderWidth","summary","analysisData","footer","FooterController","DatasourceController","DataExplorerController","dataSources","dataDiseases","dataDisease","dataTables","dataFields","dataField","bar","bottom","showValues","valueFormat","axisLabel","axisLabelDistance","chartOptions","toolTipContentFunction","graph","xFunction","yFunction","diseases","tables","cohorts","CohortsController","selections","close","setSelection","isDragable","draggable","keypress","ctrlKey","keyCode","cohortBuilder","CohortBuilderController","chain","pluck","uniq","where","created","records","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","toParams","authenticate","run","routerConfig","$stateProvider","$urlRouterProvider","state","template","otherwise","constant","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-9481680f93.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'ui.bootstrap.contextMenu',\n            'nvd3',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            var vm = this;\n            osApi.query(\"lookup_oncoscape_tools\",{beta:false}).then(function(response){\n                vm.tools = response.data;\n            });\n\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            osApi.query(\"lookup_oncoscape_tools\",{beta:false}).then(function(response){\n                vm.tools = response.data;\n            });\n\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().disease\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osHistory, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.filters;\n                vm.filter;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[0];\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                selectedIds = d3Bars.selectAll(\".timeline-selected\")[0].map( function (p) { return p.__data__.id; }  )\n                if (selectedIds.length==0) selectedIds = d3Bars.selectAll()[0].map( function (p) { return p.__data__.id; }  )\n                osHistory.addPatientSelection(\"Timelines\", \"Manual Selection\",\n                    selectedIds\n                );\n                if (vm.optCohortMode.name==\"Filter\") draw();\n            }\n\n            var zoom;\n            var zoomed = function(){\n                if (d3.event.shiftKey) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                  brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var brushing = false;\n            var onBrushStart = function(){\n                if (!d3.event.sourceEvent.shiftKey) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }else{\n                    brushing = true;\n                }\n            }\n            var onBrush = function(){\n                if (!brushing) return;\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        d3.select(this.firstChild).classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                    });\n            }\n            var onBrushEnd = function(){\n                if (!brushing) return;\n                brushing = false;\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);    \n                saveSelected();\n            }\n\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]).nice();\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50).nice();\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                        \n                    // rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row',\n                            'width': 0,\n                            'height': hRow\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && selectedIds.length>0){\n                        rows\n                            .each( function(d){\n                                var selected = (selectedIds.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n                    var daysToUnit = function(d){\n                        if (Math.abs(d)==0) return d;\n                        if (Math.abs(d)<30) return d+\" Days\";\n                        if (Math.abs(d)<360) return Math.round( (d/30.4) * 10 ) / 10 + \" Months\";\n                        return Math.round( (d/365) * 10 ) / 10 + \" Years\";\n                    }\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(8);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return daysToUnit(Math.round((d<0 ? -1 : 1) * (Math.pow(2, (Math.abs(d)))-1) *100)/100);\n                        });\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return daysToUnit(d);\n                        });\n                    }\n\n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"class\": \"timeline-axis\",\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        if (vm.filter.name==\"Only Alive\" && patient.dead) return false;\n                        if (vm.filter.name==\"Only Dead\" && !patient.dead) return false;\n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter && this.ids){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':selectedIds});\n\n                    // Sort Patients On Align Property    \n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            if (a.dead==b.dead){\n                                return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                            }else{\n                                return (a.dead) ? 1 : -1;\n                            }\n                            \n                        }, sort);\n                    }else{\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                        }, sort);\n                    }\n\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients, dead){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                            if (d.name==\"Status\"){\n                                p.dead = (dead.indexOf(d.id)!=-1);\n                            }\n                            \n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts, response.payload.eventTypes.Status.status.Dead);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        vm.filters = [\n                            {name:'Alive + Dead'},\n                            {name:'Only Alive'},\n                            {name:'Only Dead'}\n                        ];\n                        vm.filter = vm.filters[0];\n\n\n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale', 'vm.filter'], draw);\n                        angular.element($window).bind('resize', draw);\n                        $scope.$watch(\"vm.optCohortMode\", draw );   // Triggers Inital Draw\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            draw();\n                        });\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, osHistory, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n\n            // Set Dataset \n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                // If No Patients Are Selected, Fetch All Patients\n                if (osHistory.getPatientSelection()==null){\n                    osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                        draw(response.payload.tbl.map( function (d) { return d[0]; }));\n                    });\n                }else{\n                    draw(osHistory.getPatientSelection().ids);\n                }\n            });\n\n            // Register History Component\n            osHistory.onPatientSelectionChange.add(function(selection){\n                draw(selection.ids)\n            });\n\n            // Draw\n            var draw = function(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                    angular.element(\"#survival-img\").attr('src',r.payload);\n                    osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    //'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSummary', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/summary/summary.html',\n            scope: {},\n            controller: SummaryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SummaryController(osApi, osHistory, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;            \n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                var selected  = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ \n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n                \n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400; \n                    if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                        width += 300;\n                    } \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.search = \"\";\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".pca-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addPatientSelection(\"PCA\", \"Manual Selection\",\n                    d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node) {\n                        return node.__data__.id.toUpperCase();\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length==0) {\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[0].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSets.unshift(\"All\");\n                        vm.geneSet = vm.geneSets[0];\n\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            vm.search = \"\";\n                            setSelected();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA((vm.geneSet==\"All\") ? null : vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                \n                width = $window.innerWidth - 400;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    width += 300;\n                } \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                        saveSelected();\n                    });\n\n                d3Chart.call(brush);\n\n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) {\n                    return d;\n                });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\": width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n                setSelected();\n            }\n\n            vm.resize = function() {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osHistory, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            var markersNetwork;\n            var vm = this;\n            \n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            // History Integration\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            \n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"render_pathways\").then(function(result){\n                markersNetwork = result.data[0];\n            \n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('select', 'node', _.debounce(saveSelected, 300))\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            $scope.$apply(function() {\n                                 vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            /* Open Multiple Windows - Hamid Recommended We Remove\n                            links =[\n                                { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                                { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                                { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                                { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                            ];\n                            $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                            $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n                            */\n                            angular.element('#gbm-webpage').modal();\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid );\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n                    // Register History Component\n                    osHistory.onGeneSelectionChange.add(function(selection){\n                        selectedIds = selection.ids;\n                        setSelected();\n                    });\n                    setSelected();\n                    osApi.setBusy(false);\n                });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n        function beep() { _beep.play(); }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = {};\n        // new SockJS(\n        //     $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n        //     {\n        //         'debug': false,\n        //         'devel': false\n        //     }\n        // );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \":\" + (($location.port() == \"3000\") ? 80 : $location.port()) + '/api/'\n         //var url = $location.protocol() + \"://\" + $location.host() + \":80/api/\";\n\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/?q=\"+encodeURIComponent(JSON.stringify(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n            return $http({\n                 method: 'GET',\n                 //cache: true,\n                 url: queryString(req)\n             });\n         };\n\n         // Return Object\n         return {\n            queryString: queryString,\n            query: query\n         };\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osHistory', osHistory);\n\n    /** @ngInject */\n    function osHistory(moment, signals, osSound, _) {\n\n        //var _historyMax = 100;\n        var _geneSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _geneIndex = 0;\n        var _patientSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _patientIndex = 0;\n        var _onPatientAdd = new signals.Signal();\n        var _onPatientSelectionChange = new signals.Signal();\n        var _onGeneAdd = new signals.Signal();\n        var _onGeneSelectionChange = new signals.Signal();\n       \n        /* Gene */\n        var setGeneSelection = function(selection){\n            var index = _geneSelections.indexOf(selection);\n            if (index>=0){\n                _geneIndex = index\n                _onGeneSelectionChange.dispatch(getGeneSelection())\n            }\n        };\n        var getGeneSelections = function(){\n            return _geneSelections;\n        };\n        var getGeneSelection = function(){\n            if (_geneIndex<0) _geneIndex = 0;\n            if (_geneIndex>=_geneSelections.length) _geneIndex = _geneSelections.length-1;\n            return _geneSelections[_geneIndex];\n        };\n        var addGeneSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getGeneSelection().ids.length){\n                if (_.difference(ids, getGeneSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _geneSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _geneIndex += _geneSelections.length-1;\n            _onGeneAdd.dispatch(getGeneSelection())\n        };\n        var getGeneSelectionLast = function(){\n            _geneIndex -= 1;\n            if (_geneIndex<0) { \n                osSound.beep();\n                _geneIndex = 0; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getGeneSelectionNext = function(){\n            _geneIndex += 1;\n            if (_geneIndex==_geneSelections.length) { \n                osSound.beep();\n                _geneIndex = _geneSelections.length-1; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n        /* Patient */\n        var setPatientSelection = function(selection){\n            var index = _patientSelections.indexOf(selection);\n            if (index>=0){\n                _patientIndex = index\n                _onPatientSelectionChange.dispatch(getPatientSelection())\n            }\n        };\n        var getPatientSelections = function(){\n            return _patientSelections;\n        };\n        var getPatientSelection = function(){\n            if (_patientIndex<0) _patientIndex = 0;\n            if (_patientIndex>=_patientSelections.length) _patientIndex = _patientSelections.length-1;\n            return _patientSelections[_patientIndex];\n        };\n        var addPatientSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getPatientSelection().ids.length){\n                if (_.difference(ids, getPatientSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _patientSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _patientIndex = _patientSelections.length-1;\n            _onPatientAdd.dispatch(getPatientSelection());\n        };\n        var getPatientSelectionLast = function(){\n            _patientIndex -= 1;\n            if (_patientIndex<0) { \n                osSound.beep();\n                _patientIndex = 0; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getPatientSelectionSecondLast = function(){\n            /*\n            var i = _patientSelections.indexOf(_patientSelection) - 2;\n            if (i<1){\n                osSound.beep();\n                return null;\n            } \n            _patientSelection = _patientSelections[i];\n            return _patientSelection;\n            */\n        };\n        var getPatientSelectionNext = function(){\n            _patientIndex += 1;\n            if (_patientIndex==_patientSelections.length) { \n                osSound.beep();\n                _patientIndex = _patientSelections.length-1; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n\n        var removeListeners = function(){\n          \n        };\n        var clear = function(){\n           \n        };\n\n\n        var api = {\n            onPatientAdd: _onPatientAdd,\n            onPatientSelectionChange: _onPatientSelectionChange,\n            onGeneAdd: _onGeneAdd,\n            onGeneSelectionChange: _onGeneSelectionChange,\n\n            addGeneSelection: addGeneSelection,\n            setGeneSelection: setGeneSelection,\n            getGeneSelection: getGeneSelection,\n            getGeneSelections: getGeneSelections,\n            getGeneSelectionLast: getGeneSelectionLast,\n            getGeneSelectionNext: getGeneSelectionNext,\n\n            addPatientSelection: addPatientSelection,\n            setPatientSelection: setPatientSelection,\n            getPatientSelection: getPatientSelection,\n            getPatientSelections: getPatientSelections,\n            getPatientSelectionNext: getPatientSelectionNext,\n            getPatientSelectionLast: getPatientSelectionLast,\n            getPatientSelectionSecondLast: getPatientSelectionSecondLast,\n            \n            removeListeners: removeListeners,\n            clear: clear\n        };\n\n        return api;\n    }\n})();\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, osHttp, $http, signals, $location) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n\n        // State\n        var _dataSources;\n        var _dataSource;\n        function getDataSources(){\n            return _dataSources;\n        }\n        function getDataSource(value){ \n            return _dataSource; \n        }\n        function setDataSource(value){\n            \n            if (typeof(value)===\"object\"){\n                if (_dataSource != value) onDataSource.dispatch(_dataSource);\n                _dataSource = value;\n            }else if (typeof(value)===\"string\"){\n                if (_dataSource.disease!=value){\n                    if (_dataSource != value) onDataSource.dispatch(_dataSource);\n                    _dataSource = _dataSources.filter(function(v){ v.disease==disease}, {key:value})[0]\n                }\n            }\n        }\n\n        query(\"lookup_oncoscape_datasources\",{beta:false}).then(function(response){ \n            _dataSources = response.data; \n                            \n        });\n        \n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3000\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;                        \n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        function getTools(){\n        }\n        \n        function queryString(table, query){\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        }\n        function query(table, query){\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        }\n\n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n            \n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n        function getGeneSetTest(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createGeneSetTest\",\n                payload: payload\n            });\n        }\n        function getGeneSetScore(Group1, Group2, geneSet) {\n            return osSocket.request({\n                cmd: \"geneSetScoreTest\",\n                payload: {\n                    group1: Group1,\n                    group2: Group2, \n                    geneset: geneSet\n                }\n            });\n        }\n\n\n\n        return {\n\n            // Mongo V\n            query: query,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            onDataSource: onDataSource,\n\n            // Legacy\n            getTools: getTools,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint,\n            getGeneSetTest: getGeneSetTest,\n            getGeneSetScore: getGeneSetScore\n        }\n    }\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elControl = angular.element(\"#oncoprintControlsDiv\");\n            var elInstructions = angular.element(\"#oncoprintInstructions\");\n            var elErrors = angular.element(\"#oncoprintErrorSection\");\n            var elLegend = angular.element(\"#legend\");\n            var d3Chart = d3.select(\"#onc\");\n            \n            // History Integration\n            var selectedPatientIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            var selectedGeneIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            \n            \n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneAndPatients = selectedPatientIds + \",\" + selectedGeneIds;\n            vm.errorMessage;\n\n            \n\n            var Oncoprint = (function() {\n              var events = oncoprint_events;\n              var utils = oncoprint_utils;\n              var RuleSet = oncoprint_RuleSet;\n\n              var defaultOncoprintConfig = {\n                cell_width: 6,\n                cell_padding: 2.5,\n                legend: true,\n              };\n\n              var hiddenOncoprintConfig = {\n                pre_track_padding: 0,\n              };\n\n              var defaultTrackConfig = {\n                label: 'Gene',\n                datum_id_key: 'patient',\n                cell_height: 23,\n                track_height: 20,\n                track_padding: 5,\n                sort_cmp: undefined,\n                tooltip: function(d) {\n                  return d['patient'];\n                },\n                removable: false,\n                sort_direction_changable: false\n              }; \n\n\n\n              function Oncoprint(config) {\n                var self = this;\n                var getTrackId = utils.makeIdCounter();\n\n                self.config = config;\n\n                self.id_order = [];\n                self.inverted_id_order = {};\n                self.visible_id_order = [];\n                self.visible_inverted_id_order = {};\n                self.hidden_ids = {};\n                self.track_groups = [[],[]];\n                self.track_group_sort_order = [0,1];\n                self.sort_direction = {};\n                self.tracks = {};\n                self.sort_config = {type: 'track'};\n\n                self.cell_padding_on = true;\n                self.true_cell_width = config.cell_width;\n\n                self.zoomed_cell_width = self.true_cell_width;\n                self.zoom = 1;\n\n                // Cell Padding\n                self.toggleCellPadding = function() {\n                  self.cell_padding_on = !self.cell_padding_on;\n                  $(self).trigger(events.SET_CELL_PADDING);\n                };\n                self.getCellPadding = function() {\n                  return Math.ceil(self.config.cell_padding*self.getZoom())*(+self.cell_padding_on);\n                };\n\n                // Zoom\n                self.getZoom = function() {\n                  return self.zoom;\n                };\n                self.setZoom = function(z) {\n                  self.zoom = utils.clamp(z, 0, 1);\n                  updateZoomedCellWidth();\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                var updateZoom = function() {\n                  // maps {1, ... , true_cell_width} to [0,1]\n                  self.zoom = (self.zoomed_cell_width-1)/(self.true_cell_width - 1);\n                };\n                var updateZoomedCellWidth = function() {\n                  // maps [0,1] to {1, ... , true_cell_width}\n                  self.zoomed_cell_width = Math.round(self.zoom*(self.true_cell_width-1) + 1);\n                };\n                self.increaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width+1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                self.decreaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width-1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n\n                // Cell Width\n                self.getFullCellWidth = function() {\n                  return self.true_cell_width;\n                };\n                self.getZoomedCellWidth = function() {\n                  return self.zoomed_cell_width;\n                };\n\n                // Cell Height\n                self.getCellHeight = function(track_id) {\n                  return self.tracks[track_id].config.cell_height;\n                };\n\n                // Track Height\n                self.getTrackHeight = function(track_id) {\n                  return self.tracks[track_id].config.track_height;\n                };\n\n                // Track Padding\n                self.getTrackPadding = function(track_id) {\n                  return self.tracks[track_id].config.track_padding;\n                };\n\n                // Id Order\n                self.getFilteredIdOrder = function(data_filter_fn, track_ids) {\n                  var tracks = track_ids || self.getTracks();\n                  return _.filter(self.id_order, function(id) {\n                    var d = _.map(tracks, function(track_id) {\n                      return self.getTrackDatum(track_id, id);\n                    });\n                    return data_filter_fn(d);\n                  });\n                };\n                self.getIdOrder = function() {\n                  return self.id_order;\n                };\n                self.getInvertedIdOrder = function() {\n                  return self.inverted_id_order;\n                };\n                self.getVisibleIdOrder = function() {\n                  return self.visible_id_order;\n                };\n                self.getVisibleInvertedIdOrder = function() {\n                  return self.visible_inverted_id_order;\n                };\n                var updateVisibleIdOrder = function() {\n                  self.visible_id_order = _.filter(self.id_order, function(id) {\n                    return !self.hidden_ids[id];\n                  });\n                  self.visible_inverted_id_order = utils.invert_array(self.visible_id_order);\n                  $(self).trigger(events.SET_VISIBLE_ID_ORDER);\n                };\n                self.setIdOrder = function(id_order) {\n                  self.id_order = id_order.slice();\n                  self.inverted_id_order = utils.invert_array(self.id_order);\n                  updateVisibleIdOrder();\n                  $(self).trigger(events.SET_ID_ORDER);\n                };\n                // Hide Ids\n                self.hideIds = function(ids, clear_existing) {\n                  if (clear_existing) {\n                    self.hidden_ids = {};\n                  }\n                  _.each(ids, function(id) {\n                    self.hidden_ids[id] = true;\n                  });\n                  updateVisibleIdOrder();\n                };\n                self.showIds = function(ids) {\n                  if (!ids) {\n                    self.hidden_ids = {};\n                  } else {\n                    _.each(ids, function(id) {\n                      delete self.hidden_ids[id];\n                    });\n                  }\n                  updateVisibleIdOrder();\n                };\n\n                // Sorting\n                self.getTopmostTrack = function() {\n                  return (self.track_groups[0].length > 0 ? self.track_groups[0][0] : self.track_groups[1][0]);\n                };\n                self.setTrackSortComparator = function(track_id, cmp) {\n                  self.tracks[track_id].config.sort_cmp = cmp;\n                };\n                self.getTrackSortComparator = function(track_id) {\n                  return self.tracks[track_id].config.sort_cmp;\n                };\n                self.getTrackSortDirection = function(track_id) {\n                  return self.sort_direction[track_id];\n                };\n                self.setTrackSortDirection = function(track_id, dir) {\n                  self.sort_direction[track_id] = dir;\n                  self.sort();\n                };\n                self.setTrackGroupSortOrder = function(order) {\n                  self.track_group_sort_order = order.slice();\n                };\n                self.getTrackGroupSortOrder = function() {\n                  return self.track_group_sort_order.slice();\n                };\n                self.getTrackSortOrder = function() {\n                  var ret = [];\n                  var track_groups = self.getTrackGroups();\n                  _.each(self.getTrackGroupSortOrder(), function(group_id) {\n                    ret = ret.concat(track_groups[group_id]);\n                  });\n                  return ret;\n                };\n                self.setSortConfig = function(config) {\n                  self.sort_config = config;\n                };\n                var sortById = function(desc) {\n                  var ret = _.sortBy(self.getIdOrder(), _.identity);\n                  if (desc) {\n                    ret.reverse();\n                  }\n                  self.setIdOrder(ret);\n                };\n                var sortByTrack = function() {\n                  var track_id_list = self.getTrackSortOrder();\n                  var cmp_list = _.map(track_id_list, function(track_id) { \n                    return self.getTrackSortComparator(track_id);\n                  });\n                  var data = {};\n                  var id_order = self.getIdOrder();\n                  _.each(id_order, function(id) {\n                    data[id] = {};\n                    _.each(track_id_list, function(track_id) {\n                      data[id][track_id] = self.getTrackDatum(track_id, id);\n                    });\n                  });\n                  var lexicographically_ordered_cmp = function(id1,id2) {\n                    var cmp_result = 0;\n                    for (var i=0, _len = track_id_list.length; i<_len; i++) {\n                      var track_id = track_id_list[i];\n                      var cmp = cmp_list[i];\n                      var d1 = data[id1][track_id];\n                      var d2 = data[id2][track_id];\n                      var d1_undef = (typeof d1 === \"undefined\");\n                      var d2_undef = (typeof d2 === \"undefined\");\n                      if (!d1_undef && !d2_undef) {\n                        cmp_result = cmp(d1, d2);\n                      } else if (d1_undef && d2_undef) {\n                        cmp_result = 0;\n                      } else if (d1_undef) {\n                        cmp_result = 1;\n                      } else {\n                        cmp_result = -1;\n                      }\n                      if (isFinite(cmp_result)) {\n                        // reverse direction unless infinite, which is a signal that an NA is involved\n                        cmp_result *= self.sort_direction[track_id];\n                      }\n                      if (cmp_result !== 0) {\n                        break;\n                      }\n                    }\n                    return cmp_result;\n                  };\n                  self.setIdOrder(utils.stableSort(self.getIdOrder(), lexicographically_ordered_cmp));\n                };\n                self.sort = function() {\n                  var config = self.sort_config;\n                  if (config.type === 'track') {\n                    sortByTrack();\n                  } else if (config.type === 'id') {\n                    sortById(config.desc);\n                  }\n                };\n\n                // Track Creation/Destruction\n                self.addTrack = function(config, group) {\n                  group = utils.ifndef(group, 1);\n                  var track_id = getTrackId();\n                  self.tracks[track_id] ={id: track_id, \n                        data: [], \n                        config: $.extend({}, defaultTrackConfig, config),\n                        id_data_map: {}};\n                  self.track_groups[group].push(track_id);\n                  self.sort_direction[track_id] = 1;\n\n                  $(self).trigger(events.ADD_TRACK, {track_id: track_id});\n                  return track_id;\n                };\n                self.removeTrack = function(track_id) {\n                  var track = self.tracks[track_id];\n                  delete self.tracks[track_id];\n                  delete self.sort_direction[track_id];\n\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  } else {\n                    var old_position = track_group.indexOf(track_id);\n                    track_group.splice(old_position, 1);\n\n                    $(self).trigger(events.REMOVE_TRACK, {track: track, track_id: track_id});\n                    return true;  \n                  }\n                };\n\n                // Track Ordering\n                self.getTrackGroups = function(reference) {\n                  return (reference === true ? self.track_groups : $.extend(true, [], self.track_groups));      \n                };\n                self.getTracks = function() {\n                  return _.flatten(self.getTrackGroups());\n                };\n                self.getContainingTrackGroup = function(track_id, reference) {\n                  var group = false;\n                  _.find(self.track_groups, function(grp) {\n                    if (grp.indexOf(track_id) > -1) {\n                      group = grp;\n                      return true;\n                    }\n                    return false;\n                  });\n                  return (reference === true ? group : group.slice());\n                };\n                self.moveTrack = function(track_id, new_position) {\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  }\n                  var old_position = track_group.indexOf(track_id);\n                  new_position = utils.clamp(new_position, 0, track_group.length-1);\n                  track_group.splice(old_position, 1);\n                  track_group.splice(new_position, 0, track_id);\n                  var moved_tracks = track_group.slice(Math.min(old_position, new_position), Math.max(old_position, new_position) + 1);\n                  $(self).trigger(events.MOVE_TRACK, {moved_tracks: moved_tracks});\n                };\n\n\n                // Track Label\n                self.getTrackLabel = function(track_id) {\n                  return self.tracks[track_id].config.label;\n                };\n\n                // Track Tooltip\n                self.getTrackTooltip = function(track_id) {\n                  return self.tracks[track_id].config.tooltip;\n                };\n                self.setTrackTooltip = function(track_id, tooltip) {\n                  self.tracks[track_id].config.tooltip = tooltip;\n                };\n\n                // Track Data\n                self.getTrackData = function(track_id) {\n                  return self.tracks[track_id].data;\n                };\n                self.setTrackData = function(track_id, data) {\n                  var id_accessor = self.getTrackDatumIdAccessor(track_id);\n\n                  self.tracks[track_id].data = data;\n\n                  var current_id_order = self.getIdOrder();\n                  var current_inverted_id_order = self.getInvertedIdOrder();\n                  _.each(_.map(data, id_accessor), function(id) {\n                    if (!(id in current_inverted_id_order)) {\n                      current_id_order.push(id);\n                    }\n                  });\n                  self.setIdOrder(current_id_order);\n                  \n                  self.tracks[track_id].id_data_map = {};\n                  var id_data_map = self.tracks[track_id].id_data_map;\n                  _.each(self.tracks[track_id].data, function(datum) {\n                    id_data_map[id_accessor(datum)] = datum;\n                  });\n                  $(self).trigger(events.SET_TRACK_DATA, {track_id: track_id});\n                };\n                self.getTrackDatum = function(track_id, datum_id) {\n                  return self.tracks[track_id].id_data_map[datum_id];\n                };\n                self.getTrackDatumDataKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_data_key;\n                };\n\n                // Track Datum Id\n                self.getTrackDatumIdAccessor = function(track_id) {\n                  var key = self.getTrackDatumIdKey(track_id);\n                  return function(d) {\n                    return d[key];\n                  };\n                };\n                self.getTrackDatumIdKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_id_key;\n                };\n                self.setTrackDatumIdKey = function(track_id, key) {\n                  self.tracks[track_id].config.datum_id_key = key;\n                };\n\n                // Track info\n                self.isTrackRemovable = function(track_id) {\n                  return self.tracks[track_id].config.removable;\n                };\n                self.isTrackSortDirectionChangable = function(track_id) {\n                  return self.tracks[track_id].config.sort_direction_changable;\n                };\n\n                // Clearing\n                self.clearData = function() {\n                  _.each(self.getTracks(), function(track_id) {\n                    self.setTrackData(track_id, []);\n                  });\n                  self.setIdOrder([]);\n                }\n              }\n\n              return { \n                CATEGORICAL_COLOR: RuleSet.CATEGORICAL_COLOR,\n                GRADIENT_COLOR: RuleSet.GRADIENT_COLOR,\n                GENETIC_ALTERATION: RuleSet.GENETIC_ALTERATION,\n                BAR_CHART: RuleSet.BAR_CHART,\n                create: function CreateOncoprint(container_selector_string, config) {\n                  config = $.extend({}, defaultOncoprintConfig, config || {});\n                  config = $.extend(config, hiddenOncoprintConfig);\n                  var oncoprint = new Oncoprint(config);\n                  var renderer = new OncoprintSVGRenderer(container_selector_string, oncoprint, {label_font: 'Arial', legend:config.legend});\n                  var ret = {\n                    onc_dev: oncoprint,\n                    ren_dev: renderer,\n                    addTrack: function(config, group) {\n                      var track_id = oncoprint.addTrack(config, group);\n                      return track_id;\n                    },\n                    removeTrack: function(track_id) {\n                      oncoprint.removeTrack(track_id);\n                    },\n                    moveTrack: function(track_id, position) {\n                      oncoprint.moveTrack(track_id, position);\n                    },\n                    setTrackDatumIdKey: function(track_id, key) {\n                      oncoprint.setTrackDatumIdKey(track_id, key);\n                    },\n                    setTrackData: function(track_id, data) {\n                      oncoprint.setTrackData(track_id, data);\n                    },\n                    setRuleSet: function(track_id, type, params) {\n                      renderer.setRuleSet(track_id, type, params);\n                    },\n                    useSameRuleSet: function(target_track_id, source_track_id) {\n                      renderer.useSameRuleSet(target_track_id, source_track_id);\n                    },\n                    toggleCellPadding: function() {\n                      oncoprint.toggleCellPadding();\n                    },\n                    toSVG: function() {\n                      return renderer.toSVG();\n                    },\n                    setTrackGroupSortOrder: function(order) {\n                      oncoprint.setTrackGroupSortOrder(order);\n                    },\n                    sort: function() {\n                      oncoprint.sort();\n                    },\n                    setSortConfig: function(config) {\n                      oncoprint.setSortConfig(config);\n                    },\n                    setIdOrder: function(id_order) {\n                      oncoprint.setIdOrder(id_order);\n                    },\n                    getTrackSortDirection: function(track_id) {\n                      return oncoprint.getTrackSortDirection(track_id);\n                    },\n                    setTrackSortDirection: function(track_id, dir) {\n                      oncoprint.setTrackSortDirection(track_id, dir);\n                    },\n                    setZoom: function(z) {\n                      return oncoprint.setZoom(z);\n                    },\n                    increaseZoom: function() {\n                      return oncoprint.increaseZoom();\n                    },\n                    decreaseZoom: function() {\n                      return oncoprint.decreaseZoom();\n                    },\n                    suppressRendering: function() {\n                      renderer.suppressRendering();\n                    },\n                    releaseRendering: function() {\n                      renderer.releaseRendering();\n                    },\n                    setLegendVisible: function(track_ids, visible) {\n                      renderer.setLegendVisible(track_ids, visible);\n                    },\n                    getFilteredIdOrder: function(data_filter_fn, track_ids) {\n                      return oncoprint.getFilteredIdOrder(data_filter_fn, track_ids);\n                    },\n                    getVisibleIdOrder: function() {\n                      return oncoprint.getVisibleIdOrder();\n                    },\n                    hideIds: function(ids) {\n                      oncoprint.hideIds(ids);\n                    },\n                    showIds: function(ids) {\n                      oncoprint.showIds(ids);\n                    },\n                    clearData: function() {\n                      oncoprint.clearData();\n                    },\n                    setTrackTooltip: function(track_id, tooltip) {\n                      oncoprint.setTrackTooltip(track_id, tooltip);\n                    }\n                  };\n                  $(oncoprint).on(events.MOVE_TRACK, function() {\n                    $(ret).trigger(events.MOVE_TRACK);\n                  });\n                  $(renderer).on(events.FINISHED_RENDERING, function() {\n                    $(ret).trigger(events.FINISHED_RENDERING);\n                  });\n                  $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                    $(ret).trigger(events.REMOVE_TRACK, {track_id: data.track_id});\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSEENTER, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSEENTER);\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSELEAVE, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSELEAVE);\n                  });\n                  return ret;\n                }\n              };\n            })();\n          \n            var OncoprintSVGRenderer = (function() {\n                  var events = oncoprint_events;\n                  var utils = oncoprint_utils;\n\n                  var TOOLBAR_CONTAINER_CLASS = 'oncoprint-toolbar-ctr';\n                  var LABEL_AREA_CONTAINER_CLASS = 'oncoprint-label-area-ctr';\n                  var CELL_AREA_CONTAINER_CLASS = 'oncoprint-cell-area-ctr';\n                  var CELL_AREA_CLASS = 'oncoprint-cell-area';\n                  var COLUMN_HIGHLIGHT_CLASS = 'oncoprint-column-highlight'\n                  \n                  var CELL_HOVER_CLASS = 'oncoprint-cell-hover';\n                  var LEGEND_HEADER_CLASS = 'oncoprint-legend-header';\n                  var LABEL_DRAGGING_CLASS = 'oncoprint-label-dragging';\n                  var LABEL_DRAGGABLE_CLASS = 'oncoprint-label-draggable';\n                  var CELL_QTIP_CLASS = 'oncoprint-cell-qtip';\n\n                  function OncoprintSVGRenderer(container_selector_string, oncoprint, config) {\n                    OncoprintRenderer.call(this, oncoprint, config);\n                    var self = this;\n                    this.track_cell_selections = {};\n                    this.track_cells = {};\n                    this.active_rule_set_rules = {};\n                    this.toolbar_container;\n                    this.label_div;\n                    this.label_drag_div;\n                    this.label_container;\n                    this.cell_container;\n                    this.cell_container_node;\n                    this.cell_div;\n                    this.legend_table;\n                    this.document_fragment;\n                    this.percent_altered_max_width = utils.textWidth('100%', self.getLabelFont());\n                    this.altered_data_percentage = {};\n                    \n                    this.cell_tooltip_html = '';\n\n                    this.container = d3.select(container_selector_string);\n                    this.container.classed('noselect', true).selectAll('*').remove();\n                    this.container.append('br');\n                    (function initLegend() {\n                      if (config.legend) {\n                        self.legend_table = d3.select(container_selector_string).append('table').style('border-collapse', 'collapse');\n                      }\n                    })();\n                    var content_area = d3.select(container_selector_string).append('div').classed('oncoprint-content-area', true);\n                    (function initLabelContainer() {\n                      self.label_container = content_area.append('div').classed(LABEL_AREA_CONTAINER_CLASS, true).style('position', 'relative');\n                      self.label_div = self.label_container.append('div').style('position', 'relative').style('overflow', 'hidden');\n                      self.label_drag_div = self.label_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px')\n                              .style('display','none');\n                    })();\n                    (function initCellContainer() {\n                      self.cell_container = content_area.append('div').classed(CELL_AREA_CONTAINER_CLASS, true);\n                      self.cell_column_highlight = self.cell_container.append('div').classed(COLUMN_HIGHLIGHT_CLASS, true)\n                            .style('height', self.getCellAreaHeight())\n                            .style('visibility', 'hidden');\n\n                      self.cell_container_node = self.cell_container.node();\n                      self.cell_div = self.cell_container.append('div').classed(CELL_AREA_CLASS, true);\n\n                    \n                      self.cell_mouseover_div = self.cell_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px');\n                      self.cell_container_node.addEventListener(\"scroll\", function() {\n                        self.calculateVisibleInterval();\n                        self.clipAndPositionCells();\n                      });\n                      var mouseMove, mouseOut;\n                      (function() {\n                        var prev_track, prev_cell_index, prev_dom, highlighted_col_cells = [];\n                        var column_highlight_timeout;\n                        $(self.cell_div.node()).qtip({\n                          content: 'SHARED QTIP',\n                          position: {target: 'event', my:'bottom middle', at:'top middle', viewport: $(window)},\n                          style: { classes: CELL_QTIP_CLASS, border: 'none'},\n                          show: {event: \"cell-mouseover\"},\n                          hide: {fixed: true, delay: 100, event: \"cell-mouseout\"},\n                          events: {\n                            show: function() {\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            },\n                            render: function(){\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            }\n                          }\n                        });\n                        var hover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseover\");\n                        };\n                        var unhover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseout\");\n                        };\n                        var clear_and_unhover = function() {\n                          prev_track = undefined;\n                          prev_cell_index = undefined;\n                          prev_dom && unhover_cell(prev_dom);\n                          prev_dom = undefined;\n                          //self.cell_column_highlight.style('visibility', 'hidden');\n                          column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                          _.each(highlighted_col_cells, function(cell) {\n                            if (cell) {\n                              cell.style.border = '';\n                              cell.style.margin = '';\n                            }\n                          });\n                          highlighted_col_cells = [];\n                        };\n                        mouseOut = function() {\n                          clear_and_unhover();\n                        };\n                        mouseMove = function(evt) {\n                          var mouseX = utils.mouseX(evt);\n                          var mouseY = utils.mouseY(evt);\n                          var track_cell_tops = self.getTrackCellTops();\n                          var track = (function() {\n                            var closest_track_dist = Number.POSITIVE_INFINITY;\n                            var closest_track = undefined;\n                            _.each(track_cell_tops, function(top, track_id) {\n                              var dist = mouseY - top;\n                              if (dist >= 0 && dist < closest_track_dist) {\n                                closest_track_dist = dist;\n                                closest_track = track_id;\n                              }\n                            });\n                            return closest_track;\n                          })();\n                          if (!track) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var track_height = oncoprint.getCellHeight(track);\n                          if (mouseY > track_cell_tops[track] + track_height) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var cell_width = oncoprint.getZoomedCellWidth();\n                          var cell_unit = cell_width + oncoprint.getCellPadding();\n                          if (mouseX % cell_unit > cell_width) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          // at this point, we are hovered over a cell position\n                          var cell_index = Math.floor(mouseX / cell_unit);\n                          if (cell_index !== prev_cell_index || track !== prev_track) {\n                            //self.cell_column_highlight.style('visibility', 'hidden');\n                            column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                            // not the same cell as before\n                            clear_and_unhover();\n                            var cell_id = oncoprint.getVisibleIdOrder()[cell_index];\n                            var track_cell = self.track_cells[track][cell_id];\n                            if (!track_cell) {\n                              // track doesn't have a cell there\n                              return;\n                            }\n                            // otherwise, we're over a cell\n                            $('.'+CELL_QTIP_CLASS).finish().hide();\n                            prev_cell_index = cell_index;\n                            prev_track = track;\n                            prev_dom = track_cell.dom;\n                            self.cell_tooltip_html = oncoprint.getTrackTooltip(track)(track_cell.d);\n                            hover_cell(prev_dom);\n                            column_highlight_timeout = setTimeout(function() {\n                              highlighted_col_cells = _.map(self.track_cells, function(cells, track_id) {\n                                var cell = cells[cell_id].dom;\n                                if (cell) {\n                                  if (track_id === track) {\n                                    cell.style.border = \"1px solid #000000\";\n                                    cell.style.margin = \"-1px\";\n                                  } else {\n                                    cell.style.border = \"1px solid #999999\";\n                                    cell.style.margin = \"-1px\";\n                                  }\n                                }\n                                return cell;\n                              });\n                            }, 200);\n                          }\n                        };\n                      })();\n                      self.cell_mouseover_div.node().addEventListener('mousemove', mouseMove);\n                      self.cell_mouseover_div.node().addEventListener('mouseout', mouseOut);\n                      // TODO: magic number\n                      self.cell_div.style('max-width', '1000px');\n                    })();\n                    $(content_area.node()).hover(function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeTo(80,1);\n                    }, function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeOut(500);\n                    });\n                    \n                    (function reactToOncoprint() {\n                      $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                        var track_id = data.track_id;\n                        delete self.rule_sets[track_id];\n                        delete self.track_cell_selections[track_id];\n                        delete self.altered_data_percentage[track_id];\n                        self.removeTrackCells(track_id);\n                        self.removeTrackLabels(track_id);\n                        self.removeTrackButtons(track_id);\n                        \n                        self.computeTrackCellTops();\n                        //self.renderLegend();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        self.resizeCellDiv();\n                        oncoprint.sort();\n                      });\n                      $(oncoprint).on(events.MOVE_TRACK, function(evt, data) {\n                        self.computeTrackCellTops();\n                        self.clipAndPositionCells(data.moved_tracks, 'top', true);\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        oncoprint.sort();\n                      });\n\n                      $(oncoprint).on(events.ADD_TRACK, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(undefined, 'top', true);\n                        self.computeTrackCellTops();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        //self.clipCells(true, d.track_id);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n                      $(oncoprint).on(events.SET_TRACK_DATA, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(d.track_id, undefined, true);\n                        self.computeAlteredDataPercentage(d.track_id);\n                        self.renderTrackLabels(d.track_id);\n                        self.resizeCellDiv();\n                        self.renderLegend();\n                        //self.clipCells(true);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n\n                      $(oncoprint).on(events.SET_CELL_PADDING, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n\n                      $(oncoprint).on(events.SET_ZOOM, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCells();\n                        self.resizeCellDiv();\n                        //self.cell_highlight.style('width', oncoprint.getZoomedCellWidth() + 'px');\n                      });\n\n                      $(oncoprint).on(events.SET_VISIBLE_ID_ORDER, function() {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n                    })();\n                  }\n                  utils.extends(OncoprintSVGRenderer, OncoprintRenderer);\n                  OncoprintSVGRenderer.prototype.computeAlteredDataPercentage = function(track_id) {\n                    var rule_set = this.getRuleSet(track_id);\n                    if (rule_set && rule_set.alteredData) {\n                      var data = this.oncoprint.getTrackData(track_id);\n                      var num_altered = rule_set.alteredData(data).length;\n                      var percent_altered = Math.floor(100 * num_altered / data.length);\n                      this.altered_data_percentage[track_id] = percent_altered;\n                    }\n                  };\n                  OncoprintSVGRenderer.prototype.getAlteredDataPercentage = function(track_id) {\n                    return this.altered_data_percentage[track_id];\n                  };\n                  OncoprintSVGRenderer.prototype.calculateVisibleInterval = function() {\n                    var cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n                    var cell_ctr_rect = this.cell_container_node.getBoundingClientRect();\n                    this.visible_interval = [this.cell_container_node.scrollLeft, this.cell_container_node.scrollLeft + cell_ctr_rect.right - cell_ctr_rect.left];\n                    return this.visible_interval;\n                  };\n                  OncoprintSVGRenderer.prototype.getVisibleInterval = function() {\n                    return (this.visible_interval || this.calculateVisibleInterval());\n                  };\n                  OncoprintSVGRenderer.prototype.cellRenderTarget = function() {\n                    return d3.select(this.document_fragment || this.cell_div.node());\n                  };\n                  OncoprintSVGRenderer.prototype.suppressRendering = function() {\n                    this.document_fragment = document.createDocumentFragment();\n                  };\n                  OncoprintSVGRenderer.prototype.releaseRendering = function() {\n                    this.cell_div.node().appendChild(this.document_fragment);\n                    this.document_fragment = undefined;\n                    var self = this;\n                    $(this.cell_div.node()).ready(function() {\n                      self.resizeCells();\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    });\n                  };\n                  // Rule sets\n                  OncoprintSVGRenderer.prototype.setRuleSet = function(track_id, type, params) {\n                    OncoprintRenderer.prototype.setRuleSet.call(this, track_id, type, params);\n                    this.active_rule_set_rules[this.getRuleSet(track_id).getRuleSetId()] = {};\n                    this.drawCells(track_id);\n                    this.clipAndPositionCells(track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(track_id);\n                    this.renderTrackLabels(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n                    OncoprintRenderer.prototype.useSameRuleSet.call(this, target_track_id, source_track_id);\n                    this.drawCells(target_track_id);\n                    this.clipAndPositionCells(target_track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(target_track_id);\n                    this.renderTrackLabels(target_track_id);\n                  }\n\n                  // Containers\n                  OncoprintSVGRenderer.prototype.getLabelDiv = function() {\n                    return this.label_div;\n                  };\n                  OncoprintSVGRenderer.prototype.getLabelDragDiv = function() {\n                    return this.label_drag_div;\n                  };\n                  OncoprintSVGRenderer.prototype.resizeCellDiv = function() {\n                    this.cell_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    \n                    this.cell_mouseover_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    this.cell_column_highlight.style('height', this.getCellAreaHeight() + 'px');\n                  };\n                  OncoprintSVGRenderer.prototype.resizeLabelDiv = function() {\n                    this.getLabelDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                    this.getLabelDragDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                  };\n\n                  // Labels\n                  OncoprintSVGRenderer.prototype.removeTrackLabels =function(track_ids) {\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids); \n                    var div = this.label_div;\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                    });\n                  }\n                  OncoprintSVGRenderer.prototype.renderTrackLabels = function(track_ids, y, render_whole_labels) {\n                    var div = this.label_div;\n                    if (typeof y !== \"undefined\") {\n                      div.selectAll(this.getTrackLabelCSSSelector(track_ids)).style('top', y+'px');\n                    } else {\n                      track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                      track_ids = [].concat(track_ids);\n                      var label_tops = this.getTrackLabelTops();\n                      var self = this;\n                      var label_area_width = this.getLabelAreaWidth();\n                      var percent_altered_left = label_area_width - this.percent_altered_max_width;\n                      _.each(track_ids, function(track_id) {\n                        var label_top = label_tops[track_id];\n                        var track_label_class = self.getTrackLabelCSSClass(track_id);\n                        var label_text = self.oncoprint.getTrackLabel(track_id);\n                        var disp_label_text = label_text;\n                        if (label_text.length > self.max_label_length && !render_whole_labels) {\n                          disp_label_text = label_text.substring(0,self.max_label_length-3)+'...';\n                        }\n                        _.each(div.selectAll(self.getTrackLabelCSSSelector(track_id)), function(node) {\n                          $(node).qtip('destroy');\n                        });\n                        div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                        var span = div.append('span')\n                          .style('position','absolute')\n                          .classed(self.getTrackLabelCSSClass(track_id), true)\n                          .classed('oncoprint-track-label-draggable', true)\n                          .classed('oncoprint-track-label-main', true)\n                          .classed('oncoprint-track-label', true)\n                          .classed('noselect', true)\n                          .style('font-family', self.getLabelFont())\n                          .style('font-weight', 'bold')\n                          .text(disp_label_text)\n                          .style('top', label_top+'px')\n                          .on(\"mousedown\", function() {\n                            self.dragLabel(track_id);\n                          });\n                          $(span.node()).qtip( {content: {text: (label_text.length > self.max_label_length ? label_text+'<br> hold to drag' : 'hold to drag') },\n                                  position: {my:'middle right', at:'middle left', viewport: $(window)},\n                                  style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow'},\n                                  show: {event: \"mouseover\"}\n                                });\n                        var percent_altered = self.getAlteredDataPercentage(track_id);\n                        if (typeof percent_altered !== 'undefined') {\n                          div.append('span')\n                            .style('position','absolute')\n                            .classed(self.getTrackLabelCSSClass(track_id), true)\n                            .classed('oncoprint-track-label', true)\n                            .classed('noselect', true)\n                            .style('font-family', self.getLabelFont())\n                            .text(percent_altered + '%')\n                            .style('top', label_top+'px')\n                            .style('left', percent_altered_left+'px');  \n                        }\n                      });\n                    }\n                  };\n\n                  // Buttons\n                  OncoprintSVGRenderer.prototype.getTrackButtonCSSClass = function(track_id) {\n                    return 'oncoprint-track-button'+utils.ifndef(track_id, \"\");\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll('.'+self.getTrackButtonCSSClass(track_id)).remove();\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.renderTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var label_tops = this.getTrackLabelTops();\n                    var self = this;\n                    var label_area_width = this.getLabelAreaWidth();\n                    _.each(track_ids, function(track_id) {\n                      var button_class = self.getTrackButtonCSSClass(track_id);\n                      div.selectAll('.'+button_class).remove();\n                      var left = label_area_width - 15;\n                      if (self.oncoprint.isTrackRemovable(track_id)) {\n                        (function() {\n                          var new_btn = div.append('span').classed('noselect', true).style('font-size','12px').style('color', '#87CEFA').style('cursor', 'pointer')\n                          .classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            self.oncoprint.removeTrack(track_id);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                          new_btn.text('X');\n                          $(new_btn.node()).hover(function() {\n                            new_btn.style('font-size', '15px').style('color', '#0000FF');\n                          }, function() {\n                            new_btn.style('font-size','12px').style('color', '#87CEFA');\n                          }).qtip({\n                                            //content: {text: 'Click to remove'},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                        })();\n                        left -= 35;\n                      }\n                      if (self.oncoprint.isTrackSortDirectionChangable(track_id)) {\n                        (function() {\n                          var imgs = ['images/decreaseSort.svg', 'images/increaseSort.svg', 'images/nonSort.svg'];\n                          var descs = ['Click to sort in descending order', 'Click to not sort on this track', 'Click to sort in ascending order'];\n                          var sort_direction = [1, -1, 0];\n                          var current_sort_setting = sort_direction.indexOf(self.oncoprint.getTrackSortDirection(track_id));\n                          var new_btn = div.append('img');\n                          new_btn.attr('src', imgs[current_sort_setting]).style('cursor','pointer');\n                          $(new_btn.node()).qtip({\n                                            content: {text: function() {\n                                              return descs[current_sort_setting];\n                                            }},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                          new_btn.classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            current_sort_setting = (current_sort_setting + 1) % 3;\n                            self.oncoprint.setTrackSortDirection(track_id, sort_direction[current_sort_setting]);//toggleTrackSortDirection(track_id);\n                            new_btn.attr('src', imgs[current_sort_setting]);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                        })();\n                      }\n                    });\n                  };\n\n                  // Cells\n                  OncoprintSVGRenderer.prototype.resizeCells = function(new_width) {\n                    this.cell_div.selectAll('svg.'+this.getCellCSSClass()).style('width', this.oncoprint.getZoomedCellWidth()+'px');\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackCells = function(track_id) {\n                    this.cell_div.selectAll('svg.'+this.getTrackCellCSSClass(track_id)).remove();\n                  };\n                  OncoprintSVGRenderer.prototype.drawTrackCells = function(track_id, fragment) {\n                    var oncoprint = this.oncoprint;\n                    var data = oncoprint.getTrackData(track_id);\n                    var id_key = oncoprint.getTrackDatumIdKey(track_id);\n                    var id_accessor = oncoprint.getTrackDatumIdAccessor(track_id);\n                    var rule_set = this.getRuleSet(track_id);\n                    if (!rule_set) {\n                      return;\n                    }\n                    var self = this;\n\n                    this.track_cells[track_id] = {};\n                    var cell_class = this.getCellCSSClass();\n                    var track_cell_class = this.getTrackCellCSSClass(track_id);\n                    var track_cells = this.track_cells[track_id];\n\n                    var bound_svg = d3.select(fragment).selectAll('svg.'+track_cell_class).data(data);\n                    bound_svg.enter().append('svg').classed(track_cell_class, true).classed(cell_class, true)\n                      .attr('shape-rendering','geometricPrecision')\n                      .attr('preserveAspectRatio','none')\n                      .attr('viewBox', '0 0 '+oncoprint.getFullCellWidth()+' '+oncoprint.getCellHeight(track_id))\n                      .style('width', oncoprint.getZoomedCellWidth()+'px').style('height', oncoprint.getCellHeight(track_id)+'px');\n                    bound_svg.exit().remove();\n\n                    var tooltip = oncoprint.getTrackTooltip(track_id);\n                    bound_svg.each(function(d,i) {\n                      var dom_cell = this;\n                      var id = id_accessor(d);\n                      track_cells[id] = {dom: this, d: d};\n                    });\n                    bound_svg.selectAll('*').remove();\n                    this.active_rule_set_rules[rule_set.getRuleSetId()][track_id] = rule_set.apply(bound_svg, oncoprint.getFullCellWidth(), oncoprint.getCellHeight(track_id));\n                    self.track_cell_selections[track_id] = bound_svg;\n                  };\n                  OncoprintSVGRenderer.prototype.drawCells = function(track_ids) {\n                    var fragment;\n                    if (this.document_fragment) {\n                      //HACK\n                      fragment = document.createDocumentFragment();\n                    } else {\n                      fragment = this.cell_div.node();\n                    }\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      self.drawTrackCells(track_id, fragment);\n                    });\n                    if (this.document_fragment) {\n                      this.cellRenderTarget().node().appendChild(fragment);\n                    }\n                    setTimeout(function() {\n                      $(self).trigger(events.FINISHED_RENDERING);\n                    }, 0);\n                  };\n\n                  // Positioning\n                  OncoprintSVGRenderer.prototype.clipAndPositionCells = function(track_ids, axis, force, display_all) {\n                    this.cell_div.node().display = 'none';\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var visible_interval = this.getVisibleInterval();\n                    var interval_width = 4*(visible_interval[1] - visible_interval[0]);\n                    var interval_number = Math.floor(visible_interval[0] / interval_width);\n                    visible_interval = _.map([-interval_width, 2*interval_width], function(x) { \n                      return Math.max(x + interval_number*interval_width, 0); \n                    });\n                    var self = this;\n                    var track_cell_tops = this.getTrackCellTops();\n                    var id_order = this.oncoprint.getVisibleInvertedIdOrder();\n                    var cell_x = this.getCellXArray(Object.keys(id_order).length);\n                    _.each(track_ids, function(track_id) {\n                      var y;\n                      if (!axis || axis === 'top') {\n                        y = track_cell_tops[track_id];\n                      }\n                      var id_key = self.oncoprint.getTrackDatumIdKey(track_id);\n                      if ((interval_number !== self.prev_interval_number) || force) {\n                        if (self.track_cell_selections.hasOwnProperty(track_id)) {\n                          self.track_cell_selections[track_id].each(function(d,i) {\n                            var new_x = cell_x[id_order[d[id_key]]];\n                            var disp = this.style.display;\n                            var new_disp = ((isNaN(new_x) || new_x < visible_interval[0] || new_x > visible_interval[1]) && !display_all) ? 'none' : 'inherit';\n                            if (disp !== new_disp) {\n                              this.style.display = new_disp;\n                            }\n                            if ((!axis || axis === 'left') && new_disp !== 'none') {\n                              this.style.left = new_x + 'px';\n                            }\n                            if ((!axis || axis === 'top') && new_disp !== 'none') {\n                              this.style.top = y+'px';\n                            }\n                          });\n                        }\n                      }\n                    });\n                    this.prev_interval_number = interval_number;\n                    this.cell_div.node().display = 'block';\n                  };\n\n                  OncoprintSVGRenderer.prototype.setLegendVisible = function(track_ids, visible) {\n                    var self = this;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : [].concat(track_ids);\n                    _.each(track_ids, function(id) {\n                      self.getRuleSet(id).exclude_from_legend = !visible;\n                    });\n                    this.renderLegend();\n                  };\n                  OncoprintSVGRenderer.prototype.renderLegend = function(include_all) {\n                    var cell_width = this.oncoprint.getFullCellWidth();\n                    var self = this;\n                    var rendered = {};\n                    self.legend_table.selectAll('*').remove();\n                    _.each(this.rule_sets, function(rule_set, track_id) {\n                      if (rule_set.exclude_from_legend && !include_all) {\n                        return;\n                      }\n                      var rule_set_id = rule_set.getRuleSetId();\n                      var active_rules = {};\n                      _.each(self.active_rule_set_rules[rule_set_id], function(track_map, track_id) {\n                        $.extend(active_rules, track_map);\n                      });\n                      if (!rendered.hasOwnProperty(rule_set_id)) {\n                        var tr = self.legend_table.append('tr');\n                        var label_header = tr.append('td').style('padding-top', '1em').style('padding-bottom', '1em')\n                              .append('span').classed('oncoprint-legend-header', true);\n                        label_header.text(rule_set.getLegendLabel());\n                        var legend_body_td = tr.append('td');\n                        var legend_div = rule_set.getLegendDiv(active_rules, cell_width, self.oncoprint.getCellHeight(track_id));\n                        legend_body_td.node().appendChild(legend_div);\n                        utils.d3SelectChildren(d3.select(legend_div), '*').classed('oncoprint-legend-block-span', true);\n                        rendered[rule_set_id] = true;\n                      }\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.dragLabel = function(track_id) {\n                    this.getLabelDragDiv().style('display','block');\n                    var track_group = this.oncoprint.getContainingTrackGroup(track_id);\n                    var first_track = track_group[0], last_track=track_group[track_group.length-1];\n                    var all_track_tops = this.getTrackLabelTops();\n                    var track_tops = {};\n                    _.each(track_group, function(id) { \n                      track_tops[id] = all_track_tops[id];\n                    });\n                    track_group.splice(track_group.indexOf(track_id), 1);\n                    var group_track_tops = _.map(track_group, function(id) {\n                      return track_tops[id];\n                    });\n                    var label_area_height = this.getLabelAreaHeight();\n                    var drag_bounds = [undefined, undefined];\n                    drag_bounds[0] = utils.clamp(track_tops[first_track], 0, label_area_height);\n                    drag_bounds[1] = utils.clamp(track_tops[last_track]+this.getRenderedTrackHeight(last_track), 0, label_area_height);\n\n                    var self = this;\n                    var $label_drag_div = $(self.getLabelDragDiv().node());\n                    delete track_tops[track_id];\n\n                    (function(track_id) {\n                      var new_pos = -1;\n                      var moveHandler = function(evt) {\n                        if (evt.stopPropagation) {\n                          evt.stopPropagation();\n                        }\n                        if (evt.preventDefault) {\n                          evt.preventDefault();\n                        }\n                        var mouse_y = utils.clamp(utils.mouseY(evt), drag_bounds[0], drag_bounds[1]);\n                        self.renderTrackLabels(track_id, mouse_y);\n                        d3.selectAll(self.getTrackLabelCSSSelector(track_id)).classed(LABEL_DRAGGING_CLASS, true);\n                        \n                        new_pos = _.sortedIndex(group_track_tops, mouse_y);\n                        _.each(track_tops, function(top, id) {\n                          top += 3*(+(new_pos < track_group.length && track_group[new_pos] == id));\n                          top -= 3*(+(new_pos > 0 && track_group[new_pos-1] == id));\n                          self.renderTrackLabels(id, top);\n                        });\n                      }\n                      $label_drag_div.on(\"mousemove\", moveHandler);\n                      var mouseUpHandler = function(evt) {\n                        $label_drag_div.hide();\n                        $label_drag_div.off(\"mousemove\", moveHandler);\n                        if (new_pos > -1) {\n                          self.oncoprint.moveTrack(track_id, new_pos);\n                        }\n                      };\n                      $(document).one(\"mouseup\", mouseUpHandler);\n                    })(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.toSVG = function(full_labels) {\n                    var self = this;\n                    var root = $(this.container.node()).offset();\n                    var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n                    svg.attr('width', this.getLabelAreaWidth() + this.getCellAreaWidth() + 'px');\n                    this.renderLegend(true);\n                    this.renderTrackLabels(undefined, undefined, full_labels);\n                    svg.attr('height', $(this.container.node()).height()+'px');\n                    (function addLabels() {\n                      self.label_div.selectAll('.oncoprint-track-label').each(function() {\n                        var text_elt = d3.select(this);\n                        var font = text_elt.style('font-family') || 'Arial';\n                        var weight = text_elt.style('font-weight'); \n                        var size = text_elt.style('font-size') || '12px';\n                        var pos = $(text_elt.node()).offset();\n                        var text = text_elt.text();\n                        svg.append('text').style('font-family', font).style('font-weight', weight).style('font-size', size)\n                            .attr('transform', utils.translate(pos.left - root.left,pos.top - root.top))\n                            .style('alignment-baseline', 'hanging')\n                            .text(text);  \n                      });\n                    })();\n                    (function addCells() {\n                      self.clipAndPositionCells(undefined, undefined, true, true);\n                      self.cell_div.selectAll('.oncoprint-cell').each(function() {\n                        var cell_elt = d3.select(this);\n                        var cell_rect = cell_elt.node().getBoundingClientRect();\n                        var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                        var pos = $(cell_elt.node()).offset();\n                        var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                        cell_elt.selectAll('*').each(function() {\n                          utils.appendD3SVGElement(d3.select(this), g);\n                        });\n                        var outline_styles = {color: cell_elt.style('outline-color'), width: cell_elt.style('outline-width')};\n                        if (outline_styles.color) {\n                          g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                              .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                        }\n                      });\n                      //styles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    })();\n                    (function addLegend() {\n                      self.legend_table.selectAll('tr').each(function() {\n                        d3.select(this).selectAll('td').each(function() {\n                          d3.select(this).selectAll('.oncoprint-legend-header,.oncoprint-legend-element').each(function() {\n                            if ($(this).text().trim().length) {\n                              // text type element\n                              var text_elt = d3.select(this);\n                              var font = text_elt.style('font-family') || 'Arial';\n                              if (font !== 'Arial') {\n                                //console.log(this);\n                              }\n                              var weight = text_elt.style('font-weight'); \n                              var size = text_elt.style('font-size') || '12px';\n                              var text = text_elt.text();\n                              var pos = $(text_elt.node()).offset();\n                              svg.append('text').style('font-family', font).style('font-weight', weight)\n                                .style('font-size', size)\n                                .attr('transform', utils.translate(pos.left - root.left, pos.top - root.top))\n                                .style('alignment-baseline', 'hanging')\n                                .text(text);\n                            } else if (this.tagName.toLowerCase() === 'svg') {\n                              var elt = d3.select(this);\n                              var pos = $(elt.node()).offset();\n                              var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                              var cell_rect = elt.node().getBoundingClientRect();\n                              var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                              var outline_styles = {color: elt.style('outline-color'), width: elt.style('outline-width')};\n                              if (outline_styles.color) {\n                                g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                                    .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                              }\n                              elt.selectAll('*').each(function() {\n                                utils.appendD3SVGElement(d3.select(this), g);\n                              });\n                            }\n                          });\n                        });\n                      });\n                    })();\n                    this.renderLegend();\n                    this.renderTrackLabels();\n                    return svg.node();\n                  };\n                  return OncoprintSVGRenderer;\n            })();\n            \n            function displayOncoprint(msg)\n            {\n               $(\"#onc\").empty();\n               $(\"#oncoprintErrorSection\").empty();\n               $(\".oncoprint-label-col1\").empty();\n              \n               if(msg.status == \"error\") {\n                  vm.errorMessage = JSON.parse(msg.payload);\n                  console.log(\"***** errors in dispalyOncoprint\", vm.errorMessage);\n                  setState(\"errors\"); \n                }else{\n                     var genes = msg.payload[1];\n                     var processed_data = msg.payload[0];\n                     var onc = Oncoprint.create('#onc');\n                     onc.suppressRendering();\n                     $.when(processed_data).then(function(){\n                          if(typeof(genes) === \"string\"){\n                            genes = [genes];\n                           }  \n                          var tracks_to_load = genes.length;\n\n                          var track_id = [];\n                          for(var i = 0; i < genes.length; i++){\n                            var gene = genes[i];\n                            function data_gene_map(obj) {\n                                return obj.gene === gene;\n                            }\n                            var data_gene = processed_data.filter(data_gene_map); \n\n                            var addTrackStart = Date.now();\n                            track_id[i] = onc.addTrack({label: gene, removable:true}, 0);\n                            if(i === 0){\n                              onc.setRuleSet(track_id[i], Oncoprint.GENETIC_ALTERATION);\n                            }else{\n                              onc.useSameRuleSet(track_id[i], track_id[0]);\n                            }\n                            onc.setTrackData(track_id[i], data_gene, true);\n                          }            \n                        onc.releaseRendering();\n                        onc.sort();\n                        $('#toggle_whitespace').click(function() {\n                           onc.toggleCellPadding();\n                        });\n                        var z = 1;\n                        $('#reduce_cell_width').click(function() {\n                            z *= 0.5;\n                            onc.setZoom(z);\n                        });  \n                    //move legend to oncoscape label section\n                    var allOncoLegendBlocks = $(\".oncoprint-legend-block\");\n                    var allOncoLegendLabels = $(\".oncoprint-legend-label\");\n                    for(var j = 0; j < allOncoLegendBlocks.length; j++){\n                      allOncoLegendBlocks[j].appendChild(allOncoLegendLabels[j]);\n                    }\n                    $(\".oncoprint-label-col1\").append(allOncoLegendBlocks); \n                    $(\"#oncoprintInstructions\").hide();\n                  });  \n                }           \n            } // displayOncoprint\n           \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx\") >= 0\n                });\n        \n                // Patient Data\n                var rawPatientData = response.payload.tbl;\n                var mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n   \n  \n                $scope.$watchGroup(['vm.geneAndPatients'], function() {\n                   drawOncoprint(vm.geneAndPatients);\n                });  \n                 osApi.setBusy(false);\n            });\n\n\n            var _state = \"\";\n            var setState = function(value){\n              if (_state==value) return;\n              switch(value){\n                case \"instructions\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n                case \"control\":\n                  elControl.show();\n                  elInstructions.hide();\n                  elLegend.show();\n                  break;\n                case \"errors\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n              }\n              \n            }\n            \n            // API Call To oncoprint_data_selection\n            var drawOncoprint = function(msg) {\n\n                if ((selectedPatientIds == null) || (selectedGeneIds == null) ){\n                  setState(\"instructions\");\n                  return;\n                } \n              \n                var geneAndPatients = msg;\n                geneAndPatients = geneAndPatients.split(',');\n\n                if(geneAndPatients.length > 350){\n                  vm.errorMessage = \"ERROR: The total number of Patients and Genes are set to be less than 350.\";\n                  setState(\"errors\");\n                }else{\n                  osApi.setBusy(true);\n                  osApi.getOncoprint(geneAndPatients);\n                  osApi.getOncoprint(geneAndPatients).then(function(response) {\n                      var payload = response.payload;\n                      displayOncoprint(payload);\n                      setState(\"control\");\n                      osApi.setBusy(false);\n                  });\n                }\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n    \n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    //'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, osHistory, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            osApi.setBusy(true);\n            var tmpdata;\n            var signal = (function(){\n                return {\n                    patients: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    genes: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    edges: {\n                        select: new signals.Signal(),\n                        unselect: new signals.Signal(),\n                        over: new signals.Signal(),\n                        out: new signals.Signal()\n                    },\n                    clear: function(){\n                        this.edges.select.removeAll();\n                        this.edges.unselect.removeAll();\n                        this.edges.over.removeAll();\n                        this.edges.out.removeAll();\n                        this.patients.select.removeAll();\n                        this.patients.unselect.removeAll();\n                        this.patients.over.removeAll();\n                        this.patients.out.removeAll();\n                        this.genes.select.removeAll();\n                        this.genes.unselect.removeAll();\n                        this.genes.over.removeAll();\n                        this.genes.out.removeAll();\n                    }\n                };\n            })()\n\n            /*\n            *  Cytoscape Chart\n            *  + Node & Edge Styles\n            */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    container: elChart,\n                    style: [{\n                        selector: 'core',\n                        style: {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node',\n                        style: {\n                            'background-color': \"#3993fa\",\n                            'display': \"data(display)\",\n                            //'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            //'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'width': 'data(sizeEle)',\n                            'height': 'data(sizeEle)',\n                            'border-width': 'data(sizeBdr)',\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"telomere\"]',\n                        style:{\n                            'background-color': \"#3993fa\",   \n                        }\n                    }\n                    , {\n                        selector: 'node[nodeType=\"patient\"]',\n                        style: {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]:selected',\n                        style: {\n                            'border-color': \"#000\",\n                            'border-width': 50\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]',\n                        style: {\n                            'background-color': \"#FFFFFF\",\n                            'border-color': \"#38347b\",\n                            'text-halign': \"right\",\n                            'label': \"data(id)\"\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]:selected',\n                        style: {\n                            'border-color': \"#FF0000\",\n                            'background-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"centromere\"]',\n                        style: {\n                            'font-size': '200px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '400px',\n                            'width': '400px',\n                            'shape': 'round',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        selector: 'edge',\n                        style: {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    //motionBlur: true,\n                    //motionBlurOpacity: 0.2,\n                    zoom: 0.01,\n                    pan: {x: 550, y: 160},\n                    //minZoom: .0005,\n                    //maxZoom: 2,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n            *  Draw Chromosome\n            */\n            (function(){\n                \n                osApi.query(\"render_chromosome\", {type:\"chromosome\"}).then(function(result){\n\n                    // Process Chromosome\n                    var chromosomes = result.data[0].data;\n                    var elements = [];\n\n                    Object.keys(chromosomes).forEach(function(key){\n                        var chromosome = this.chromosomes[key];\n                        this.elements.push(\n                            {\n                                group: \"edges\",\n                                grabbable: false,\n                                locked: true,\n                                selectable: false,\n                                data:{\n                                    color: \"#3993fa\",\n                                    id: \"ce\"+key,   // Chromosome Edge (CE)\n                                    display: \"element\",\n                                    edgeType:\"chromosome\",\n                                    sizeBdr: 0,\n                                    sizeEle: 60,  // Style?\n                                    source : \"cp\"+key,  // Chromosome P (CP)\n                                    target : \"cq\"+key   // Chromosome Q (CQ)\n                                }\n                            });\n\n                        // Telemere P\n                        this.elements.push({\n                                group: \"nodes\",\n                                grabbable: false,\n                                locked: true,\n                                selectable: false,\n                                position:{\n                                    x: chromosome.x,\n                                    y: chromosome.p\n                                },\n                                data:{\n                                    id:\"cp\"+key,\n                                    display:\"element\",\n                                    nodeType:\"telomere\",\n                                    degree:1,\n                                    sizeBdr: 50,\n                                    sizeEle:50,\n                                    sizeLbl:6,\n                                    subType: \"unassigned\"\n                                }\n                            });\n                        // Telemere Q\n                        this.elements.push({\n                               group: \"nodes\",\n                                grabbable: false,\n                                locked: true,\n                                selectable: false,\n                                position:{\n                                    x: chromosome.x,\n                                    y: chromosome.q\n                                },\n                                data:{\n                                    id:\"cq\"+key,\n                                    display:\"element\",\n                                    nodeType:\"telomere\",\n                                    degree:1,\n                                    sizeBdr:50,\n                                    sizeEle:50,\n                                    sizeLbl:50,\n                                    subType: \"unassigned\"\n                                }\n                            });\n                        // Centromere Q\n                        this.elements.push({\n                                group: \"nodes\",\n                                grabbable: false,\n                                locked: true,\n                                selectable: false,\n                                position:{\n                                    x: chromosome.x,\n                                    y: chromosome.c\n                                },\n                                data:{\n                                    id:key,\n                                    display:\"element\",\n                                    sizeBdr: 50,\n                                    nodeType:\"centromere\",\n                                    degree:1\n                                }\n                            });\n\n                    }, {chromosomes:chromosomes, elements:elements});\n                    cyChart.add(elements);\n\n                    // Select All Genes By Clicking Centromere\n                    // cyChart.$('node[nodeType=\"centromere\"]').on(\"click\", function(e){\n                    //     var posX = e.cyTarget.position().x;\n                    //     cyChart.startBatch();\n                    //     cyChart.$('node[nodeType=\"gene\"]').filter(function(p){  \n                    //         debugger;\n                    //         return p.position().x==this; }, posX)\n                    //         .forEach( function(ele){\n                    //             ele.select();\n                    //         });\n                    //     cyChart.endBatch();\n                    // });\n                });\n            })()\n\n            /*\n            * View Model + Initial Data Load \n            * + Initial Data Load\n            * + View Port Resize Event\n            */\n            var vm = (function(vm, osApi){\n                vm.showPopupSelection = false;\n                vm.datasource = osApi.getDataSource();\n                vm.optGeneSets = [];\n                vm.optGeneSet;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout;\n                // vm.optDatasets = [];\n                // vm.optDataset;\n                vm.search = \"\";\n                vm.optPatientColors = [];\n                vm.optPatientColor;\n\n                vm.optCommandModes = [\n                    {name: 'Sequential'},\n                    {name: 'Set'},\n                    {name: 'Ad Hoc'}\n                ];\n                vm.optCommandMode = vm.optCommandModes[0];\n\n                vm.selectColor = function(item){\n\n                };\n\n                vm.filterModelEdge = function(){\n\n                    angular.element('#modalEdge').modal('hide');\n                    var vals = vm.optEdgeColors\n                        .filter(function(c){ return c.show; })\n                        .map(function(c){ return c.id});\n                    var edges = tmpdata.edges.filter(function(edge){\n                        return (vals.indexOf(edge.data.cn)!=-1);\n                    }, {vals:vals});\n\n                    cyChart.startBatch();\n                    var elements = cyChart.add(edges);\n                    cyChart.endBatch();\n                    tmpdata = null;\n\n                };\n\n                vm.edgeToggle = function(item){\n                    if (!item.show){\n                        cyChart.remove('edge[cn='+item.id+']');\n                    }\n\n                };\n\n                vm.deselectColor = function(item){\n                    var color = item.color;\n                    var nodes = cyChart.$('node[nodeType=\"patient\"]:selected');\n                    cyChart.startBatch();\n                    nodes.forEach(function(node){\n                        if (node.data().color == this){\n                            node.unselect();\n                        }\n                    }, color);\n                    cyChart.endBatch();\n                };\n\n                vm.lockPatients = false;\n                vm.lockGenes = false;\n                vm.lock = function(type){\n                    switch  (type){\n                        case \"patient\":\n                            vm.lockPatients = !vm.lockPatients;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"patient\"]')\n                                .forEach(function(node){ \n                                    if (vm.lockPatients) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n                        case \"gene\":\n                            vm.lockGenes = !vm.lockGenes;\n                            cyChart.startBatch();\n                            cyChart.$('node[nodeType=\"cn\"]')\n                                .forEach(function(node){ \n                                    if (vm.lockGenes) node.unselectify();\n                                    else node.selectify();\n                                });\n                            cyChart.endBatch();\n                            break;\n\n                    }\n                    \n                    \n                    //         break;\n                    //     case \"genes\":\n                    //         break;\n                    // }\n                };\n\n                vm.optEdgeColors = [{ \n                    name: 'mutation',\n                    abv:'m',\n                    show: true,\n                    color: '#004358',\n                    class: 'switch-mutation',\n                    id: 0\n                }, {\n                    name: 'cnGain.1',\n                    abv:'cnG1',\n                    show: true,\n                    color: '#1F8A70',\n                    class: 'switch-cnG1',\n                    id: 1\n                }, {\n                    name: 'cnLoss.1',\n                    abv:'cnL1',\n                    show: true,\n                    color: '#FFE11A',\n                    class: 'switch-cnL1',\n                    id: -1\n                }, {\n                    name: 'cnGain.2',\n                    abv:'cnG2',\n                    show: true,\n                    color: '#BEDB39',\n                    class: 'switch-cnG2',\n                    id: 2\n                }, {\n                    name: 'cnLoss.2',\n                    abv:'cnL2',\n                    show: true,\n                    color: '#FD7400',\n                    class: 'switch-cnL2',\n                    id: -2\n                }];\n\n                $q.all([\n                    osApi.query(\"render_chromosome\", { type:'geneset', $fields:['name'] }),\n                    osApi.query(\"render_patient\",    { type:'cluster', $fields:['name'] }),\n                    osApi.query(\"render_patient\",    { type:'color', $fields:['name'] })\n                ]).then(function(results){\n                    vm.optGeneSets = results[0].data;\n                    vm.optGeneSet = vm.optGeneSets[0];\n                    vm.optPatientLayouts = results[1].data;\n                    vm.optPatientLayout = vm.optPatientLayouts[0]\n                    vm.optPatientColors = [{'name':'Default'}].concat(results[2].data);\n                    vm.optPatientColor = vm.optPatientColors[0];\n                });\n                vm.resize = function(){\n                    var width = $window.innerWidth;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                    elChart.width( width );\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n\n            \n                return vm;\n            })(this, osApi);\n\n            /*\n            * Zoom Control Functions\n            * - reset\n            * - fit\n            */\n            var zoom = (function(cyChart,vm){\n                var reset = function(){\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function(){\n                    cyChart.fit( cyChart.$(':selected'), 50 )\n                };\n                vm.zoom = {reset:reset, fit:fit};\n\n\n                cyChart.on('pan', _.debounce(function(e) {\n                    cyChart.startBatch();\n                    resizeNodes();\n                    cyChart.endBatch();\n                }, 50));\n\n                return vm.zoom;\n            })(cyChart,vm);\n\n            var resizeNodes = function(){\n                var zoom = (1/cyChart.zoom())/100;\n                if (zoom<.02) zoom = .02;\n                var sizeBdr = 50 * zoom;\n                var sizeLbl = 500 * (zoom*2);\n                var sizeLbl = (sizeLbl>500) ? 0 : sizeLbl;\n                \n                cyChart.$('node[nodeType=\"patient\"],node[nodeType=\"gene\"]').forEach(function(node){\n                        node.data({'sizeEle': node.data().weight * this.zoom, sizeLbl: this.sizeLbl, sizeBdr: this.sizeBdr});\n                    }, { zoom:zoom, sizeBdr:sizeBdr, sizeLbl:sizeLbl});\n            }\n            /* \n            *  Interop Between UI and Worker Thread\n            *  - setGeneSet(name:String)\n            *  - setPatientLayout(name:String)\n            *  - setDataSource(name:String)\n            *  - setOptions(options:Object)\n            */\n            var setOptions = (function(cyChart, vm, osApi, $q, zoom, _, signal){\n\n                // Instatiate Worker\n                var cmd = {};\n                var worker = new Worker(\"app/components/markers/markers.worker.js\");\n                worker.addEventListener('message', function(msg) { cmd[msg.data.cmd](msg.data.data); }, false);\n                \n            \n                var remove = function(selector, data){\n                    if (angular.isUndefined(data)) { cyChart.remove(selector); return; }\n                    try{\n                        var items = data.map(function(item){ return this.getElementById(item); }, cyChart);\n                        cyChart.collection(items).remove();\n                    }catch(e){}\n                };\n            \n            \n                cmd.patients_resize = function(data){\n                    console.log(\"PATIENTS RESIZE\");\n                };\n                cmd.patients_delete = function(data) { \n                    console.log(\"PATIENTS DELETE\");\n                    remove('node[nodeType=\"patient\"]', data); \n                };\n                cmd.patients_insert = function(data) { \n                    console.log(\"PATIENTS INSERT\");\n                    cyChart.startBatch();\n                    var signals = signal.patients;\n                    var elements = cyChart.add(data.patients);\n                    elements.on(\"select\", _.debounce(signals.select.dispatch ,300));\n                    elements.on(\"unselect\", _.debounce(signals.unselect.dispatch ,300));\n                    elements.on(\"mouseover\", signals.over.dispatch);\n                    elements.on(\"mouseout\", signals.out.dispatch);\n                    elements.forEach(function(node){\n                        try{\n                            node.data({'weight': data.degrees[node.id()].weight});\n\n                        }catch(e){\n                            node.data({'weight': 100});\n                        }\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                    vm.resize();\n\n                };\n                cmd.patients_color = function(data){\n                    console.log(\"PATIENTS COLOR\");\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node){\n                        node.data('color', data[node.id()].color);\n                    });\n                    cyChart.endBatch();\n                };\n                cmd.patients_layout = function(data) {\n                    console.log(\"PATIENTS LAYOUT\");\n                    cyChart.startBatch();\n                    cyChart.nodes('node[nodeType=\"patient\"]').forEach(function(node){\n                        try{\n                            var pos = data[node.id()];\n                            pos.x -= 40000;\n                            node.position( pos );\n                        }catch(e){}\n                    });\n                    resizeNodes();\n                    cyChart.endBatch();\n                };\n                cmd.patients_legend = function(data) {\n                    console.log(\"PATIENTS LEGEND\");\n                    $scope.$apply(function(){ vm.legendNodes = data; });\n                };\n                cmd.genes_delete    = function(data) { \n                    console.log(\"GENES DELETE\");\n                    remove('node[nodeType=\"gene\"]', data); \n                };\n                cmd.genes_insert    = function(data) { \n                    console.log(\"GENES INSERT\");\n                    cyChart.startBatch();\n                    var signals = signal.genes;\n                    var elements = cyChart.add(data.genes);\n                    elements.on(\"select\", _.debounce(signals.select.dispatch ,300));\n                    elements.on(\"unselect\", _.debounce(signals.unselect.dispatch ,300));\n                    elements.on(\"mouseover\", signals.over.dispatch);\n                    elements.on(\"mouseout\", signals.out.dispatch);\n                    elements.forEach(function(node){\n                        try{\n                            node.data({'weight': data.degrees[node.id()].weight});\n\n                        }catch(e){\n                            node.data({'weight': 500});\n                            \n                        }\n                    });\n                    cyChart.endBatch();\n                    osApi.setBusy(false);\n                };\n                cmd.genes_update    = function(data) {\n                    console.log(\"GENES UPDATE\");\n                    update(data); \n                };\n                cmd.edges_delete    = function(data) { \n                    console.log(\"EDGES DELETE\");\n                    remove('edge[edgeType=\"cn\"]', data); \n                };\n                cmd.edges_insert    = function(data) { \n                    console.log(\"EDGES INSERT\");\n                    tmpdata = data;\n                    if (data.counts.total>5000){\n                        angular.element('#modalEdge').modal();\n                        $scope.$apply(function(){\n                            vm.edgeCounts = data.counts;\n                        });\n                        return;\n                    }\n\n                  \n                    cyChart.startBatch();\n                    if (vm.optCommandMode.name==\"Ad Hoc\") cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    var elements = cyChart.add(data.edges);\n                    cyChart.endBatch();\n                };\n                cmd.edges_update    = function(data) {\n                    console.log(\"EDGES UPDATE\")\n                    update(data); \n                };\n \n                // Outbound\n                return function(options) { \n                    worker.postMessage({cmd:\"setOptions\", data:options}); \n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /* Options Factory */\n            var createOptions = (function(cyChart, vm){\n\n                return function(cmd){\n                    cmd = cmd || \"\";\n                    var geneset = vm.optGeneSet.name;\n                    var opts = {\n                        mode: vm.optCommandMode.name,\n                        cmd: cmd,\n                        patients:{\n                            data: vm.datasource.collections.pt,\n                            layout: vm.optPatientLayout.name,\n                            color: vm.optPatientColor.name,\n                            selected: cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p){ return p.data().id })\n                        },\n                        genes:{\n                            layout: vm.optGeneSet.name,\n                            selected: cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p){ return p.data().id })\n                        },\n                        edges:{\n                            layout: vm.datasource.edges\n                                .filter(function(v){ return (v.name==this)}, geneset)[0],\n                            colors: vm.optEdgeColors\n                                .filter(function(f){return f.show })\n                                .map(function(f){ return {id:f.id, color:f.color}; })\n                        }\n                    };\n                    return opts;\n                }\n            })(cyChart, vm)\n\n\n            vm.cmd = function(){}\n\n\n            /*\n            *  Watch View Model\n            *  + vm.optGeneSet\n            *  + vm.optPatientLayout\n            */\n            \n            var watch = (function(vm, $scope){\n                var watches = 1;\n\n                // GeneSet\n                watches += 1;\n                $scope.$watch('vm.optGeneSet', function(){\n                    if (watches>0) {watches -= 1; return; }\n                    if ( angular.isUndefined(vm.optGeneSet) || angular.isUndefined(vm.optPatientColor) || angular.isUndefined(vm.optPatientLayout)) return;\n                    osApi.setBusy(true);\n                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                    setOptions(createOptions());\n                    \n                });\n\n                // Patient Color\n                watches += 1;\n                $scope.$watch('vm.optPatientColor', function(){\n                    if (watches>0) {watches -= 1; return; }\n                    setOptions(createOptions());\n                });\n\n                // Patient Layout\n                watches += 1;\n                $scope.$watch('vm.optPatientLayout', function(){\n                    if (watches>0) {watches -=1; return; }\n                    setOptions(createOptions());\n                });\n\n                // Search\n                watches += 1;\n                $scope.$watch('vm.search', _.debounce(function(){\n                    if (watches>0) {watches -= 1; return; }\n                    var needle = vm.search.toUpperCase().trim();\n                    cyChart.$('node').unselect();\n                    if (needle.length>0) cyChart.$('node').filter( function(i,ele){ return (ele.id().toUpperCase().indexOf(needle)==0);} ).select();\n                }, 600))\n\n                // Edge Colors\n                watches += 1;\n                $scope.$watch('vm.optEdgeColors.color', function(){\n                    if (watches>0) {watches -= 1; return; }\n                    setOptions(createOptions());\n                    vm.resize()\n                });\n\n            })(vm, $scope);\n\n            // Initialize Commands\n            $scope.$watch(\"vm.optCommandMode\", function(){\n                signal.clear();\n                cyChart.$('node').unselect();\n                cyChart.$('edge[edgeType=\"cn\"]').remove();\n                switch (vm.optCommandMode.name)\n                {\n                    case \"Sequential\":\n                        try{ cyChart.$('node').unselect(); setOptions(createOptions()); }catch(e){}\n                        vm.cmd = function(cmd){\n                            switch (cmd){\n                                case \"HideAllEdges\":\n                                    cyChart.$('edge[edgeType=\"cn\"]').remove();\n                                    break;\n                                case \"HideSelectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:selected, node[nodeType=\"gene\"]:selected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"HideUnselectedEdges\":\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .neighborhood(\"edge\").remove();\n                                    break;\n                                case \"SelectConnected\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node:selected')\n                                        .neighborhood(\"node\")\n                                        .forEach( function(ele){\n                                            ele.select();\n                                        });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"SelectInverse\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node').forEach( function(ele){ ele[ele._private.selected?\"deselect\":\"select\"](); });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"HideUnselectedNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:unselected')\n                                        .forEach(function(item){  \n                                            item.style({display:'none'}); });\n                                    cyChart.endBatch();\n                                    break;\n                                case \"ShowAllNodes\":\n                                    cyChart.startBatch();\n                                    cyChart.$('node[nodeType=\"patient\"]:hidden')\n                                        .forEach(function(item){ \n                                            item.style({display:'element'}); });\n                                    cyChart.endBatch();\n                                    break;\n                                default:\n                                    var opts = createOptions(cmd);\n                                    setOptions(opts);\n                                    break;\n                            }\n                        };\n                        break;\n\n                    case \"Set\":\n                        var unselect = function(){\n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            var opts = createOptions();\n                            if (opts.patients.selected.length>0 || opts.genes.selected.length>0) setOptions(opts); \n                        };\n                        var select = function() { \n                            cyChart.$('edge[edgeType=\"cn\"]').remove();\n                            setOptions(createOptions()); \n                        };\n                        signal.patients.select.add(select);\n                        signal.patients.unselect.add(unselect);\n                        signal.genes.select.add(select);\n                        signal.genes.unselect.add(unselect);\n                        break;\n\n                    case \"Ad Hoc\":\n                        var over = function(e){\n                            e.cyTarget.select();\n                            setOptions(createOptions());\n                        }\n                        var out = function(e){\n                            e.cyTarget.unselect();\n                            //cyChart.$('edge[edgeType=\"cn\"]').remove();\n                        }\n                        signal.patients.over.add(over);\n                        signal.patients.out.add(out);\n                        signal.genes.over.add(over);\n                        signal.genes.out.add(out);\n                        break;\n                }\n            });\n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osHistory, $state, $timeout, $scope, moment, $stateParams, _, $, $q) {\n            // Properties\n            var vm = this;\n            var table;\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n\n            var initViewState = function(vm){\n                vm.datasource = osApi.getDataSource();\n                vm.diagnosisMin = vm.diagnosisMinValue = 1;\n                vm.diagnosisMax = vm.diagnosisMaxValue = 100000;\n                vm.survivalMin = vm.survivalMinValue = 0;\n                vm.survivalMax = vm.survivalMaxValue = 10;\n                vm.search = \"\";\n                vm.detail = null;\n            }\n\n            var initDataTable = function(vm, columns, data){\n                \n                // Override Filter Function\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    \n                    if (selectedIds.length!=0) {\n                        if (selectedIds.indexOf(data[0]) == -1) return false;\n                    }\n\n                    var diagnosis = parseFloat(data[3]);\n                    var survival = parseFloat(data[4]);\n                    //if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    // return (diagnosis >= vm.diagnosisMin &&\n                    //     diagnosis < (vm.diagnosisMax + 1) &&\n                    //     survival >= vm.survivalMin &&\n                    //     survival < (vm.survivalMax + 1));\n                    return true;\n                }];\n        \n                // Specify Data\n                table = angular.element('#history-datatable').dataTable({\n                            paging: false,\n                            columns: columns,\n                            data: data\n                            //\"scrollY\": \"50vh\",\n                            //\"scrollCollapse\": true\n                });\n                table.api().draw();\n            }\n\n            var initEvents = function(vm, $scope){\n\n/*\n                $('#history-datatable tbody').on( 'click', 'tr', function () {\n                    // $('.history-row-selected').removeClass('history-row-selected');\n                    $(this).addClass('history-row-selected');\n                    osApi.query(vm.datasource+\"_pt\", {'patient_ID':this.firstChild.textContent, $limit:1}).then(function(response){\n                        vm.detail = response.data[0];\n                    });\n                } );\n                $('#history-datatable tbody').on( 'mouseout', 'tr', function () {\n                    $(this).removeClass('history-row-selected');\n                    vm.detail = null;\n                });\n                */\n\n                vm.applyFilter = function(filter) {\n\n                    selectedIds = [];\n\n                    table.api().draw();\n\n                    var o = table._('tr', {\n                        \"filter\": \"applied\"\n                    }).map(function(item) {\n                        return item[\"patient_ID\"].toString().toUpperCase()\n                    });\n\n                    o = $.map(o, function(value) {\n                        return [value];\n                    });\n\n                    osHistory.addPatientSelection(\"Patient History\", filter, o);\n                };\n\n                var init = true;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (init) {\n                        init = false;\n                        return;\n                    }\n                    vm.applyFilter(\"Search\");\n                }, 1000));\n\n                osHistory.onPatientSelectionChange.add(function(selection) {\n                    selectedIds = selection.ids;\n                    table.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            \n            var columns = [\n                {data:'patient_ID', title:'Patient ID', defaultContent:'NA'},\n                {data:'gender', title:'Gender', defaultContent:'NA'},\n                {data:'race', title:'Race', defaultContent:'NA'},\n                {data:'age_at_diagnosis', title:'DX Age', defaultContent:'NA'},\n                {data:'days_to_death', title:'Survival', defaultContent:'NA'},\n                {data:'status_vital', title:'Status', defaultContent:'NA'}\n            ];\n\n            \n            initViewState(vm);\n            osApi.query(vm.datasource.table.patient, \n                {\n                    $fields:columns.map(function(f){ return f.data; }),\n                    $limit:0\n                })\n            .then(function(response){\n               initDataTable(vm, columns, response.data);\n               initEvents(vm, $scope)\n               osApi.setBusy(false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osGenesettest', genesettest);\n\n    /** @ngInject */\n    function genesettest() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/genesettest/genesettest.html',\n            controller: GenesettestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function GenesettestController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elInput = angular.element(\"#geneSetTestsInputsDiv\");\n            \n            // Properties\n            //var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n\n        \n            var cohort1 = osHistory.getPatientSelections()[0];\n            var cohort2 = osHistory.getPatientSelections()[1];\n\n            // Initialize\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                        return v.indexOf(\"mtx.mrna\") >= 0\n                    });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                console.log(\"**** mtx is: \", mtx);\n\n                if(cohort1 == null || cohort2 == null){\n                    vm.message = \"Please select two cohorts to test out the Gene Set\";\n                    vm.optCohort1 = \"Empty\";\n                    vm.optCohort2 = \"Empty\";\n                }else{\n                    vm.optCohort1 = cohort1.tool + \" \" +cohort1.desc + \" \" + cohort1.ids.length + \" Patients selected\" ;\n                    vm.optCohort2 = cohort2.tool + \" \" +cohort2.desc + \" \" + cohort2.ids.length + \" Patients selected\" ;\n                    var geneset = \"random.24\";\n                    //var geneset = \"tcga.pancan.mutated\";\n                    osApi.getGeneSetTest(vm.datasource, mtx).then(function() {\n                        $scope.$watchGroup(['vm.optCohort1', 'vm.optCohort2'], function() {\n                           calculateGeneSetScore(cohort1, cohort2, geneset);\n                        });  \n                     });   \n                }\n                osApi.setBusy(false);\n            });\n\n            var drawHeatMap = function(pt, genes, expressionData){\n                console.log(expressionData);\n                \n\n                var zValues = JSON.parse(expressionData);\n                var colorscaleValue = [\n                      [1, '#339966'],\n                      [2, '#003333']\n                    ];\n\n                    var data = [{\n                      //x: genes,\n                      y: pt,\n                      z: zValues,\n                      type: 'heatmap',\n                      //colorscale: colorscaleValue,\n                      showscale: true\n                    }];\n\n                    var layout = {\n                      title: 'GeneSet Heatmap',\n                      annotations: [],\n                      xaxis: {\n                        ticks: '',\n                        side: 'top'\n                      },\n                      yaxis: {\n                        ticks: '',\n                        ticksuffix: ' ',\n                        width: 500,\n                        height: 250,\n                        autosize: false\n                      }\n                    };\n\n\n                    Plotly.newPlot('heatMap', data, layout);\n            }\n            var drawHeatMap2 = function(pt, genes, expressionData){\n                   console.log(expressionData);\n            \n                   angular.element('#heatMap').highcharts({\n\n                        chart: {\n                            type: 'heatmap',\n                            marginTop: 40,\n                            marginBottom: 80,\n                            plotBorderWidth: 1,\n                        },\n\n\n                        title: {\n                            text: 'Gene Set Expression Heat Map'\n                        },\n\n                        xAxis: {\n                            // labels: {\n                            //     step: 1\n                            // },\n                            categories: genes\n                        },\n\n                        yAxis: {\n                            lineWidth: 5,\n                            lineColor: '#F33',\n                            categories: pt,\n                            title: null\n                        },\n\n                        colorAxis: {\n                            min: 0,\n                            //minColor:Highcharts.getOptions().colors[7],\n                            minColor: \"#FFFFFF\",\n                            maxColor:'#CC9933'\n                        },\n\n                        legend: {\n                            align: 'right',\n                            layout: 'vertical',\n                            margin: 10,\n                            verticalAlign: 'top',\n                            y: 25,\n                            symbolHeight: 280\n                        },\n\n                        tooltip: {\n                            formatter: function () {\n                                return '<b>' +this.series.yAxis.categories[this.point.y]  + ' '+ \n                                     this.series.xAxis.categories[this.point.x]+ ': ' +this.point.value + '</b>';\n                            }\n                        },\n\n                        series: [{\n                                    name: 'Sales per employee',\n                                    borderWidth: 0,\n                                    data: JSON.parse(expressionData) }]\n                    });\n\n            }    \n            // API Call To oncoprint_data_selection\n            var calculateGeneSetScore = function(cohort1, cohort2, geneset) {    \n                var Group1 = cohort1.ids;\n                var Group2 = cohort2.ids;\n\n                osApi.setBusy(true);\n                osApi.getGeneSetScore(Group1, Group2, geneset).then(function(response){\n                    console.log(response.payload);\n                    if(response.status == \"error\"){\n                        vm.message = response.payload + \"Please select two cohorts to test out the Gene Set\";\n                    }else{\n                        vm.message = response.payload.summary;\n                        var pt = response.payload.pt;\n                        var g = response.payload.genes;\n                        drawHeatMap2(pt, g, response.payload.analysisData);\n                    }\n                    osApi.setBusy(false);\n                });\n             }    \n     }\n    } \n})();   \n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource.disease\n                });\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDataExplorer', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/dataexplorer/dataexplorer.html',\n            controller: DataExplorerController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DataExplorerController(osApi, $state, $timeout, $scope, $stateParams, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataSources;\n            vm.dataSource;\n            vm.dataDiseases;\n            vm.dataDisease;\n            vm.dataTables;\n            vm.dataTable;\n            vm.dataFields;\n            vm.dataField;\n            \n            var bar = {\n                chart: {\n                    type: 'discreteBarChart',\n                    height: 450,\n                    margin : {\n                        top: 20,\n                        right: 20,\n                        bottom: 50,\n                        left: 55\n                    },\n                    x: function(d){return d.label;},\n                    y: function(d){return d.value;},\n                    showValues: true,\n                    valueFormat: function(d){\n                        return d3.format(',.4f')(d);\n                    },\n                    duration: 500,\n                    xAxis: {\n                        axisLabel: 'X Axis'\n                    },\n                    yAxis: {\n                        axisLabel: 'Y Axis',\n                        axisLabelDistance: -10\n                    }\n                }\n            };\n\n            var pie = {\n                chart: {\n                    type: 'pieChart',\n                    height: 450,\n                    donut: false,\n                    x: function(d){return d.label; },\n                    y: function(d){return d.value; },\n                    showLabels: false,\n                    pie: {\n                        startAngle: function(d) { return d.startAngle/2 -Math.PI/2 },\n                        endAngle: function(d) { return d.endAngle/2 -Math.PI/2 }\n                    },\n                    duration: 500\n                }\n            };\n\n            vm.chartOptions = bar;\n\n            vm.toolTipContentFunction = function(){\n                return function(key, x, y, e, graph) {\n                        return  'Super New Tooltip' +\n                        '<h1>' + key + '</h1>' +\n                        '<p>' +  y + ' at ' + x + '</p>'\n                }\n            }\n\n                \n\n            vm.xFunction = function(){\n                return function(d) {\n                    return d.label;\n                };\n            }\n            \n            vm.yFunction = function(){\n                return function(d) {\n                    return d.value;\n                };\n            }\n          \n        \n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_collections\").then(function(result){\n\n                vm.dataSources = result.data;\n                vm.dataSource = vm.dataSources[0];\n                \n                $scope.$watch(\"vm.dataSource\", function(){\n                    vm.dataDiseases = vm.dataSource.diseases;\n                    vm.dataDisease = vm.dataSource.diseases[0];\n\n                });\n                $scope.$watch(\"vm.dataDisease\", function(){\n                    vm.dataTables = vm.dataDisease.tables;\n                    vm.dataTable = vm.dataTables[0];\n                });\n                $scope.$watch(\"vm.dataTable\", function(){\n                    osApi.query(\"_field_detail\", {collection:vm.dataTable.collection}).then(function(result){\n                         vm.dataFields = result.data[0].fields.filter(function(field){ return field.key!=\"_id\"; });\n                         vm.dataField = vm.dataFields[0];\n                         console.dir(vm.dataField)\n                    });\n                });\n\n               osApi.setBusy(false);\n               \n            });\n            \n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohorts', cohorts);\n\n    /** @ngInject */\n    function cohorts() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohorts/cohorts.html',\n            controller: CohortsController,\n            scope:{\n                type:\"@\"\n            },\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortsController(osHistory, $state, $timeout) {\n\n            var vm = this;\n            vm.selection;\n            vm.selections;\n            \n            vm.close = function(){\n                angular.element(\".cohorts-\"+vm.type).hide();\n            }\n            vm.setSelection = function(item){\n                osHistory[\"set\"+vm.type+\"Selection\"](item);\n            };\n            var update = function(){\n                $timeout(function() {\n                    vm.selections = osHistory[\"get\"+vm.type+\"Selections\"]();\n                    vm.selection = osHistory[\"get\"+vm.type+\"Selection\"]();\n                    \n                });\n            };\n            \n            osHistory[\"on\"+vm.type+\"Add\"].add(function(){update(true)});            \n            osHistory[\"on\"+vm.type+\"SelectionChange\"].add(function(){update(false)});\n            \n            var isDragable = false;\n            var show = function(){\n                angular.element(\".cohorts-\"+vm.type).show();\n                if (isDragable) return;\n                isDragable = true;\n                angular.element(\".cohorts-\"+vm.type).draggable();\n\n            }            \n\n            // Keypress\n            angular.element(document).keypress(function(e) {\n                if (!e.ctrlKey) return;\n                if(vm.type==\"Gene\"){\n                    switch(e.keyCode){\n                        case 12: show(); break;\n                        case 39: osHistory.getGeneSelectionNext(); break;\n                        case 59: osHistory.getGeneSelectionLast(); break;\n                    }\n                }else{\n                    switch (e.keyCode)\n                    {\n                        case 16: show(); break;\n                        case 27: osHistory.getPatientSelectionLast(); break;\n                        case 29: osHistory.getPatientSelectionNext(); break;                \n                    }\n                }\n                \n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortBuilder', cohortBuilder);\n\n    /** @ngInject */\n    function cohortBuilder() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortbuilder/cohortbuilder.html',\n            controller: CohortBuilderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortBuilderController(osApi, $state, $timeout, $scope, $stateParams, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataSources;\n            vm.dataSource;\n            vm.dataDiseases;\n            vm.dataDisease;\n            vm.dataTables;\n            vm.dataTable;\n            vm.dataFields;\n\n            vm.toolTipContentFunction = function(){\n                return function(key, x, y, e, graph) {\n                        return  'Super New Tooltip' +\n                        '<h1>' + key + '</h1>' +\n                        '<p>' +  y + ' at ' + x + '</p>'\n                }\n            }\n\n                \n\n            vm.xFunction = function(){\n                return function(d) {\n                    return d.label;\n                };\n            }\n            \n            vm.yFunction = function(){\n                return function(d) {\n                    return d.value;\n                };\n            }\n          \n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_collections\").then(function(result){\n                \n                // Transform DataSources\n                var data = result.data;\n                vm.dataSources = \n                    _.chain(data).pluck(\"source\").uniq().map(function(v){return { name:v,\n                        diseases:_.chain(data).where({source:v}).pluck(\"disease\").uniq().map(function(v){ \n                            return { name:v,\n                                tables: _.chain(data).where({source:\"tcga\",disease:v}).map(function(v){ \n                                    return {created:v.created, name:v.table, records:v.records, collection:v.collection}} ).value()\n                            };}).value()\n                    };}).value();\n                vm.dataSource = vm.dataSources[0];\n                \n                $scope.$watch(\"vm.dataSource\", function(){\n                    vm.dataDiseases = vm.dataSource.diseases;\n                    vm.dataDisease = vm.dataSource.diseases[0];\n\n                });\n                $scope.$watch(\"vm.dataDisease\", function(){\n                    vm.dataTables = vm.dataDisease.tables;\n                    vm.dataTable = vm.dataTables[0];\n                    \n                });\n                $scope.$watch(\"vm.dataTable\", function(){\n                    console.log(osApi.queryString(\"_stats\", {collection:vm.dataTable.collection}));\n                    osApi.query(\"_stats\", {collection:vm.dataTable.collection}).then(function(result){\n                        vm.dataFields = result.data[0].fields;\n                    });\n                });\n\n               osApi.setBusy(false);\n               \n            });\n            \n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            \n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                $state.transitionTo(\"landing\");\n                event.preventDefault();\n                return;\n            }\n\n            // Redirect If Unable To Resolve Data Source\n            if (toState.datasource && (angular.isUndefined(toParams.datasource) || toParams.datasource===\"\")){\n                $state.transitionTo(\"datasource\")\n                event.preventDefault();\n                return;\n            }else{\n                osApi.setDataSource(toParams.datasource);\n            }\n            \n\n            //osApi.setDataSource({\"disease\":\"brca\",\"source\":\"TCGA\",\"name\":\"Breast\",\"img\":\"DSbreast.png\",\"beta\":false,\"collections\":{\"drug\":\"clinical_tcga_brca_drug\",\"f1\":\"clinical_tcga_brca_f1\",\"f2\":\"clinical_tcga_brca_f2\",\"f3\":\"clinical_tcga_brca_f3\",\"nte\":\"clinical_tcga_brca_nte\",\"nte_f1\":\"clinical_tcga_brca_nte_f1\",\"omf\":\"clinical_tcga_brca_omf\",\"pt\":\"clinical_tcga_brca_pt\",\"rad\":\"clinical_tcga_brca_rad\"},\"edges\":[{\"name\":\"TCGA GBM Classifiers\",\"edges\":\"edge_brca_tcgagbmclassifiers\",\"patientWeights\":\"edge_brca_tcgagbmclassifiers_patient_weight\",\"genesWeights\":\"edge_brca_tcgagbmclassifiers_gene_weight\"},{\"name\":\"Marker Genes 545\",\"edges\":\"edge_brca_markergenes545\",\"patientWeights\":\"edge_brca_markergenes545_patient_weight\",\"genesWeights\":\"edge_brca_markergenes545_gene_weight\"},{\"name\":\"TCGA Pan Cancer Mutated\",\"edges\":\"edge_brca_tcgapancancermutated\",\"patientWeights\":\"edge_brca_tcgapancancermutated_patient_weight\",\"genesWeights\":\"edge_brca_tcgapancancermutated_gene_weight\"},{\"name\":\"Onco Vogel 274\",\"edges\":\"edge_brca_oncovogel274\",\"patientWeights\":\"edge_brca_oncovogel274_patient_weight\",\"genesWeights\":\"edge_brca_oncovogel274_gene_weight\"}]});\n\n            \n            \n            \n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true,\n                datasource: false\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('dataexplorer', {\n                url: '/dataexplorer/{datasource}',\n                template: '<os-data-explorer>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('genesettest', {\n                url: '/genesettest/{datasource}',\n                template: '<os-genesettest>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('cohortbuilder', {\n                url: '/cohortbuilder/{datasource}',\n                template: '<os-cohort-builder>',\n                authenticate: true,\n                datasource: true\n            })\n           \n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n    \n    \n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/cohorts/cohorts.html\",\"<div class=\\\"cohorts panel panel-default cohorts-{{vm.type}}\\\"><div class=\\\"panel-heading\\\">{{vm.type}} History <span class=\\\"pull-right fa fa-times\\\" ng-click=\\\"vm.close()\\\"></span></div><div class=\\\"panel-body cohorts-panel-body\\\"><table><tr ng-click=\\\"vm.setSelection(item)\\\" ng-repeat=\\\"item in vm.selections\\\" ng-class=\\\"{\\'cohort-selected\\' : item==vm.selection}\\\"><td>{{item.tool}}</td><td>{{item.desc}}</td><td>{{item.ids.length}}</td></tr></table></div></div>\");\n$templateCache.put(\"app/components/cohortbuilder/cohortbuilder.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content cohortbuilider\\\"><div class=\\\"row\\\"></div></section></os-tray><section class=\\\"tray-content-block dataexplorer\\\"><div class=\\\"container-fluid\\\"><h2>Cohort Builder</h2><button>+</button> <button>-</button></div></section>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.img}}\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}} ({{dataset.source}})</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/dataexplorer/dataexplorer.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content dataexplorer\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Data Source</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Origin</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataSource.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataSources\\\" ng-click=\\\"vm.dataSource = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Disease</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataDisease.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataDiseases\\\" ng-click=\\\"vm.dataDisease = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Table</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataTable.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataTables\\\" ng-click=\\\"vm.dataTable = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Field</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataField.key}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataFields\\\" ng-click=\\\"vm.dataField = item\\\">{{item.key}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Table Info</h2><dl><dt>Date Uploaded</dt><dd>{{vm.dataTable.created}}</dd><dt>Record Count</dt><dd>{{vm.dataTable.records}}</dd><dt>Field Count</dt><dd>{{vm.dataFields.length}}</dd></dl></div></div></section></os-tray><section class=\\\"tray-content-block dataexplorer\\\"><div class=\\\"container-fluid\\\"><h2>Data Explorer</h2><div ng-repeat=\\\"item in vm.dataFields\\\" class=\\\"data-field\\\"><b>{{item.key}}</b><div style=\\\"width:30%; margin-top:10px\\\">{{item.name}}. {{item.desc}}</div><nvd3 options=\\\"vm.chartOptions\\\" data=\\\"item.values\\\"></nvd3></div></div></section>\");\n$templateCache.put(\"app/components/genesettest/genesettest.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><script src=\\\"https://cdn.plot.ly/plotly-latest.min.js\\\"></script><script src=\\\"/bower_components/highcharts/modules/heatmap.js\\\"></script><script src=\\\"/bower_components/highcharts/modules/exporting.js\\\"></script><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohort 1</label><p>{{vm.optCohort1}}</p></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohort 2</label><p>{{vm.optCohort2}}</p></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Gene Set Binomial Test</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"geneSetTestsModuleDiv\\\" class=\\\"genesettest\\\"><div id=\\\"geneSetTests_Div\\\"><div id=\\\"geneSetTestsControlsDiv\\\"><div class=\\\"navbar-collapse collapse navbar-inverse-collapse\\\"><div id=\\\"geneSetTestsInputsDiv\\\"><div id=\\\"geneSetTestsLaunchButtonDiv\\\"><form><div>{{vm.message}}</div><div id=\\\"heatMap\\\"></div></form></div></div></div></div></div></div></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Diagnosis\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Survival\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div></div><div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource.name}} {{vm.datasource.source}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"></table></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12 form-item\\\"><label>Patient Selection</label><div ng-repeat=\\\"item in vm.legendNodes\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}}</div></div><div class=\\\"col-xs-12 form-item\\\"><label>Edge Visibility</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar\\\" style=\\\"border-color:{{item.color}};position:relative;background-color:#FFF;padding:2px 10px;line-height:25px;\\\">{{item.name}} <label class=\\\"switch {{item.class}}\\\" style=\\\"float:right\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\" ng-change=\\\"vm.edgeToggle(item)\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optCommandMode.name==\\'Sequential\\'\\\"><label>Commands</label><br><a ng-click=\\\"vm.cmd(\\'ShowSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideSelectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Selected</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Edges of Unselected</a> <a ng-click=\\\"vm.cmd(\\'HideAllEdges\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide All Edges</a> <a ng-click=\\\"vm.cmd(\\'SelectInverse\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Invert Node Selection</a> <a ng-click=\\\"vm.cmd(\\'SelectConnected\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Select Connected Nodes</a> <a ng-click=\\\"vm.cmd(\\'HideUnselectedNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Hide Unselected Nodes</a> <a ng-click=\\\"vm.cmd(\\'ShowAllNodes\\')\\\" class=\\\"markers-command hvr-sweep-to-right\\\">Show All Nodes</a></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Command Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optCommandMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCommandModes\\\" ng-click=\\\"vm.optCommandMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"padding-right:30px;\\\">{{vm.optPatientColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientColors\\\" ng-click=\\\"vm.optPatientColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\" style=\\\"padding-left:5px\\\"><label>Lock Selections</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'patient\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Patient Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockPatients\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockPatients\\\"></i> Patients</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.lock(\\'gene\\')\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Gene Selection Lock\\\"><i class=\\\"fa fa-unlock\\\" ng-show=\\\"!vm.lockGenes\\\"></i> <i class=\\\"fa fa-lock\\\" ng-show=\\\"vm.lockGenes\\\"></i> Genes</button></div></div><div class=\\\"col-xs-12 form-item\\\" style=\\\"padding-left:5px\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.reset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.zoom.fit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Selected</button></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"Genes or Patients\\\"></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource.name}} {{vm.datasource.source}}</h3></div></section><div id=\\\"modalEdge\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-body\\\"><h2 style=\\\"margin-top:0px;\\\">Your request would add {{vm.edgeCounts.total}} edges to the graph.</h2><p>To improve performance + readability you may want to disable some of the edges.</p><div class=\\\"input-group\\\" ng-repeat=\\\"item in vm.optEdgeColors | filter:{show:true}\\\"><label class=\\\"switch {{item.class}}\\\"><input type=\\\"checkbox\\\" class=\\\"switch-input\\\" ng-model=\\\"item.show\\\"> <span class=\\\"switch-label\\\" data-on=\\\"On\\\" data-off=\\\"Off\\\"></span> <span class=\\\"switch-handle\\\"></span></label> <span style=\\\"padding-left:20px;\\\">{{item.name}} ({{vm.edgeCounts[item.abv]}})</span></div></div><button class=\\\"btn btn-default\\\" style=\\\"position:absolute;right:10px;bottom:10px;\\\" ng-click=\\\"vm.filterModelEdge()\\\">Continue</button></div></div><ul id=\\\"gene-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxGeneShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandGene\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><ul id=\\\"patient-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxPatientShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandPatient\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><section ng-show=\\\"vm.gene\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.gene.name}}</li><li>CnGain.1: {{vm.gene.cng1}}</li><li>CnGain.2: {{vm.gene.cng2}}</li><li>CnLoss.1: {{vm.gene.cnl1}}</li><li>CnLoss.2: {{vm.gene.cnl2}}</li></ul></div></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul></div></div></section></div>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"></span> <span class=\\\"oncoprint-label-col1\\\" id=\\\"legend\\\"></span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"font-size:150%\\\">Please select and send up to 350 genes and patients from another tab, such as Markers and Patients, to populate the display.</div><div id=\\\"oncoprintErrorSection\\\" style=\\\"font-size:150%\\\" ng-show=\\\"vm.errorMessage!=\\'\\'\\\">{{vm.errorMessage}}</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource.name}} {{vm.datasource.source}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/summary/summary.html\",\"<div class=\\\"summary\\\"></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Patients Display</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span> <span class=\\\"tool-menu-beta\\\" ng-if=\\\"tool.beta\\\" style=\\\"color:red\\\">(Beta)</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}