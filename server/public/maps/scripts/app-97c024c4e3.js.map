{"version":3,"sources":["scripts/app-97c024c4e3.js"],"names":["angular","module","tray","TrayController","$timeout","vm","this","trayClass","Math","random","toString","substring","iconClass","isLocked","toggle","elTray","element","elIcon","elContent","content","addClass","removeClass","attr","unbind","mouseOver","mouseOut","change","bind","$inject","directive","restrict","templateUrl","scope","caption","controller","controllerAs","bindToController","replace","transclude","tools","ToolsController","osApi","$state","$stateParams","query","beta","then","response","data","explore","tool","datasource","go","getDataSource","key","toolmenu","ToolMenuController","timelines","TimelinesController","osHistory","$scope","$window","$document","moment","d3","saveSelected","selectedIds","d3Bars","selectAll","map","p","__data__","id","length","addPatientSelection","optCohortMode","name","draw","isUndefined","dataProcessed","dataPatients","dataEvents","d3ScaleX","d3ScaleY","minZoom","selShow","selPatient","selEvent","selFields","optCohortModes","timescaleunit","timescales","timescale","features","feature","filters","filter","events","sorts","sort","align","zoom","brush","elChart","d3Chart","select","append","style","width","d3Axis","class","shape-rendering","stroke-width","stroke","fill","d3BarsSvg","d3BarsBackground","height","innerHeight","getPatientSelection","ids","zoomed","event","shiftKey","scale","translate","ch","rh","patients","dh","rowH","rowsVisible","rowOffset","abs","y","linear","range","domain","brushing","onBrushStart","sourceEvent","target","clear","call","onBrush","extent","lower","floor","upper","each","d","i","firstChild","classed","onBrushEnd","hRow","hChart","wChart","innerWidth","processData","bounds","nice","rows","exit","remove","enter","on","transform","selected","indexOf","e","cols","filteredEvents","PatientID","Name","fields","field","Fields","isArray","push","value","$apply","transition","color","endValue","startValue","x","round","daysToUnit","tlScale","svg","axis","orient","ticks","tickFormat","pow","behavior","processedData","patient","dead","hasOwnProperty","a","b","calcEvents","index","forEach","dateEvents","dateEvent","evt","timeFn","start","end","reduce","prev","current","patientMinMax","min","max","Infinity","status","rv","processEventData","Object","keys","v","__color","processFeatureData","processPatientData","val","m","mf","dateSingle","eventOrder","date","unix","eventID","endDates","startDates","sd","ed","concat","setBusy","setDataset","getTimelines","log","duration","asDays","payload","pts","eventTypes","Status","Dead","unshift","$watchGroup","$watch","onPatientSelectionChange","add","selection","resize","updateEventColor","item","survival","SurvivalController","getPatientHistoryTable","tbl","getCalculatedSurvivalCurves","r","login","SubnavController","toolsClick","cohortClick","toggleFilter","PlsrController","$sce","_","addGeneSelection","node","toUpperCase","setSelected","xScale","yScale","xMax","yMax","d3Tooltip","deathMinFilter","deathMinValue","deathMaxFilter","deathMaxValue","survivalMinFilter","survivalMinValue","survivalMaxFilter","survivalMaxValue","geneSets","geneSet","frame","tip","getGeneSelection","mtx","rownames","setBusyMessage","getPLSR","getGeneSetNames","getSummarizedPLSRPatientAttributes","AgeDx","Survival","update","onGeneSelectionChange","setScale","vectors","genes","bv","circles","cx","cy","html","pageX","pageY","modal","url","trustAsResourceUrl","delay","lines","x1","y1","x2","y2","text","text-anchor","factors","low","Number","high","getCalculatedPLSR","loadings","loadingNames","vectorNames","maxValue","debounce","Pca3dController","THREE","animate","requestAnimationFrame","controls","toggleClass","rawData","getPCA","getCalculatedPCA2","pc1","pc2","scores","scene","Scene","camera","PerspectiveCamera","position","z","renderer","WebGLRenderingContext","WebGLRenderer","antialias","CanvasRenderer","setPixelRatio","devicePixelRatio","setSize","domElement","sphereThree","numSphere","sphereGeometry","SphereGeometry","sphereMaterial","MeshBasicMaterial","idSphere","Mesh","datum","render","OrbitControls","addEventListener","PcaController","dataset","xAxis","yAxis","d3yAxis","d3xAxis","search","getCalculatedPCA","pathways","PathwaysController","cytoscape","skipSave","csChart","$","ele","startBatch","deselect","endBatch","getStyle","darkblue","red","purple","green","selector","text-valign","text-halign","shape","background-color","border-width","border-color","line-color","line-style","target-arrow-shape","target-arrow-color","display","overlay-opacity","overlay-color","font-size","border-style","source-arrow-shape","source-arrow-color","markersNetwork","linkTitle","links","center","term","len","nodes","unselect","substr","result","container","elements","maxZoom","layout","fit","cyTarget","nodeType","pmid","source","osSound","beep","_beep","play","Audio","service","oncoscape","SockJS","$rootScope","$q","$log","$location","dataSource","callbacks","setDataSource","requestId","getRequestId","socket","onmessage","fromJson","isDefined","cmd","callback","resolve","error","request","ds","deferred","defer","readyState","onopen","send","toJson","promise","factory","$http","protocol","host","port","queryString","req","table","encodeURIComponent","JSON","stringify","method","signals","_geneSelections","desc","_geneIndex","_patientSelections","_patientIndex","_onPatientAdd","Signal","_onPatientSelectionChange","_onGeneAdd","_onGeneSelectionChange","setGeneSelection","dispatch","getGeneSelections","difference","time","format","getGeneSelectionLast","getGeneSelectionNext","setPatientSelection","getPatientSelections","getPatientSelectionLast","getPatientSelectionSecondLast","getPatientSelectionNext","removeListeners","api","onPatientAdd","onGeneAdd","osSocket","osHttp","getDataSources","_dataSources","_dataSource","onDataSource","userApi","onLogin","onLogout","_user","password","authenticated","token","datasets","_domains","logout","user","username","res","success","getDomains","getUser","getUserApi","_userApi","show","hide","showFilter","slideToggle","hideFilter","getTools","dataPackage","getDataManifest","datasetName","durationFormat","getPatientHistoryDxAndSurvivalMinMax","getSampleDataFrame","getSampleCategorizationNames","getSampleCategorization","names","getMarkersNetwork","getDrugGeneInteractions","getCanonicalizePatientIDsInDataset","patientIds","getGeneSetGenes","getOncoprintDataSelection","matrixName","factorCount","attrs","title","sampleIDs","getCalculatedTimelines","getModuleModificationDate","getPathway","getMrnaData","entities","getCnvData","getMutationData","getOncoprint","geneSetAndPatients","patientIdsAndGenes","getGeneSetTest","getGeneSetScore","Group1","Group2","group1","group2","geneset","oncoprint","OncoprintController","displayOncoprint","msg","empty","errorMessage","parse","console","setState","processed_data","onc","Oncoprint","create","suppressRendering","when","data_gene_map","obj","gene","track_id","data_gene","Date","now","addTrack","label","removable","setRuleSet","GENETIC_ALTERATION","useSameRuleSet","setTrackData","releaseRendering","click","toggleCellPadding","setZoom","allOncoLegendBlocks","allOncoLegendLabels","j","appendChild","elControl","elInstructions","elLegend","selectedPatientIds","selectedGeneIds","geneAndPatients","config","self","getTrackId","utils","makeIdCounter","id_order","inverted_id_order","visible_id_order","visible_inverted_id_order","hidden_ids","track_groups","track_group_sort_order","sort_direction","tracks","sort_config","type","cell_padding_on","true_cell_width","cell_width","zoomed_cell_width","trigger","SET_CELL_PADDING","getCellPadding","ceil","cell_padding","getZoom","clamp","updateZoomedCellWidth","updateZoom","SET_ZOOM","increaseZoom","decreaseZoom","getFullCellWidth","getZoomedCellWidth","getCellHeight","cell_height","getTrackHeight","track_height","getTrackPadding","track_padding","getFilteredIdOrder","data_filter_fn","track_ids","getTracks","getTrackDatum","getIdOrder","getInvertedIdOrder","getVisibleIdOrder","getVisibleInvertedIdOrder","updateVisibleIdOrder","invert_array","SET_VISIBLE_ID_ORDER","setIdOrder","slice","SET_ID_ORDER","hideIds","clear_existing","showIds","getTopmostTrack","setTrackSortComparator","cmp","sort_cmp","getTrackSortComparator","getTrackSortDirection","setTrackSortDirection","dir","setTrackGroupSortOrder","order","getTrackGroupSortOrder","getTrackSortOrder","ret","getTrackGroups","group_id","setSortConfig","sortById","sortBy","identity","reverse","sortByTrack","track_id_list","cmp_list","lexicographically_ordered_cmp","id1","id2","cmp_result","_len","d1","d2","d1_undef","d2_undef","isFinite","stableSort","group","ifndef","extend","defaultTrackConfig","id_data_map","ADD_TRACK","removeTrack","track","track_group","getContainingTrackGroup","old_position","splice","REMOVE_TRACK","reference","flatten","find","grp","moveTrack","new_position","moved_tracks","MOVE_TRACK","getTrackLabel","getTrackTooltip","tooltip","setTrackTooltip","getTrackData","id_accessor","getTrackDatumIdAccessor","current_id_order","current_inverted_id_order","SET_TRACK_DATA","datum_id","getTrackDatumDataKey","datum_data_key","getTrackDatumIdKey","datum_id_key","setTrackDatumIdKey","isTrackRemovable","isTrackSortDirectionChangable","sort_direction_changable","clearData","oncoprint_events","oncoprint_utils","RuleSet","oncoprint_RuleSet","defaultOncoprintConfig","legend","hiddenOncoprintConfig","pre_track_padding","undefined","CATEGORICAL_COLOR","GRADIENT_COLOR","BAR_CHART","container_selector_string","OncoprintSVGRenderer","label_font","onc_dev","ren_dev","params","target_track_id","source_track_id","toSVG","setLegendVisible","visible","FINISHED_RENDERING","CONTENT_AREA_MOUSEENTER","CONTENT_AREA_MOUSELEAVE","OncoprintRenderer","track_cell_selections","track_cells","active_rule_set_rules","toolbar_container","label_div","label_drag_div","label_container","cell_container","cell_container_node","cell_div","legend_table","document_fragment","percent_altered_max_width","textWidth","getLabelFont","altered_data_percentage","cell_tooltip_html","content_area","LABEL_AREA_CONTAINER_CLASS","CELL_AREA_CONTAINER_CLASS","cell_column_highlight","COLUMN_HIGHLIGHT_CLASS","getCellAreaHeight","CELL_AREA_CLASS","cell_mouseover_div","calculateVisibleInterval","clipAndPositionCells","mouseMove","prev_track","prev_cell_index","prev_dom","column_highlight_timeout","highlighted_col_cells","qtip","my","at","viewport","window","classes","CELL_QTIP_CLASS","border","fixed","hover_cell","dom","finish","unhover_cell","clear_and_unhover","clearTimeout","cell","margin","mouseX","mouseY","track_cell_tops","getTrackCellTops","closest_track_dist","POSITIVE_INFINITY","closest_track","top","dist","cell_unit","cell_index","cell_id","track_cell","setTimeout","cells","hover","getTrackButtonCSSClass","stop","fadeTo","fadeOut","rule_sets","removeTrackCells","removeTrackLabels","removeTrackButtons","computeTrackCellTops","renderTrackLabels","renderTrackButtons","resizeLabelDiv","resizeCellDiv","drawCells","computeAlteredDataPercentage","renderLegend","resizeCells","LABEL_DRAGGING_CLASS","prototype","rule_set","getRuleSet","alteredData","num_altered","percent_altered","getAlteredDataPercentage","cell_ctr_rect","getBoundingClientRect","visible_interval","scrollLeft","right","left","getVisibleInterval","cellRenderTarget","document","createDocumentFragment","ready","getRuleSetId","getLabelDiv","getLabelDragDiv","getCellAreaWidth","getLabelAreaWidth","getLabelAreaHeight","div","getTrackLabelCSSSelector","render_whole_labels","label_tops","getTrackLabelTops","label_area_width","percent_altered_left","label_top","label_text","getTrackLabelCSSClass","disp_label_text","max_label_length","span","dragLabel","button_class","new_btn","imgs","descs","current_sort_setting","new_width","getCellCSSClass","getTrackCellCSSClass","drawTrackCells","fragment","cell_class","track_cell_class","bound_svg","apply","force","display_all","interval_width","interval_number","cell_x","getCellXArray","id_key","prev_interval_number","new_x","disp","new_disp","isNaN","exclude_from_legend","include_all","rendered","rule_set_id","active_rules","track_map","tr","label_header","getLegendLabel","legend_body_td","legend_div","getLegendDiv","d3SelectChildren","first_track","last_track","all_track_tops","track_tops","group_track_tops","label_area_height","drag_bounds","getRenderedTrackHeight","$label_drag_div","new_pos","moveHandler","stopPropagation","preventDefault","mouse_y","sortedIndex","mouseUpHandler","off","one","full_labels","root","offset","createElementNS","text_elt","font","weight","size","pos","cell_elt","cell_rect","cell_dim","g","appendD3SVGElement","outline_styles","trim","tagName","toLowerCase","elt","drawOncoprint","_state","split","MetadataController","colnames","dtTable","dataTable","paging","markers","MarkersController","signal","over","out","cyChart","selection-box-color","selection-box-border-color","selection-box-border-width","selection-box-opacity","hideEdgesOnViewport","hideLabelsOnViewport","textureOnViewport","motionBlur","optGeneSets","optGeneSet","optPatientLayouts","optPatientLayout","optDatasets","optDataset","all","$fields","results","layouts","reset","chart","process","chromosomes","chromosome","grabbable","locked","selectable","edgeType","sizeEle","degree","sizeBdr","sizeLbl","subType","q","c","edges","worker","Worker","setGeneSet","postMessage","setPatientLayout","setOptions","collection","geneIds","LoginController","domains","hasError","landing","LandingController","history","HistoryController","initViewState","diagnosisMin","diagnosisMinValue","diagnosisMax","diagnosisMaxValue","survivalMin","survivalMax","detail","initDataTable","columns","fn","DataTable","ext","settings","parseFloat","initEvents","applyFilter","o","init","defaultContent","f","$limit","help","HelpController","videos","img","header","HeaderController","showTools","showMenu","logoutClick","transitionTo","genesettest","GenesettestController","cohort1","cohort2","message","optCohort1","optCohort2","calculateGeneSetScore","drawHeatMap2","pt","expressionData","highcharts","marginTop","marginBottom","plotBorderWidth","categories","lineWidth","lineColor","colorAxis","minColor","maxColor","verticalAlign","symbolHeight","formatter","series","point","borderWidth","summary","analysisData","footer","FooterController","DatasourceController","DataExplorerController","dataSources","dataDiseases","dataDisease","dataTables","dataFields","dataField","bar","bottom","showValues","valueFormat","axisLabel","axisLabelDistance","chartOptions","toolTipContentFunction","graph","xFunction","yFunction","diseases","tables","cohorts","CohortsController","selections","close","setSelection","isDragable","draggable","keypress","ctrlKey","keyCode","cohortBuilder","CohortBuilderController","chain","pluck","uniq","where","disease","created","records","runBlock","$exceptionHandler","onerror","fileName","lineNumber","columnNumber","Error","$on","toState","toParams","authenticate","run","routerConfig","$stateProvider","$urlRouterProvider","state","template","otherwise","constant","in_min","in_max","out_min","out_max","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-97c024c4e3.js","sourcesContent":["(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape', [\n            'ngAnimate',\n            'ngCookies',\n            'ngTouch',\n            'ngSanitize',\n            'ngMessages',\n            'ngAria',\n            'ngResource',\n            'ui.router',\n            'ui.bootstrap',\n            'ui-rangeSlider',\n            'ui.bootstrap.contextMenu',\n            'nvd3',\n            'toastr'\n        ]);\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTray', tray);\n\n    /** @ngInject */\n    function tray() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tray/tray.html',\n            scope: {\n                caption: '@',\n                content: '@',\n                change: '&'\n\n            },\n            controller: TrayController,\n            controllerAs: 'vm',\n            bindToController: true,\n            replace: true,\n            transclude: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TrayController($timeout) {\n\n\n            var vm = this;\n            vm.trayClass = Math.random().toString(36).substring(3);\n            vm.iconClass = Math.random().toString(36).substring(3);\n            \n\n            var isLocked = true;\n            vm.toggle = function(){\n                var elTray = angular.element(\".\"+vm.trayClass);\n                var elIcon = angular.element(\".\"+vm.iconClass);\n                var elContent = angular.element(\".\"+vm.content);\n\n                isLocked = !isLocked;\n                elIcon\n                    .addClass(isLocked ? 'fa-lock' : 'fa-unlock-alt')\n                    .removeClass(isLocked ? 'fa-unlock-alt' : 'fa-lock');\n\n                elTray.attr(\"locked\", isLocked ? \"true\" : \"false\");\n\n                if (isLocked) {\n                    elContent\n                        .removeClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .unbind(\"mouseover\", mouseOver)\n                        .unbind(\"mouseout\", mouseOut)\n                        .removeClass(\"tray-collapsed\");\n                    $timeout(function(){\n                        vm.change();\n                    });\n                        \n                } else {\n                    elContent\n                        .addClass(\"tray-content-block-collapsed\");\n                    elTray\n                        .addClass(\"tray-collapsed\")\n                        .bind(\"mouseover\", mouseOver)\n                        .bind(\"mouseout\", mouseOut);\n                    $timeout(function(){\n                        vm.change();\n                    });\n                }\n            };\n\n            \n\n            var mouseOver = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .removeClass(\"tray-collapsed\");\n            }\n            var mouseOut = function(){\n                angular.element(\".\"+vm.trayClass)\n                    .addClass(\"tray-collapsed\");\n            }\n        }\n    }\n\n})();\n\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTools', tools);\n\n    /** @ngInject */\n    function tools() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/tools/tools.html',\n            controller: ToolsController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolsController(osApi, $state, $stateParams) {\n\n            var vm = this;\n            osApi.query(\"os_tools\",{beta:false}).then(function(response){\n                vm.tools = response.data;\n            });\n\n            vm.explore = function(tool, datasource) {\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().key\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osToolMenu', toolmenu);\n\n    /** @ngInject */\n    function toolmenu() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/toolmenu/toolmenu.html',\n            controller: ToolMenuController,\n            controllerAs: 'vm',\n            scope:{\n                datasource: '@',\n                change: '&'\n            },\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function ToolMenuController(osApi, $state) {\n\n      \n            var mouseOver = function(){\n                angular.element(\".tool-menu\")\n                    .removeClass(\"tray-collapsed-left\");\n            }\n\n            var mouseOut = function(){\n                angular.element(\".tool-menu\")\n                    .addClass(\"tray-collapsed-left\");\n            }\n\n            var elTray = angular.element(\".tool-menu\");\n                elTray\n                    .bind(\"mouseover\", mouseOver)\n                    .bind(\"mouseout\", mouseOut);\n            \n            var vm = this;\n            osApi.query(\"os_tools\",{beta:false}).then(function(response){\n                vm.tools = response.data;\n            });\n\n            vm.explore = function(tool) {\n                vm.change();\n                $state.go(tool, {\n                    datasource: osApi.getDataSource().key\n                });\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osTimelines', timelines);\n\n    /** @ngInject */\n    function timelines() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/timelines/timelines.html',\n            controller: TimelinesController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function TimelinesController(osApi, osHistory, $state, $scope, $stateParams, $window, $document, moment, d3) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Variables\n            var dataProcessed;\n            var dataPatients;\n            var dataEvents;\n            var d3ScaleX;\n            var d3ScaleY;\n            var minZoom = 0;\n\n\n            // View Model\n            var vm = this;\n                vm.selShow = false;\n                vm.selPatient;\n                vm.selEvent;\n                vm.selFields = [];\n                vm.datasource = $stateParams.datasource;\n                vm.optCohortModes;\n                vm.optCohortMode;\n                vm.timescaleunit;\n                vm.timescales;\n                vm.timescale;\n                vm.features;\n                vm.feature;\n                vm.filters;\n                vm.filter;\n                vm.events;\n                vm.sorts;\n                vm.sort;\n                vm.align;\n                vm.optCohortModes = [{name:\"Highlight\"},{name:\"Filter\"}];\n                vm.optCohortMode = vm.optCohortModes[0];\n          \n            // Elements\n            var elChart = angular.element(\"#timelines-chart\");\n            var d3Chart = d3.select(\"#timelines-chart\").append(\"svg\")\n                .attr(\"id\", \"chart\")\n                .style({width:'100%'});\n            var d3Axis = d3Chart.append(\"g\")\n                .attr({\"class\":\"axis\"})\n                .style({'shape-rendering': 'crispEdges',\"stroke-width\": \"1.0\", \"stroke\": \"#000\",\"fill\": \"none\"});\n            var d3BarsSvg = d3Chart.append(\"svg\")  // Used To Clip Overflow\n                .attr({\"class\":\"bars-svg\"});\n            var d3BarsBackground = d3BarsSvg.append(\"rect\") // Serves As Hit Area For Zoom\n                .attr({\"width\": elChart.width(), \"height\": $window.innerHeight - 75 - 10 - 130-50 })\n                .style({fill:\"#FFFFFF\"}); //,\"cursor\": \"move\" });\n            var d3Bars = d3BarsSvg.append(\"g\")\n                .attr({\"class\":\"bars\"});  // Container For Bars\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                selectedIds = d3Bars.selectAll(\".timeline-selected\")[0].map( function (p) { return p.__data__.id; }  )\n                if (selectedIds.length==0) selectedIds = d3Bars.selectAll()[0].map( function (p) { return p.__data__.id; }  )\n                osHistory.addPatientSelection(\"Timelines\", \"Manual Selection\",\n                    selectedIds\n                );\n                if (vm.optCohortMode.name==\"Filter\") draw();\n            }\n\n            var zoom;\n            var zoomed = function(){\n                if (d3.event.shiftKey) return;\n\n                var scale = minZoom * d3.event.scale;\n                if (scale<minZoom) scale = minZoom;\n                var translate= d3.event.translate[1];\n\n                var ch = $window.innerHeight - 75 - 10 - 130- 50;\n                var rh = (dataProcessed.patients.length*20) * scale;\n                var dh = ch - rh;   // Delta height - Used For Offset\n\n                if (translate>0) translate=0;\n                if (translate<dh) translate=dh;\n\n                zoom.translate([d3.event.translate[0],translate]);\n                var rowH = (20 * scale);\n                var rowsVisible = (ch / rowH);\n                var rowOffset = Math.abs(translate / rowH);\n                  brush.y(d3.scale.linear().range([0,ch]).domain([rowOffset, rowOffset+rowsVisible]))\n\n                \n                d3Bars.attr(\"transform\",\"translate(1,\"+translate+\")scale(1,\" + scale + \")\");\n            };\n\n            var brush;\n            var brushing = false;\n            var onBrushStart = function(){\n                if (!d3.event.sourceEvent.shiftKey) {\n                    d3.event.target.clear();\n                    d3.select(this).call(d3.event.target);\n                }else{\n                    brushing = true;\n                }\n            }\n            var onBrush = function(){\n                if (!brushing) return;\n                var extent = brush.extent();\n                var lower = Math.floor(extent[0][1]);\n                var upper = Math.floor(extent[1][1]);\n                d3Bars.selectAll(\"g.timeline\")\n                    .each( function(d, i){\n                        d3.select(this.firstChild).classed(\"timeline-selected\", (i>=lower && i<=upper) );\n                    });\n            }\n            var onBrushEnd = function(){\n                if (!brushing) return;\n                brushing = false;\n                d3.event.target.clear();\n                d3.select(this).call(d3.event.target);    \n                saveSelected();\n            }\n\n\n            var draw = function(){\n\n                // Helpers\n                var hRow = 20;\n                var hChart = $window.innerHeight - 75 - 10 - 130;\n                var wChart = $window.innerWidth - 300;\n                if (wChart > 760)  wChart -= 140;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    wChart += 300;\n                } \n                \n                dataProcessed = processData(dataPatients, vm.align, vm.sort);\n                d3ScaleX = d3.scale.linear().domain( dataProcessed.bounds ).range([10, wChart-10]).nice();\n                d3ScaleY = d3.scale.linear().domain([0, dataProcessed.patients.length]).range(0,hChart-50).nice();\n                minZoom = (hChart-50) / (dataProcessed.patients.length * 20)\n                \n                // Chart\n                d3Chart.attr( {'height': hChart+\"px\"})\n                d3BarsSvg.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3BarsBackground.attr( {'height' : (hChart-50)+\"px\", 'width':wChart+\"px\"} );\n                d3Bars.attr(\"transform\",\"scale(1,\" + minZoom + \")\");\n\n                // Rows\n                var rows = d3Bars.selectAll(\"g.timeline\").data( dataProcessed.patients );\n                    rows.exit().remove();\n                    rows.enter().append(\"g\").attr({ 'class' : 'timeline' })\n                        .on(\"mousedown\", function(){\n                            if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                        })\n                        \n                    // rows\n                        .attr({\n                            'width': wChart,\n                            'height': hRow,\n                            'transform': function(d, i) { return \"translate(0,\" +  (i * hRow)+ \")\"; }\n                        })\n                        .append(\"rect\")\n                        .attr({\n                            'class': 'timeline-row',\n                            'width': 0,\n                            'height': hRow\n                        });\n\n\n                    if (vm.optCohortMode.name==\"Highlight\" && selectedIds.length>0){\n                        rows\n                            .each( function(d){\n                                var selected = (selectedIds.indexOf(d.id)>=0);\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", selected );\n                        });\n                    }else{\n                        rows\n                            .each( function(){\n                                var e = d3.select(this.firstChild);\n                                e.classed(\"timeline-selected\", false );\n                        });\n                    }\n\n                // Columns\n                var cols = rows.selectAll(\"rect.event\").data( function(d) { return d.filteredEvents; });\n                    cols.exit().remove();\n                    cols.enter().append(\"rect\").attr({'class':'event'})\n                        .on(\"mouseover\", function(){\n                                var event = dataEvents[this.__data__.id];\n                                vm.selPatient = event.PatientID;\n                                vm.selEvent = event.Name;\n                                var fields = [];\n                                for(var field in event.Fields) {\n                                    if (event.Fields[field]!=null){\n                                        if ( field==\"date\" && angular.isArray(event.Fields[field]) ){\n                                            fields.push( {name:\"Start Date\", value:event.Fields[field][0] })\n                                            fields.push( {name:\"End Start\", value:event.Fields[field][1] })\n                                        }else{\n                                            fields.push(\n                                                {name:field, value:event.Fields[field]}\n                                            );\n                                        }\n                                    }\n                                }\n                                vm.selShow = true;\n                                vm.selFields = fields;\n                                $scope.$apply();\n                            })\n                            .on(\"mouseout\", function(){\n                                vm.selShow = false;\n                                $scope.$apply();\n                            });\n                    cols.transition()\n                        .style({'fill':function(d){ return d.color; }})\n                        .attr({\n                            'height':function(d){ return (d.name == \"Radiation\" || d.name==\"Drug\") ? hRow/2 : hRow; },\n                            'width':function(d){ return (d.endValue==null) ? 3 : (d3ScaleX(d.endValue) - d3ScaleX(d.startValue)); },\n                            'x': function(d) { return Math.round(d3ScaleX(d.startValue)); },\n                            'y': function(d) { return ((d.name == \"Radiation\") ? hRow/2 : 0); }\n                        });\n\n                    var daysToUnit = function(d){\n                        if (Math.abs(d)==0) return d;\n                        if (Math.abs(d)<30) return d+\" Days\";\n                        if (Math.abs(d)<360) return Math.round( (d/30.4) * 10 ) / 10 + \" Months\";\n                        return Math.round( (d/365) * 10 ) / 10 + \" Years\";\n                    }\n                    var tlScale = d3.svg.axis()\n                        .scale(d3ScaleX)\n                        .orient(\"bottom\")\n                        .ticks(8);\n\n                    if (vm.timescale.name=='Log'){\n                        tlScale = tlScale.tickFormat(function (d) { \n                            return daysToUnit(Math.round((d<0 ? -1 : 1) * (Math.pow(2, (Math.abs(d)))-1) *100)/100);\n                        });\n                    }else{\n                        tlScale = tlScale.tickFormat(function (d) {\n                            return daysToUnit(d);\n                        });\n                    }\n\n                // Brush\n                brush = d3.svg.brush()\n                    .x(d3ScaleX)\n                    .y(d3.scale.linear().range([0,hChart]).domain([0, dataProcessed.patients.length]))\n                    .on(\"brush\", onBrush)\n                    .on(\"brushstart\", onBrushStart)\n                    .on(\"brushend\", onBrushEnd);\n                d3BarsBackground.call(brush);\n\n                // Clear Selections On MouseDown\n                d3BarsBackground.on(\"mousedown\", function(){\n                    if (!d3.event.shiftKey) d3Bars.selectAll(\".timeline-selected\").classed(\"timeline-selected\", false);\n                });\n\n                // Zoom\n                zoom = d3.behavior.zoom()\n                    .x( d3ScaleX )\n                    .y( d3ScaleY )\n                    .translate([0,0])\n                    .scale(1, minZoom )\n                    .on(\"zoom\", zoomed);\n                d3BarsBackground.call(zoom);\n\n\n                // Axis\n                d3Axis.attr({\n                    \"class\": \"timeline-axis\",\n                    \"width\": 100,\n                    transform: function() { return \"translate(0,\" +  (hChart-50) + \")\"; }\n                });\n                d3Axis.call( tlScale );\n                \n            };\n\n\n\n            // Populates ProcessedData Object With Values Consistant With ViewState\n            var processData = function (data, align, sort){\n\n                    var processedData = {};\n\n                    // Store List Of Active Events\n                    processedData.events = vm.events.filter( function(events) { return events.selected; });\n\n                    // Remove Patients That Don't Have Align Property + Possibly !Selected\n                    processedData.patients = data.filter(function(patient){\n                        if (vm.filter.name==\"Only Alive\" && patient.dead) return false;\n                        if (vm.filter.name==\"Only Dead\" && !patient.dead) return false;\n                        if (!patient.hasOwnProperty(\"__\"+this.align)) return false;\n                        if (this.filter && this.ids){\n                            if (this.ids.indexOf(patient.id)==-1) return false;\n                        }\n                        return true;\n\n                    }, {'align':align.name, 'filter':(vm.optCohortMode.name==\"Filter\"), 'ids':selectedIds});\n\n                    // Sort Patients On Align Property    \n                    if (sort.name==\"Survival\"){\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            if (a.dead==b.dead){\n                                return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                            }else{\n                                return (a.dead) ? 1 : -1;\n                            }\n                            \n                        }, sort);\n                    }else{\n                        processedData.patients = processedData.patients.sort(function(a,b){\n                            return (a.calcEvents[sort.index].value>b.calcEvents[sort.index].value) ? 1 : -1;\n                        }, sort);\n                    }\n\n\n                    // Adjust Start + End Dates To Align Property\n                    processedData.patients.forEach(function(patient){\n\n                        patient.filteredEvents = patient.dateEvents.filter(function(dateEvent){\n                            for (var i=0; i<this.length; i++){\n                                if (this[i].name==dateEvent.name) return true;\n                            }\n                            return false;\n                        }, processedData.events);\n\n                        patient.filteredEvents.forEach(function(evt){\n                            evt.startValue = vm.timescale.timeFn(evt.start + this);\n                            evt.endValue = (evt.end!=null) ? vm.timescale.timeFn(evt.end + this) : null;\n                        }, -patient[\"__\"+this[\"align\"].name].start)\n\n                    }, {\"align\":align, \"events\":processedData.events});\n\n                    // Calculate Event Bounds Min, Max\n                    processedData.bounds = processedData.patients.reduce( function( prev, current ) {\n                        // Min Max For Individual Patients\n                        var patientMinMax = current.filteredEvents.reduce(function( prev, current ) {\n                            \n                            return [\n                                Math.min(current.startValue, prev[0]),\n                                Math.max((current.endValue==null) ? current.startValue : current.endValue, prev[1])\n                            ]\n\n                        }, [Infinity, -Infinity]);\n                        \n                        return [\n                            Math.min(patientMinMax[0], prev[0]),\n                            Math.max(patientMinMax[1], prev[1])\n                        ]   \n                    }, [Infinity, -Infinity] );\n                    return processedData;\n            };\n\n\n\n            // Initialize\n            (function(){\n\n                var color = function(d){\n                    var status = d.name;\n                    var rv = \n                        (status===\"Birth\") ?  \"#17becf\" : \n                        (status===\"Diagnosis\") ? \"#8c564b\" :\n                        (status===\"Pathology\") ? \"#7f7f7f\" :\n                        (status===\"Progression\") ? \"#1f77b4\" :\n                        (status===\"Absent\") ? \"#000000\" :\n                        (status===\"Status\") ? \"#bcbd22\" :\n                        (status===\"Radiation\") ? \"#e7969c\" :\n                        (status===\"Procedure\") ? \"#ff7f0e\" :\n                        (status===\"Encounter\") ? \"#d62728\" :\n                        (status===\"Drug\") ? \"#9467bd\" :\n                        \"black\";\n                        return rv;\n                };   \n\n                // Data Clean Up Functions\n                var processEventData = function(events){\n                    return Object.keys(events).map(function(v) {\n                            var rv =  { \"name\": v, \"selected\": true };\n                            rv.color = rv.__color = color(rv);\n                            return rv;\n                    });\n                };\n\n                var processFeatureData = function(patients){\n                    return patients[0].calcEvents.map(function(d, i) {\n                        return { \"name\": d.name, \"index\": i }\n                    });\n                };\n\n                var processPatientData = function(patients, dead){\n\n                    patients = Object.keys(patients).map(function(key) {\n                        var val = patients[key];\n                        val.id = key;\n                        return val;\n                    });\n                    for (var i = 0; i < patients.length; i++) {\n\n                        // Create References For Faster Subsequent Lookups\n                        var p = patients[i];\n                        var m = moment;\n                        var mf = \"YYYY-MM-DD\";\n\n\n                        // Map Start Dates\n                        var dateSingle =\n                            p.dateEvents\n                            .filter(function(d) {\n                                return d.eventOrder === 'single'\n                            })\n                            .map(function(d) {\n                                return {\n                                    \"start\": m(d.date, mf).unix(),\n                                    \"end\": null,\n                                    \"name\": d.name, \n                                    \"id\":d.eventID\n                                };\n                            });\n\n                        // Map Start + End Dates\n                        var endDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='end'; })\n                            .map(function(d){ return {\"end\":m(d.date, mf).unix(), \"id\":d.eventID}; });\n                        var startDates = p.dateEvents\n                            .filter(function(d) { return d.eventOrder==='start'; })\n                            .map(function(d){ return {\"start\":m(d.date, mf).unix(),\"name\":d.name, \"id\":d.eventID}; });\n                        startDates\n                            .forEach(function(sd){ sd.end = endDates\n                                .filter(function(ed) { return ed.id==sd.id} )[0].end });\n\n                        // Join Single + Multiple Date Events\n                        p.dateEvents = (startDates.length>0) ? startDates.concat(dateSingle) : dateSingle;\n                        p.dateEvents.forEach(function(d){\n                            d.color = color(d);\n                            p[\"__\"+d.name] = d;\n                            if (d.name==\"Status\"){\n                                p.dead = (dead.indexOf(d.id)!=-1);\n                            }\n                            \n                         });\n                    }\n                    return patients;\n                };\n\n                osApi.setBusy(true)(\"Loading Dataset\");\n                osApi.setDataset(vm.datasource).then(function() {\n                    osApi.getTimelines().then(function(response) {\n\n                        // TimeScales\n                        vm.timescales = [\n                            {name:'Log', \n                                timeFn: function(val){\n                                    return (val<0 ? -1 : 1) * Math.log(Math.abs((val*1000)/86400000)+1)/Math.log(2)\n                            }},\n                            {name:'Linear', \n                                timeFn: function(val){\n                                    return moment.duration(val*1000).asDays()\n                            }}\n                        ];\n                        vm.timescale = vm.timescales[0];\n\n                        // Clean Data + Set Default VM\n                        dataPatients = processPatientData(response.payload.pts, response.payload.eventTypes.Status.status.Dead);\n                        dataEvents = response.payload.events;\n                        vm.sorts = processFeatureData(dataPatients);\n                        \n                        vm.filters = [\n                            {name:'Alive + Dead'},\n                            {name:'Only Alive'},\n                            {name:'Only Dead'}\n                        ];\n                        vm.filter = vm.filters[0];\n\n\n                        var features = processFeatureData(dataPatients);\n                        features.unshift({index:-1, name:'None'});\n                        vm.features =  features;\n                        vm.feature = vm.features[0];\n                        vm.events = processEventData(response.payload.eventTypes);\n\n                        // Set Defaults Align By Drug, Order By Survial, Hide Birth\n                        vm.sort = vm.sorts[1];\n                        vm.events.forEach(function(e){\n                            if (e.name==\"Birth\") { e.selected = false; e.color = \"#FEFEFE\"; }\n                            if (e.name==\"Diagnosis\") this.align = e;\n                        }, vm);\n\n                        // Register Watch\n                        $scope.$watchGroup(['vm.feature', 'vm.sort', 'vm.align', 'vm.timescale', 'vm.filter'], draw);\n                        angular.element($window).bind('resize', draw);\n                        $scope.$watch(\"vm.optCohortMode\", draw );   // Triggers Inital Draw\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            draw();\n                        });\n                        osApi.setBusy(false);\n                    });\n                });\n            })();\n\n\n            // Event Handlers\n            vm.resize = function(){\n                draw();\n            }\n            vm.updateEventColor = function(item){\n                item.selected = !item.selected;\n                item.color = (item.selected) ? item.__color : \"#FEFEFE\";\n                draw();\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSurvival', survival);\n\n    /** @ngInject */\n    function survival() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/survival/survival.html',\n            controller: SurvivalController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SurvivalController(osApi, osHistory, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n\n            // Set Dataset \n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function() {\n                // If No Patients Are Selected, Fetch All Patients\n                if (osHistory.getPatientSelection()==null){\n                    osApi.getPatientHistoryTable(vm.datasource).then(function(response) {\n                        draw(response.payload.tbl.map( function (d) { return d[0]; }));\n                    });\n                }else{\n                    draw(osHistory.getPatientSelection().ids);\n                }\n            });\n\n            // Register History Component\n            osHistory.onPatientSelectionChange.add(function(selection){\n                draw(selection.ids)\n            });\n\n            // Draw\n            var draw = function(ids){\n                osApi.setBusy(true);\n                osApi.getCalculatedSurvivalCurves(ids, \"\").then(function(r){\n                    angular.element(\"#survival-img\").attr('src',r.payload);\n                    osApi.setBusy(false);\n                });\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osSubnav', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/subnav/subnav.html',\n            replace: true,\n            controller: SubnavController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function SubnavController(osApi, $state) {\n            \n            var vm = this;\n            vm.tool = \"Pathways\";\n            vm.filter = \"DemoDZ\";\n\n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: vm.datasource\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPlsr', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/plsr/plsr.html',\n            controller: PlsrController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PlsrController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $sce, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#plsr-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip plsr-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, brush;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.deathMinFilter = vm.deathMinValue = 45;\n            vm.deathMaxFilter = vm.deathMaxValue = 66;\n            vm.survivalMinFilter = vm.survivalMinValue = 3;\n            vm.survivalMaxFilter = vm.survivalMaxValue = 7;\n            vm.geneSets = [];\n            vm.geneSet = null;            \n            vm.frame;\n            vm.tip = null;\n\n            // History Integration\n            var selectedIds = (osHistory.getGeneSelection() == null) ? [] : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                var selected  = d3Chart.selectAll(\".plsr-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addGeneSelection(\"PLSR\", \"Manual Selection\",\n                    d3Chart.selectAll(\".plsr-node-selected\")[0].map(function(node){ \n                        return node.__data__.name.toUpperCase()\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length == 0) {\n                    d3Chart.selectAll(\".plsr-node-selected\").classed(\"plsr-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"plsr-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.name) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PLSR Matrix\");\n                osApi.getPLSR(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        osApi.setBusyMessage(\"Loading Patients\");\n                        osApi.getSummarizedPLSRPatientAttributes().then(function(response) {\n\n                            // Load Min Max Values\n                            var payload = response.payload;\n                            vm.deathMinValue = Math.floor(payload.AgeDx[0] / 365.24);\n                            vm.deathMaxValue = Math.floor(payload.AgeDx[4] / 365.24);\n                            vm.survivalMinValue = Math.floor(payload.Survival[0] / 365.24);\n                            vm.survivalMaxValue = Math.floor(payload.Survival[4] / 365.24);\n                            $scope.$watch('vm.geneSet', function() {\n                                vm.update();\n                            });\n\n                            // History\n                            osHistory.onGeneSelectionChange.add(function(selection) {\n                                selectedIds = selection.ids;\n                                setSelected();\n                            });\n                        });\n                    });\n                });\n            });\n\n\n            // API Call To Calculate PLSR\n            vm.update = function() {\n                osApi.setBusyMessage(\"Calculating PLSR\");\n                \n                var factors = [{\n                    name: \"Survival\",\n                    low: Number(vm.survivalMinFilter) * 365.24,\n                    high: Number(vm.survivalMaxFilter) * 365.24\n                }, {\n                    name: \"AgeDx\",\n                    low: Number(vm.deathMinFilter) * 365.24,\n                    high: Number(vm.deathMaxFilter) * 365.24\n                }];\n\n                osApi.getCalculatedPLSR(vm.geneSet, factors).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PLSR\");\n\n                    // Clean Up Data\n                    var payload = response.payload;\n                    var genes = payload.loadings.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.loadingNames);\n                    var vectors = payload.vectors.map(function(item, index) {\n                        item.name = this[index];\n                        return item;\n                    }, payload.vectorNames);\n                    var abs = payload.maxValue * 1.2;\n                    draw(abs, vectors, genes);\n                    osApi.setBusy(false);\n                });\n\n                function setScale() {\n                    width = $window.innerWidth - 400; \n                    if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                        width += 300;\n                    } \n                    height = $window.innerHeight - 190;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n\n                    d3Chart\n                        .attr(\"width\", '100%')\n                        .attr(\"height\", height);\n                    xScale = d3.scale.linear()\n                        .domain([-xMax, xMax])\n                        .range([0, width]).nice();\n\n                    yScale = d3.scale.linear()\n                        .domain([-yMax, yMax])\n                        .range([height, 0]).nice();\n                }\n\n                // Render\n                function draw(abs, vectors, genes) {\n\n                    xMax = abs * .9;\n                    yMax = abs * .9;\n                    setScale();\n\n                    // Brush\n                    brush = d3.svg.brush()\n                        .x(xScale)\n                        .y(yScale)\n                        .on(\"brushend\", function() {\n                            var bv = brush.extent();\n                            d3Chart.selectAll(\"circle\")\n                                .classed(\"plsr-node-selected\", function(d) {\n                                    return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                                });\n                            d3.select(this).transition().duration(300)\n                                .call(brush.extent([\n                                    [0, 0],\n                                    [0, 0]\n                                ]));\n                            saveSelected();\n                        });\n\n                    d3Chart.call(brush);\n\n                    // Circles\n                    var circles = d3Chart.selectAll(\"circle\").data(genes, function(d) { return d; });\n                    circles.enter()\n                        .append(\"circle\")\n                        .attr({\n                            \"class\": \"plsr-node\",\n                            \"cx\":  width * .5,\n                            \"cy\": height * .5,\n                            \"r\": 3\n                        })\n                        .style(\"fill-opacity\", \"0\")\n                        .on(\"mouseover\", function(d) {\n                            d3Tooltip.transition()        \n                                .duration(200)      \n                                .style(\"opacity\", 1);      \n                            d3Tooltip.html(d.name)  \n                                .style(\"left\", (d3.event.pageX+15) + \"px\")     \n                                .style(\"top\", (d3.event.pageY-15) + \"px\"); \n                        })\n                        .on(\"mouseout\", function() {\n                            d3Tooltip.transition()      \n                                .duration(500)      \n                                .style(\"opacity\", 0); \n                        })\n                        .on(\"click\", function(d) {\n                            angular.element('#plsr-webpage').modal();\n                            var url = \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + d.name;\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(url);\n                            });\n                        });\n                    circles.transition()\n                        .duration(750)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", function(d) {\n                            return xScale(d[0]);\n                        })\n                        .attr(\"cy\", function(d) {\n                            return yScale(d[1]);\n                        })\n                        .style(\"fill-opacity\", 1);\n\n                     circles.exit()\n                        .transition()\n                        .duration(600)\n                        .delay(function(d, i) {\n                            return i / 300 * 500;\n                        })\n                        .attr(\"cx\", width * .5)\n                        .attr(\"cy\", height * .5)\n                        .style(\"fill-opacity\", \"0\")\n                        .remove();\n\n                    // Lines\n                    var lines = d3Chart.selectAll(\"line\").data(vectors)\n                    lines.enter()\n                        .append(\"line\")\n                        .attr({\n                            \"class\": \"line\",\n                            \"stroke-width\": 3,\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": xScale(0),\n                            \"y2\": yScale(0)\n                        })\n                        .style(\"stroke\", function(d) {\n                            return (d.name.indexOf(\"Age\")) ? \"#1396de\" : \"#38347b\"\n                        });\n                    lines.transition()\n                        .duration(900)\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                    lines.exit().remove();\n\n                    // Text\n                    var text = d3Chart.selectAll(\"text\").data(vectors);\n                    text.enter()\n                        .append(\"text\")\n                        .attr({\n                            \"class\": \"text\",\n                            \"x\": width * .5,\n                            \"y\": height * .5,\n                            \"text-anchor\": function(v) { return (v[0] > 0) ? \"start\" : \"end\" }\n                        })\n                        .text(function(v) { return v.name; })\n                        .style({\n                            \"fill\": \"black\",\n                            \"text-anchor\": \"middle\"\n                        });\n\n                    text.transition()\n                        .duration(900)\n                        .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    text.exit().remove();\n                    setSelected();\n                }\n\n                vm.resize = function () {\n                    setScale();\n\n                    d3Chart.selectAll(\"circle\")\n                        .attr({\n                            \"cx\": function(d) { return xScale(d[0]); },\n                            \"cy\": function(d) { return yScale(d[1]); }\n                        });\n\n                    d3Chart.selectAll(\"text\")\n                       .attr({\n                            \"x\": function(v) { return xScale(v[0]); },\n                            \"y\": function(v) { return yScale(v[1]); }\n                        });\n\n                    d3Chart.selectAll(\"line\")\n                        .attr({\n                            \"x1\": xScale(0),\n                            \"y1\": yScale(0),\n                            \"x2\": function(v) { return xScale(v[0]); },\n                            \"y2\": function(v) { return yScale(v[1]); }\n                        });\n                };\n\n                // Listen For Resize\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n            };\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca3d', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca3d/pca3d.html',\n            controller: Pca3dController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function Pca3dController(osApi, $state, $stateParams, $timeout, $scope, d3, THREE, $window) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // State\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.toggleFilter = function() {\n                angular.element(\".container-filters\").toggleClass(\"container-filters-collapsed\");\n                angular.element(\".container-filter-toggle\").toggleClass(\"container-filter-toggle-collapsed\");\n            }\n            var rawData;\n\n            // Elements\n            var elChart = angular.element(\"#pca-chart\");\n\n\n            // Initalizae\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSet = vm.geneSets[0];\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA2(vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = response.payload[\"importance.PC1\"];\n                    vm.pc2 = response.payload[\"importance.PC2\"];\n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i){\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw()\n                    osApi.setBusy(false);\n                });\n            };\n\n            var scene = new THREE.Scene();\n            var camera = new THREE.PerspectiveCamera( 50, $window.innerWidth / $window.innerHeight, 0.1, 1000 );\n            camera.position.z = 60;\n            \n            var renderer = $window.WebGLRenderingContext ? new THREE.WebGLRenderer({ antialias: true }) : new THREE.CanvasRenderer();\n            renderer.setPixelRatio( $window.devicePixelRatio );\n            renderer.setSize( $window.innerWidth, $window.innerHeight );\n            elChart.append( renderer.domElement );\n\n\n\n            var draw = function(){\n                var sphereThree = [];\n                var numSphere = rawData.length;\n                var sphereGeometry = new THREE.SphereGeometry(.1, 8, 8);\n                var sphereMaterial = new THREE.MeshBasicMaterial({color: '#59a5fb'});//rgb(255, 0, 0)'});\n                for(var idSphere = 0; idSphere < numSphere; idSphere++){\n                    sphereThree[idSphere] = new THREE.Mesh(sphereGeometry, sphereMaterial);\n                    var datum = rawData[idSphere];\n                    sphereThree[idSphere].position.x = datum[0];\n                    sphereThree[idSphere].position.y = datum[1];\n                    sphereThree[idSphere].position.z = datum[2];\n                    scene.add(sphereThree[idSphere]);\n                }\n                render();\n            }\n            \n\n            var render = function () {\n\n//                requestAnimationFrame( render );\n\n                // if( !options.fixed ) {\n                //     mesh.rotation.x += 0.005;\n                //     mesh.rotation.y += 0.005;\n                // }\n\n\n                renderer.render( scene, camera );\n\n            };\n\n            function animate() {\n\n  requestAnimationFrame( animate );\n  controls.update();\n\n}\n\n\n\n  var controls = new THREE.OrbitControls( camera );\n  controls.addEventListener( 'change', render );\n    \n        \nanimate();\n            \n\n           \n            \n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPca', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pca/pca.html',\n            controller: PcaController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PcaController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, moment, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var d3Chart = d3.select(\"#pca-chart\").append(\"svg\").attr(\"id\", \"chart\");\n            var d3xAxis = d3Chart.append(\"g\");\n            var d3yAxis = d3Chart.append(\"g\");\n            var d3Tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip pca-tooltip\")\n\n            // Properties\n            var width, height, xScale, yScale, xMax, yMax, xAxis, yAxis;\n            var rawData;\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n            vm.search = \"\";\n\n            // History Integration\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n            function saveSelected() {\n                var selected = d3Chart.selectAll(\".pca-node-selected\")[0];\n                if (selected.length==0) return;\n                osHistory.addPatientSelection(\"PCA\", \"Manual Selection\",\n                    d3Chart.selectAll(\".pca-node-selected\")[0].map(function(node) {\n                        return node.__data__.id.toUpperCase();\n                    })\n                );\n            }\n            function setSelected() {\n                if (selectedIds.length==0) {\n                    d3Chart.selectAll(\".pca-node-selected\").classed(\"pca-node-selected\", false);\n                } else {\n                    d3Chart.selectAll(\"circle\").classed(\"pca-node-selected\", function() {\n                        return (selectedIds.indexOf(this.__data__.id) >= 0)\n                    });\n                }\n            }\n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx.mrna\") >= 0\n                });\n\n                mtx = mtx[0].replace(\".RData\", \"\");\n                osApi.setBusyMessage(\"Creating PCA Matrix\");\n                osApi.getPCA(vm.datasource, mtx).then(function() {\n\n                    osApi.setBusyMessage(\"Loading Gene Sets\");\n                    osApi.getGeneSetNames().then(function(response) {\n\n                        // Load Gene Sets\n                        vm.geneSets = response.payload;\n                        vm.geneSets.unshift(\"All\");\n                        vm.geneSet = vm.geneSets[0];\n\n                        $scope.$watch('vm.geneSet', function() {\n                            update();\n                        });\n\n                        // History\n                        osHistory.onPatientSelectionChange.add(function(selection) {\n                            selectedIds = selection.ids;\n                            vm.search = \"\";\n                            setSelected();\n                        });\n                    });\n                });\n            });\n\n            // API Call To Calculate PCA\n            var update = function() {\n                osApi.setBusyMessage(\"Calculating PCA\");\n                osApi.getCalculatedPCA((vm.geneSet==\"All\") ? null : vm.geneSet).then(function(response) {\n                    osApi.setBusyMessage(\"Rendering PCA\");\n                    var payload = response.payload;\n                    vm.pc1 = Math.round(response.payload[\"importance.PC1\"] * 100);\n                    vm.pc2 = Math.round(response.payload[\"importance.PC2\"] * 100);\n                    // Error Patient Ids From Server Are Different Than \n                    var scores = payload.scores;\n                    var ids = payload.ids;\n                    rawData = scores.map(function(d, i) {\n                        d.id = ids[i];\n                        return d;\n                    }, payload.ids);\n                    draw();\n                    osApi.setBusy(false);\n                });\n            };\n\n            function setScale() {\n                \n                width = $window.innerWidth - 400;\n                if (angular.element(\".tray-right\").attr(\"locked\")==\"false\"){\n                    width += 300;\n                } \n                height = $window.innerHeight - 190;\n                if (angular.element(\".tray\").attr(\"locked\") == \"true\") width -= 300;\n\n                d3Chart\n                    .attr(\"width\", '100%')\n                    .attr(\"height\", height);\n                xScale = d3.scale.linear()\n                    .domain([-xMax, xMax])\n                    .range([0, width]).nice();\n\n                yScale = d3.scale.linear()\n                    .domain([-yMax, yMax])\n                    .range([height, 0]).nice();\n            }\n\n            // Render\n            function draw() {\n\n                var dataset = rawData;\n\n                var max, min;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[0];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[0];\n                }));\n                xMax = ((max > min) ? max : min) * 1.2;\n                max = Math.abs(d3.max(dataset, function(d) {\n                    return +d[1];\n                }));\n                min = Math.abs(d3.min(dataset, function(d) {\n                    return +d[1];\n                }));\n                yMax = ((max > min) ? max : min) * 1.2;\n\n                setScale();\n\n                xAxis = d3.svg.axis()\n                    .scale(xScale)\n                    .orient(\"top\")\n                    .ticks(5);\n\n                yAxis = d3.svg.axis()\n                    .scale(yScale)\n                    .orient(\"left\")\n                    .ticks(5);\n\n                // Brush\n                var brush = d3.svg.brush()\n                    .x(xScale)\n                    .y(yScale)\n                    .on(\"brushend\", function() {\n                        var bv = brush.extent();\n                        d3Chart.selectAll(\"circle\")\n                            .classed(\"pca-node-selected\", function(d) {\n                                return (d[0] > bv[0][0] && d[0] < bv[1][0] && d[1] > bv[0][1] && d[1] < bv[1][1]);\n                            });\n                        d3.select(this).transition().duration(300)\n                            .call(brush.extent([\n                                [0, 0],\n                                [0, 0]\n                            ]));\n                        saveSelected();\n                    });\n\n                d3Chart.call(brush);\n\n                var circles = d3Chart.selectAll(\"circle\").data(rawData, function(d) {\n                    return d;\n                });\n\n                circles.enter()\n                    .append(\"circle\")\n                    .attr({\n                        \"class\": \"pca-node\",\n                        \"cx\": width * .5,\n                        \"cy\": height * .5,\n                        \"r\": 3\n                    })\n                    .style(\"fill-opacity\", \"0\")\n                    .on(\"mouseover\", function(d) {\n                        d3Tooltip.transition()\n                            .duration(200)\n                            .style(\"opacity\", 1);\n                        d3Tooltip.html(d.id)\n                            .style(\"left\", (d3.event.pageX + 10) + \"px\")\n                            .style(\"top\", (d3.event.pageY - 5) + \"px\");\n                    })\n                    .on(\"mouseout\", function() {\n                        d3Tooltip.transition()\n                            .duration(500)\n                            .style(\"opacity\", 0);\n                    })\n                    .transition()\n                    .duration(750)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n                    .style(\"fill-opacity\", 1);\n\n                circles.exit()\n                    .transition()\n                    .duration(600)\n                    .delay(function(d, i) {\n                        return i / 300 * 500;\n                    })\n                    .attr(\"cx\", width * .5)\n                    .attr(\"cy\", height * .5)\n                    .style(\"fill-opacity\", \"0\")\n                    .remove();\n\n\n                d3yAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(0, \" + yScale(0) + \")\")\n                    .call(xAxis)\n                    .append(\"text\")\n                    .text(\"PC1\");\n\n                d3xAxis\n                    .attr(\"class\", \"axis\")\n                    .attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\")\n                    .call(yAxis)\n                    .append(\"text\")\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".71em\")\n                    .text(\"PC2\");\n\n                setSelected();\n            }\n\n            vm.resize = function() {\n                setScale();\n                xAxis.scale(xScale);\n                yAxis.scale(yScale);\n                d3yAxis.attr(\"transform\", \"translate(0, \" + yScale(0) + \")\").call(xAxis);\n                d3xAxis.attr(\"transform\", \"translate(\" + xScale(0) + \", 0)\").call(yAxis);\n                d3Chart.selectAll(\"circle\")\n                    .attr(\"cx\", function(d) {\n                        return xScale(d[0]);\n                    })\n                    .attr(\"cy\", function(d) {\n                        return yScale(d[1]);\n                    })\n            };\n\n            // Listen For Resize\n            angular.element($window).bind('resize',\n                _.debounce(vm.resize, 300)\n            );\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osPathways', pathways);\n\n    /** @ngInject */\n    function pathways() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/pathways/pathways.html',\n            controller: PathwaysController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function PathwaysController(osApi, osHistory, $state, $stateParams, $scope, $sce, $window, moment, cytoscape, _) {\n\n            var markersNetwork;\n            var vm = this;\n            \n            // Elements\n            var elChart = angular.element(\"#gbm-chart\");\n            var csChart;\n\n            // History Integration\n            var skipSave = false;\n            var selectedIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            function saveSelected() {\n                if (skipSave) { skipSave = false; return; }\n                var ids = csChart.$('node[nodeType=\"gene\"]:selected').map(function(ele){ return ele.data().id.toUpperCase() });\n                osHistory.addGeneSelection(\"Pathways\", \"Manual Selection\", ids );\n            }\n            function setSelected() {\n\n                skipSave = true;\n                csChart.startBatch();\n                if (selectedIds == null) {\n                    csChart.$('node[nodeType=\"gene\"]:selected')\n                        .forEach( function(ele){\n                            ele.deselect();\n                        });\n                } else {\n                    csChart.$('node[nodeType=\"gene\"]')\n                        .forEach( function(ele){\n                            ele[ (this.indexOf(ele.id())==-1) ? \"deselect\" : \"select\"]();\n                        }, selectedIds);\n                }\n                csChart.endBatch();\n            }\n            \n            vm.datasource = osApi.getDataSource();\n            vm.search = \"\";\n            vm.frame;\n            vm.tip = null;\n            vm.linkTitle = \"\";\n            vm.links = [];\n\n            vm.resize = function(){\n                var width = $window.innerWidth;\n                if (width > 760)  width -= 140;\n                if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                elChart.width( width );\n                elChart.height($window.innerHeight - 90);\n                if (csChart){\n                    csChart.resize();\n                    csChart.center();\n                } \n            }\n\n            // Listen For Resize\n            angular.element($window).bind('resize', \n                _.debounce(vm.resize, 300)\n            );\n\n            $scope.$watch('vm.search', function() {\n                if (angular.isUndefined(csChart)) return;\n                var term = vm.search.toUpperCase();\n                var len = term.length;\n                csChart.startBatch()\n                csChart.nodes().map(function(ele) {\n                    if (len == 0) {\n                        ele.unselect();\n                    } else if (ele.attr(\"name\").substr(0, len) === term) {\n                        ele.select();\n                    } else {\n                        ele.unselect();\n                    }\n                });\n                csChart.endBatch();\n            });\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_pathways\").then(function(result){\n                markersNetwork = result.data[0];\n            \n                    csChart = cytoscape({\n                            container: elChart,\n                            elements: markersNetwork.elements,\n                            style: getStyle(),\n                            minZoom: .2,\n                            maxZoom: 5,\n                            layout: {\n                                name: \"preset\",\n                                fit: true\n                            }\n                        })\n                        .on('select', 'node', _.debounce(saveSelected, 300))\n                        .on('click', 'node', function(e) {\n                            if (e.cyTarget.data().nodeType!=\"gene\") return;\n                            angular.element('#gbm-webpage').modal();\n                            $scope.$apply(function() {\n                                 vm.frame = $sce.trustAsResourceUrl(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\" + e.cyTarget.data().id);\n                            });\n                        })\n                        .on('click', 'edge', function(e) {\n                            /* Open Multiple Windows - Hamid Recommended We Remove\n                            links =[\n                                { name: \"PubMed Article\", url:\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid },\n                                { name: \"PubMed Search\",  url:\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\"}\n                                { name: e.cyTarget.data().source+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source}\n                                { name: e.cyTarget.data().target+\"Gene Card\", url: \"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target}\n                            ];\n                            $window.open(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid);\n                            $window.open(\"http://www.ncbi.nlm.nih.gov/pubmed/?term=(GENE \"+e.cyTarget.data().source+\") AND (GENE \"+e.cyTarget.data().target+\")\");\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().source);\n                            $window.open(\"https://www.genecards.org/cgi-bin/carddisp.pl?gene=\"+e.cyTarget.data().target);\n                            */\n                            angular.element('#gbm-webpage').modal();\n                            $scope.$apply(function() {\n                                vm.frame = $sce.trustAsResourceUrl(\"https://www.ncbi.nlm.nih.gov/pubmed/?term=\" + e.cyTarget.data().pmid );\n                            });\n\n                        }).on('mouseover', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().source + \" Extract\";\n                            });\n\n                            e.cyTarget.style({\n                                'width': '4px'\n                            });\n                        }).on('mouseout', 'edge', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                            e.cyTarget.style({\n                                'width': '2px'\n                            });\n                        }).on('mouseover', 'node', function(e) {\n                            $scope.$apply(function() {\n                                vm.tip = e.cyTarget.data().name + \" Gene Card\";\n                            });\n                        }).on('mouseout', 'node', function() {\n                            $scope.$apply(function() {\n                                vm.tip = null;\n                            });\n                        })\n\n                    // Register History Component\n                    osHistory.onGeneSelectionChange.add(function(selection){\n                        selectedIds = selection.ids;\n                        setSelected();\n                    });\n                    setSelected();\n                    osApi.setBusy(false);\n                });\n\n\n            function getStyle() {\n                var darkblue = 'rgb(5, 108, 225)';\n                var red = 'red'; //rgb(230, 44, 28)';\n                var purple = 'rgb(56, 52,123)';\n                var green = 'green'; //'rgb(56, 52,123)';//'rgb(28, 230,116)';//'green';\n                return [{\n                        'selector': 'node',\n                        'style': {\n                            'content': 'data(label)',\n                            'text-valign': 'center',\n                            'text-halign': 'center',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '50px',\n                            'color': darkblue,\n                            'background-color': 'rgb(250, 250, 250)',\n                            'border-width': '2px',\n                            'border-color': darkblue\n\n                        }\n                    }, {\n                        'selector': 'edge',\n                        'style': {\n                            'width': '2px',\n                            'line-color': darkblue,\n                            'line-style': 'solid'\n                        }\n                    },\n                    // Boxes\n                    {\n                        'selector': 'node[nodeType=\"class\"], node[nodeType=\"family\"], node[nodeType=\"complex\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'white',\n                            'shape': 'roundrectangle'\n\n                        }\n                    },\n                    // Blue Activiates & Indirect Activates\n                    {\n                        'selector': 'edge[edgeType=\"activates\"], edge[edgeType=\"indirectly activates\"]',\n                        'style': {\n                            'line-color': green,\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': green\n                        }\n                    },\n                    // Inhibits & Ubiquitinylates\n                    {\n                        'selector': 'edge[edgeType=\"inhibits\"], edge[edgeType=\"ubiquitinylates\"]',\n                        'style': {\n                            'line-color': red,\n                            'target-arrow-shape': 'tee',\n                            'target-arrow-color': red\n                        }\n                    },\n                    // Fusion\n                    {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': green\n                        }\n                    },\n                    // Hide\n                    {\n                        'selector': 'edge[edgeType=\"contains\"]',\n                        'style': {\n                            'display': 'none'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {}\n                    }, {\n                        'selector': 'node[nodeType=\"gene\"]:selected',\n                        'style': {\n                            'overlay-opacity': '0.5',\n                            'overlay-color': 'red'\n                        }\n                    },\n\n                    // Legacy ... Not sure if it's being used\n                    {\n                        'selector': 'node[nodeType=\"rtk\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(224, 209, 178)',\n                            'border-color': 'black',\n                            'border-width': '0px',\n                            'font-size': '48px',\n                            'shape': 'roundrectangle',\n                            'width': '40px',\n                            'height': '160px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"kinase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 194)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"dimer\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(234, 219, 188)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"loop\"]',\n                        'style': {\n                            'content': '',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px',\n                            'border-style': 'dotted'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gtpase\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(194, 194, 255)',\n                            'shape': 'ellipse',\n                            'width': '160px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"adaptor\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '120px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"GEF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(77, 184, 255)',\n                            'shape': 'ellipse',\n                            'width': '60px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"process\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 255, 255)',\n                            'shape': 'roundrectangle',\n                            'width': '100px',\n                            'height': '40px',\n                            'font-size': '24px',\n                            'border-color': 'black',\n                            'border-width': '0px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"TF\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'background-color': 'rgb(255, 206, 94)',\n                            'shape': 'diamond',\n                            'width': '160px',\n                            'height': '60px',\n                            'font-size': '48px',\n                            'border-color': 'black',\n                            'border-width': '1px'\n                        }\n                    }, {\n                        'selector': 'node[nodeType=\"gene fusion\"]',\n                        'style': {\n                            'content': 'data(label)',\n                            'shape': 'roundrectangle',\n                            'font-size': '24px',\n                            'border-color': 'red',\n                            'border-width': '3px'\n                        }\n                    }, {\n                        'selector': 'edge:selected',\n                        'style': {\n                            'overlay-color': 'grey',\n                            'overlay-opacity': '0.3'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'width': '2px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"fusion\"]',\n                        'style': {\n                            'line-color': purple\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"recruits\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'target-arrow-color': 'black'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"cycles\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'dashed',\n                            'target-arrow-shape': 'triangle',\n                            'source-arrow-shape': 'triangle',\n                            'target-arrow-color': 'green',\n                            'source-arrow-color': 'red'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"associates\"]',\n                        'style': {\n                            'line-color': 'black',\n                            'width': '1px',\n                            'line-style': 'solid'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"activation\"]',\n                        'style': {\n                            'line-color': 'green',\n                            'width': '1px'\n                        }\n                    }, {\n                        'selector': 'edge[edgeType=\"inhibition\"]',\n                        'style': {\n                            'line-color': 'red',\n                            'width': '1px'\n                        }\n                    }\n                ]\n\n            }\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osSound', osSound);\n\n    /** @ngInject */\n    function osSound() {\n\n        var _beep = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n        function beep() { _beep.play(); }\n\n        return {\n            beep: beep\n        }\n    }\n})();\n\n (function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .factory('osSocket', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(SockJS, $rootScope, $q, $log, $location) {\n       \n        // Object To Store Call Back Promises\n        var callbacks = {};\n        var dataSource;\n        var getDataSource = function() { \n            return dataSource; \n        }\n        var setDataSource = function(value){\n            dataSource = value;\n        }\n\n        // Request Ids Used To Coorelate Request With Callback\n        var requestId = 1;\n        var getRequestId = function() { \n            if (requestId==9999) requestId = 1;\n            return requestId++; \n        }\n\n        // Create Sock JS Instace\n        var socket = {};\n        // new SockJS(\n        //     $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/oncoscape','',\n        //     {\n        //         'debug': false,\n        //         'devel': false\n        //     }\n        // );\n\n        // Handle Messages From Socket & Resolve Promise\n        socket.onmessage = function(event) {\n            var data = angular.fromJson(event.data);\n            if (angular.isDefined(callbacks[data.cmd])) {\n                var callback = callbacks[data.cmd];\n                delete callbacks[data.cmd];\n                callback.resolve(data);\n            } else {\n\n                $log.error(\"Unhandled message: %o\", data);\n            }\n        };\n\n        // Formulate Request\n        var request = function(request) {\n\n            // Add Additional Information To Request Per Chinook Protocol\n            request.callback = getRequestId();\n            request.status = \"request\";\n            request.payload = request.payload || \"\";\n            request.ds = getDataSource();\n\n            // Store Promise In Callback Object\n            var deferred = $q.defer();\n            callbacks[request.callback] = deferred;\n\n            // Ensure Socket Is Open Before Sending\n            if (socket.readyState===0){\n                socket.onopen = function(){\n                    socket.send(angular.toJson(request));    \n                };\n            }else{\n                socket.send(angular.toJson(request));\n            }\n\n            // Return Promise\n            return deferred.promise.then(function(response) {\n                request.response = response;\n                return response;\n            });\n        }\n\n        // Return Object\n        return {\n            request: request,\n            setDataSource: setDataSource\n        };\n    }\n})();\n\n (function() {\n     'use strict';\n\n     angular\n         .module('oncoscape')\n         .factory('osHttp', oncoscape);\n\n     /** @ngInject */\n     function oncoscape($http, $location) {\n\n         var url = $location.protocol() + \"://\" + $location.host() + \":\" + (($location.port() == \"3002\") ? 80 : $location.port()) + '/api/'\n\n         var queryString = function(req) {\n             var query = url + req.table;\n             if (angular.isDefined(req.query)) query += \"/?q=\"+encodeURIComponent(JSON.stringify(req.query));\n             return query;\n         };\n\n         var query = function(req) {\n            return $http({\n                 method: 'GET',\n                 url: queryString(req)\n             });\n         };\n\n         // Return Object\n         return {\n            queryString: queryString,\n            query: query\n         };\n     }\n })();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osHistory', osHistory);\n\n    /** @ngInject */\n    function osHistory(moment, signals, osSound, _) {\n\n        //var _historyMax = 100;\n        var _geneSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _geneIndex = 0;\n        var _patientSelections = [{ids:[], tool:'Application', desc:'Load'}];\n        var _patientIndex = 0;\n        var _onPatientAdd = new signals.Signal();\n        var _onPatientSelectionChange = new signals.Signal();\n        var _onGeneAdd = new signals.Signal();\n        var _onGeneSelectionChange = new signals.Signal();\n       \n        /* Gene */\n        var setGeneSelection = function(selection){\n            var index = _geneSelections.indexOf(selection);\n            if (index>=0){\n                _geneIndex = index\n                _onGeneSelectionChange.dispatch(getGeneSelection())\n            }\n        };\n        var getGeneSelections = function(){\n            return _geneSelections;\n        };\n        var getGeneSelection = function(){\n            if (_geneIndex<0) _geneIndex = 0;\n            if (_geneIndex>=_geneSelections.length) _geneIndex = _geneSelections.length-1;\n            return _geneSelections[_geneIndex];\n        };\n        var addGeneSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getGeneSelection().ids.length){\n                if (_.difference(ids, getGeneSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _geneSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _geneIndex += _geneSelections.length-1;\n            _onGeneAdd.dispatch(getGeneSelection())\n        };\n        var getGeneSelectionLast = function(){\n            _geneIndex -= 1;\n            if (_geneIndex<0) { \n                osSound.beep();\n                _geneIndex = 0; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getGeneSelectionNext = function(){\n            _geneIndex += 1;\n            if (_geneIndex==_geneSelections.length) { \n                osSound.beep();\n                _geneIndex = _geneSelections.length-1; return; }\n            var selection = getGeneSelection();\n            _onGeneSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n        /* Patient */\n        var setPatientSelection = function(selection){\n            var index = _patientSelections.indexOf(selection);\n            if (index>=0){\n                _patientIndex = index\n                _onPatientSelectionChange.dispatch(getPatientSelection())\n            }\n        };\n        var getPatientSelections = function(){\n            return _patientSelections;\n        };\n        var getPatientSelection = function(){\n            if (_patientIndex<0) _patientIndex = 0;\n            if (_patientIndex>=_patientSelections.length) _patientIndex = _patientSelections.length-1;\n            return _patientSelections[_patientIndex];\n        };\n        var addPatientSelection = function(tool, desc, ids){\n            ids = ids.sort();\n            if (ids.length==getPatientSelection().ids.length){\n                if (_.difference(ids, getPatientSelection().ids).length==0) return;\n            }\n            var m = moment();\n            _patientSelections.push({tool:tool, desc:desc, ids:ids, date:m.unix(), time:m.format(\"H:mm\")});\n            _patientIndex = _patientSelections.length-1;\n            _onPatientAdd.dispatch(getPatientSelection());\n        };\n        var getPatientSelectionLast = function(){\n            _patientIndex -= 1;\n            if (_patientIndex<0) { \n                osSound.beep();\n                _patientIndex = 0; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n        var getPatientSelectionSecondLast = function(){\n            /*\n            var i = _patientSelections.indexOf(_patientSelection) - 2;\n            if (i<1){\n                osSound.beep();\n                return null;\n            } \n            _patientSelection = _patientSelections[i];\n            return _patientSelection;\n            */\n        };\n        var getPatientSelectionNext = function(){\n            _patientIndex += 1;\n            if (_patientIndex==_patientSelections.length) { \n                osSound.beep();\n                _patientIndex = _patientSelections.length-1; return; }\n            var selection = getPatientSelection();\n            _onPatientSelectionChange.dispatch(selection);\n            return selection;\n        };\n\n\n        var removeListeners = function(){\n          \n        };\n        var clear = function(){\n           \n        };\n\n\n        var api = {\n            onPatientAdd: _onPatientAdd,\n            onPatientSelectionChange: _onPatientSelectionChange,\n            onGeneAdd: _onGeneAdd,\n            onGeneSelectionChange: _onGeneSelectionChange,\n\n            addGeneSelection: addGeneSelection,\n            setGeneSelection: setGeneSelection,\n            getGeneSelection: getGeneSelection,\n            getGeneSelections: getGeneSelections,\n            getGeneSelectionLast: getGeneSelectionLast,\n            getGeneSelectionNext: getGeneSelectionNext,\n\n            addPatientSelection: addPatientSelection,\n            setPatientSelection: setPatientSelection,\n            getPatientSelection: getPatientSelection,\n            getPatientSelections: getPatientSelections,\n            getPatientSelectionNext: getPatientSelectionNext,\n            getPatientSelectionLast: getPatientSelectionLast,\n            getPatientSelectionSecondLast: getPatientSelectionSecondLast,\n            \n            removeListeners: removeListeners,\n            clear: clear\n        };\n\n        return api;\n    }\n})();\n(function() {\n  'use strict';\n/*\n    angular\n        .module('oncoscape')\n        .provider({\n            $exceptionHandler:\n*/\n        /** @ngInject */\n/*        \n        function exceptionFactory(){\n        \tvar handler = function (exception, cause){\n                window.alert(\"Oh Snap!  An error occured.  View console for details\")\n                console.log(exception);\n                exception.stack();\n                if (angular.isDefined(cause)) console.log(cause);\n        \t}\n            this.$get = function() { return handler; };\n        }\n       });\n*/\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .service('osApi', oncoscape);\n\n    /** @ngInject */\n    function oncoscape(osSocket, osHttp, $http, signals, $location) {\n\n        // Events\n        var onDataSource = new signals.Signal();\n\n        // State\n        var _dataSources;\n        var _dataSource;\n        function getDataSources(){\n            return _dataSources;\n        }\n        function getDataSource(value){ \n            return _dataSource; \n        }\n        function setDataSource(value){\n            \n            if (typeof(value)===\"object\"){\n                if (_dataSource != value) onDataSource.dispatch(_dataSource);\n                _dataSource = value;\n            }else if (typeof(value)===\"string\"){\n                if (_dataSource.key!=value){\n                    if (_dataSource != value) onDataSource.dispatch(_dataSource);\n                    _dataSource = _dataSources.filter(function(v){ v.key==key}, {key:value})[0]\n                }\n\n            }\n            \n        }\n\n        query(\"os_datasources\",{beta:false}).then(function(response){ \n            _dataSources = response.data; \n                            \n        });\n        \n        /*** User Api ***/\n        function userApi(){\n\n            // Events\n            var onLogin = new signals.Signal(); // Fired When Data Changes\n            var onLogout = new signals.Signal(); // Fired When Selection changes\n            var _user = {\n                \"name\":\"\",\n                \"password\":\"\",\n                \"domain\":{\"name\":\"Guest\"},\n                \"authenticated\":false,\n                \"token\": null,\n                \"datasets\": []\n            };\n            var _domains = [\n                { \"name\": \"Guest\" },\n                { \"name\": \"FHCRC\" },\n                { \"name\": \"UW\" }\n            ];\n            var logout = function(){\n                _user.name = \"\";\n                _user.password = \"\";\n                _user.domain = {\"name\":\"Guest\"};\n                _user.authenticated = false;\n                _user.token = null;\n                _user.datasets = [];\n\n                onLogout.dispatch();\n            }\n            var login = function(user){\n                _user = user;\n                var req = {\n                    method: 'POST',\n                    url: $location.protocol()+\"://\"+$location.host()+\":\"+ (($location.port()==\"3002\") ? 80 : $location.port()) +'/login',\n                    data: {\n                        username: _user.name,\n                        password: _user.password,\n                        domain: _user.domain.name\n                    }\n                };\n                return $http(req).then(function(res) {\n                    if (res.data.success) {\n                        _user.authenticated = true;\n                        _user.token = res.data.token;\n                        _user.datasets = res.data.datasets;                        \n                        onLogin.dispatch(_user);\n                    } else {\n                        _user.authenticated = false;\n                        _user.token =null;\n                    }\n                });\n            }\n            return {\n                getDomains: function(){ return _domains; },\n                getUser: function() { return _user; },\n                login: login,\n                logout: logout,\n                onLogin: onLogin,\n                onLogout: onLogout\n            }\n        }\n        var _userApi = userApi();\n        function getUserApi() { return _userApi; }\n\n        /*** UI Functions ***/\n        function setBusy(value) {\n            if (value) {\n                angular.element(\".loader-modal\").show();\n            } else {\n                angular.element(\".loader-modal\").hide();\n            }\n            return setBusyMessage;\n        }\n        function setBusyMessage() {\n            //console.log(value);\n        }\n        function showFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function hideFilter() {\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n        function toggleFilter(){\n            angular.element(\"#filter-dropdown\").slideToggle();\n        }\n\n        function getTools(){\n        }\n        \n        function queryString(table, query){\n            return osHttp.queryString({\n                table: table,\n                query: query\n            });\n        }\n        function query(table, query){\n            return osHttp.query({\n                table: table,\n                query: query\n            });\n        }\n\n        /*** R Service Calls ***/\n        function setDataset(dataPackage) {\n            osSocket.setDataSource(dataPackage);\n            return osSocket.request({\n                cmd: \"specifyCurrentDataset\",\n                payload: dataPackage\n            });\n        }\n        \n        function getDataManifest(dataPackage) {\n            return osSocket.request({\n                cmd: \"getDataManifest\",\n                payload: dataPackage\n            });\n        }\n        function getPatientHistoryTable(dataPackage) {\n            return osSocket.request({\n                cmd: \"getPatientHistoryTable\",\n                payload: {\n                    datasetName: dataPackage,\n                    durationFormat: \"byYear\"\n                }\n            });\n        }\n        function getPatientHistoryDxAndSurvivalMinMax() {}\n        function getSampleDataFrame() {}\n        function getGeneSetNames() {\n            return osSocket.request({\n                cmd: \"getGeneSetNames\"\n            });\n        }\n        function getSampleCategorizationNames() {\n            return osSocket.request({\n                cmd: 'getSampleCategorizationNames'\n            });\n        }\n        function getSampleCategorization(names) {\n            return osSocket.request({\n                cmd: 'getSampleCategorization',\n                payload: names\n            });\n        }\n        function getMarkersNetwork(payload) {\n            // Payload is return From Set DataSource\n            return osSocket.request({\n                cmd: \"getMarkersNetwork\",\n                payload: payload\n            })\n        }\n        function getDrugGeneInteractions() {}\n        function getCanonicalizePatientIDsInDataset(patientIds) {\n            return osSocket.request({\n                cmd: \"getCanonicalizePatientIDsInDataset\",\n                payload: patientIds\n            });\n        }\n        function getGeneSetGenes() {}\n        function getOncoprintDataSelection() {}\n        function getPCA(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPCA\",\n                payload: payload\n            });\n        }\n        function getCalculatedPCA(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n\n            return osSocket.request({\n                cmd: \"calculatePCA\",\n            \n                payload: payload\n            });\n        }\n        function getCalculatedPCA2(geneSet) {\n            var payload = {\n                genes: geneSet\n            };\n            return osSocket.request({\n                cmd: \"calculatePCA2\",\n                payload: payload\n            });\n        }\n        function getPLSR(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createPLSR\",\n                payload: payload\n            });\n        }\n        function getCalculatedPLSR(geneSet, factors) {\n            var payload = {\n                genes: geneSet,\n                factorCount: factors.length,\n                factors: factors\n            };\n            return osSocket.request({\n                cmd: \"calculatePLSR\",\n                payload: payload\n            });\n        }\n        function getSummarizedPLSRPatientAttributes(attrs) {\n            attrs = attrs || ['AgeDx', 'Survival'];\n            return osSocket.request({\n                cmd: 'summarizePLSRPatientAttributes',\n                payload: attrs\n            });\n        }\n        function getCalculatedSurvivalCurves(patientIds, title) {\n            return osSocket.request({\n                cmd: \"calculateSurvivalCurves\",\n                payload: {\n                    sampleIDs: patientIds,\n                    title: title\n                }\n            });\n        }\n        function getTimelines() {\n            return osSocket.request({\n                cmd: \"createTimelines\"\n            });\n        }\n        function getCalculatedTimelines() {}\n        function getModuleModificationDate() {\n            return osSocket.request({\n                cmd: \"getModuleModificationDate\",\n                payload: 'gbmPathways'\n            });\n        }\n        function getPathway() {\n            return osSocket.request({\n                cmd: \"getPathway\",\n                payload: 'g.gbmPathways.json'\n            });\n        }\n        function getMrnaData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mRNA_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getCnvData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_cnv_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getMutationData(entities, features) {\n            return osSocket.request({\n                cmd: \"get_mutation_data\",\n                payload: {\n                    entities: entities,\n                    features: features\n                }\n            });\n        }\n        function getOncoprint(geneSetAndPatients) {\n            return osSocket.request({\n                cmd: \"oncoprint_data_selection\",\n                payload: {\n                    patientIdsAndGenes: geneSetAndPatients\n                }\n            });\n        }\n        function getGeneSetTest(dataPackage, matrixName) {\n            var payload = {\n                dataPackage: dataPackage,\n                matrixName: matrixName\n            };\n            return osSocket.request({\n                cmd: \"createGeneSetTest\",\n                payload: payload\n            });\n        }\n        function getGeneSetScore(Group1, Group2, geneSet) {\n            return osSocket.request({\n                cmd: \"geneSetScoreTest\",\n                payload: {\n                    group1: Group1,\n                    group2: Group2, \n                    geneset: geneSet\n                }\n            });\n        }\n\n\n\n        return {\n\n            // Mongo V\n            query: query,\n            queryString: queryString,\n            setDataSource: setDataSource,\n            getDataSource: getDataSource,\n            getDataSources: getDataSources,\n            onDataSource: onDataSource,\n\n            // Legacy\n            getTools: getTools,\n            getUserApi: getUserApi,\n            showFilter: showFilter,\n            hideFilter: hideFilter,\n            toggleFilter: toggleFilter,\n            setBusy: setBusy,\n            setBusyMessage: setBusyMessage,\n            setDataset: setDataset,\n            getDataManifest: getDataManifest,\n            getPatientHistoryTable: getPatientHistoryTable,\n            getPatientHistoryDxAndSurvivalMinMax: getPatientHistoryDxAndSurvivalMinMax,\n            getSampleDataFrame: getSampleDataFrame,\n            getGeneSetNames: getGeneSetNames,\n            getSampleCategorizationNames: getSampleCategorizationNames,\n            getSampleCategorization: getSampleCategorization,\n            getMarkersNetwork: getMarkersNetwork,\n            getPathway: getPathway,\n            getDrugGeneInteractions: getDrugGeneInteractions,\n            getCanonicalizePatientIDsInDataset: getCanonicalizePatientIDsInDataset,\n            getGeneSetGenes: getGeneSetGenes,\n            getOncoprintDataSelection: getOncoprintDataSelection,\n            getPCA: getPCA,\n            getCalculatedPCA: getCalculatedPCA,\n            getCalculatedPCA2: getCalculatedPCA2,\n            getPLSR: getPLSR,\n            getCalculatedPLSR: getCalculatedPLSR,\n            getSummarizedPLSRPatientAttributes: getSummarizedPLSRPatientAttributes,\n            getCalculatedSurvivalCurves: getCalculatedSurvivalCurves,\n            getTimelines: getTimelines,\n            getCalculatedTimelines: getCalculatedTimelines,\n            getMrnaData: getMrnaData,\n            getCnvData: getCnvData,\n            getMutationData: getMutationData,\n            getModuleModificationDate: getModuleModificationDate,\n            getOncoprint: getOncoprint,\n            getGeneSetTest: getGeneSetTest,\n            getGeneSetScore: getGeneSetScore\n        }\n    }\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osOncoprint', oncoprint);\n\n    /** @ngInject */\n    function oncoprint() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/oncoprint/oncoprint.html',\n            controller: OncoprintController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function OncoprintController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elControl = angular.element(\"#oncoprintControlsDiv\");\n            var elInstructions = angular.element(\"#oncoprintInstructions\");\n            var elErrors = angular.element(\"#oncoprintErrorSection\");\n            var elLegend = angular.element(\"#legend\");\n            var d3Chart = d3.select(\"#onc\");\n            \n            // History Integration\n            var selectedPatientIds = (osHistory.getPatientSelection() == null) ? null : osHistory.getPatientSelection().ids;\n            var selectedGeneIds = (osHistory.getGeneSelection() == null) ? null : osHistory.getGeneSelection().ids;\n            \n            \n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneAndPatients = selectedPatientIds + \",\" + selectedGeneIds;\n            vm.errorMessage;\n\n            \n\n            var Oncoprint = (function() {\n              var events = oncoprint_events;\n              var utils = oncoprint_utils;\n              var RuleSet = oncoprint_RuleSet;\n\n              var defaultOncoprintConfig = {\n                cell_width: 6,\n                cell_padding: 2.5,\n                legend: true,\n              };\n\n              var hiddenOncoprintConfig = {\n                pre_track_padding: 0,\n              };\n\n              var defaultTrackConfig = {\n                label: 'Gene',\n                datum_id_key: 'patient',\n                cell_height: 23,\n                track_height: 20,\n                track_padding: 5,\n                sort_cmp: undefined,\n                tooltip: function(d) {\n                  return d['patient'];\n                },\n                removable: false,\n                sort_direction_changable: false\n              }; \n\n\n\n              function Oncoprint(config) {\n                var self = this;\n                var getTrackId = utils.makeIdCounter();\n\n                self.config = config;\n\n                self.id_order = [];\n                self.inverted_id_order = {};\n                self.visible_id_order = [];\n                self.visible_inverted_id_order = {};\n                self.hidden_ids = {};\n                self.track_groups = [[],[]];\n                self.track_group_sort_order = [0,1];\n                self.sort_direction = {};\n                self.tracks = {};\n                self.sort_config = {type: 'track'};\n\n                self.cell_padding_on = true;\n                self.true_cell_width = config.cell_width;\n\n                self.zoomed_cell_width = self.true_cell_width;\n                self.zoom = 1;\n\n                // Cell Padding\n                self.toggleCellPadding = function() {\n                  self.cell_padding_on = !self.cell_padding_on;\n                  $(self).trigger(events.SET_CELL_PADDING);\n                };\n                self.getCellPadding = function() {\n                  return Math.ceil(self.config.cell_padding*self.getZoom())*(+self.cell_padding_on);\n                };\n\n                // Zoom\n                self.getZoom = function() {\n                  return self.zoom;\n                };\n                self.setZoom = function(z) {\n                  self.zoom = utils.clamp(z, 0, 1);\n                  updateZoomedCellWidth();\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                var updateZoom = function() {\n                  // maps {1, ... , true_cell_width} to [0,1]\n                  self.zoom = (self.zoomed_cell_width-1)/(self.true_cell_width - 1);\n                };\n                var updateZoomedCellWidth = function() {\n                  // maps [0,1] to {1, ... , true_cell_width}\n                  self.zoomed_cell_width = Math.round(self.zoom*(self.true_cell_width-1) + 1);\n                };\n                self.increaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width+1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n                self.decreaseZoom = function() {\n                  self.zoomed_cell_width = utils.clamp(self.zoomed_cell_width-1, 1, self.true_cell_width);\n                  updateZoom();\n                  $(self).trigger(events.SET_ZOOM);\n                  return self.zoom;\n                };\n\n                // Cell Width\n                self.getFullCellWidth = function() {\n                  return self.true_cell_width;\n                };\n                self.getZoomedCellWidth = function() {\n                  return self.zoomed_cell_width;\n                };\n\n                // Cell Height\n                self.getCellHeight = function(track_id) {\n                  return self.tracks[track_id].config.cell_height;\n                };\n\n                // Track Height\n                self.getTrackHeight = function(track_id) {\n                  return self.tracks[track_id].config.track_height;\n                };\n\n                // Track Padding\n                self.getTrackPadding = function(track_id) {\n                  return self.tracks[track_id].config.track_padding;\n                };\n\n                // Id Order\n                self.getFilteredIdOrder = function(data_filter_fn, track_ids) {\n                  var tracks = track_ids || self.getTracks();\n                  return _.filter(self.id_order, function(id) {\n                    var d = _.map(tracks, function(track_id) {\n                      return self.getTrackDatum(track_id, id);\n                    });\n                    return data_filter_fn(d);\n                  });\n                };\n                self.getIdOrder = function() {\n                  return self.id_order;\n                };\n                self.getInvertedIdOrder = function() {\n                  return self.inverted_id_order;\n                };\n                self.getVisibleIdOrder = function() {\n                  return self.visible_id_order;\n                };\n                self.getVisibleInvertedIdOrder = function() {\n                  return self.visible_inverted_id_order;\n                };\n                var updateVisibleIdOrder = function() {\n                  self.visible_id_order = _.filter(self.id_order, function(id) {\n                    return !self.hidden_ids[id];\n                  });\n                  self.visible_inverted_id_order = utils.invert_array(self.visible_id_order);\n                  $(self).trigger(events.SET_VISIBLE_ID_ORDER);\n                };\n                self.setIdOrder = function(id_order) {\n                  self.id_order = id_order.slice();\n                  self.inverted_id_order = utils.invert_array(self.id_order);\n                  updateVisibleIdOrder();\n                  $(self).trigger(events.SET_ID_ORDER);\n                };\n                // Hide Ids\n                self.hideIds = function(ids, clear_existing) {\n                  if (clear_existing) {\n                    self.hidden_ids = {};\n                  }\n                  _.each(ids, function(id) {\n                    self.hidden_ids[id] = true;\n                  });\n                  updateVisibleIdOrder();\n                };\n                self.showIds = function(ids) {\n                  if (!ids) {\n                    self.hidden_ids = {};\n                  } else {\n                    _.each(ids, function(id) {\n                      delete self.hidden_ids[id];\n                    });\n                  }\n                  updateVisibleIdOrder();\n                };\n\n                // Sorting\n                self.getTopmostTrack = function() {\n                  return (self.track_groups[0].length > 0 ? self.track_groups[0][0] : self.track_groups[1][0]);\n                };\n                self.setTrackSortComparator = function(track_id, cmp) {\n                  self.tracks[track_id].config.sort_cmp = cmp;\n                };\n                self.getTrackSortComparator = function(track_id) {\n                  return self.tracks[track_id].config.sort_cmp;\n                };\n                self.getTrackSortDirection = function(track_id) {\n                  return self.sort_direction[track_id];\n                };\n                self.setTrackSortDirection = function(track_id, dir) {\n                  self.sort_direction[track_id] = dir;\n                  self.sort();\n                };\n                self.setTrackGroupSortOrder = function(order) {\n                  self.track_group_sort_order = order.slice();\n                };\n                self.getTrackGroupSortOrder = function() {\n                  return self.track_group_sort_order.slice();\n                };\n                self.getTrackSortOrder = function() {\n                  var ret = [];\n                  var track_groups = self.getTrackGroups();\n                  _.each(self.getTrackGroupSortOrder(), function(group_id) {\n                    ret = ret.concat(track_groups[group_id]);\n                  });\n                  return ret;\n                };\n                self.setSortConfig = function(config) {\n                  self.sort_config = config;\n                };\n                var sortById = function(desc) {\n                  var ret = _.sortBy(self.getIdOrder(), _.identity);\n                  if (desc) {\n                    ret.reverse();\n                  }\n                  self.setIdOrder(ret);\n                };\n                var sortByTrack = function() {\n                  var track_id_list = self.getTrackSortOrder();\n                  var cmp_list = _.map(track_id_list, function(track_id) { \n                    return self.getTrackSortComparator(track_id);\n                  });\n                  var data = {};\n                  var id_order = self.getIdOrder();\n                  _.each(id_order, function(id) {\n                    data[id] = {};\n                    _.each(track_id_list, function(track_id) {\n                      data[id][track_id] = self.getTrackDatum(track_id, id);\n                    });\n                  });\n                  var lexicographically_ordered_cmp = function(id1,id2) {\n                    var cmp_result = 0;\n                    for (var i=0, _len = track_id_list.length; i<_len; i++) {\n                      var track_id = track_id_list[i];\n                      var cmp = cmp_list[i];\n                      var d1 = data[id1][track_id];\n                      var d2 = data[id2][track_id];\n                      var d1_undef = (typeof d1 === \"undefined\");\n                      var d2_undef = (typeof d2 === \"undefined\");\n                      if (!d1_undef && !d2_undef) {\n                        cmp_result = cmp(d1, d2);\n                      } else if (d1_undef && d2_undef) {\n                        cmp_result = 0;\n                      } else if (d1_undef) {\n                        cmp_result = 1;\n                      } else {\n                        cmp_result = -1;\n                      }\n                      if (isFinite(cmp_result)) {\n                        // reverse direction unless infinite, which is a signal that an NA is involved\n                        cmp_result *= self.sort_direction[track_id];\n                      }\n                      if (cmp_result !== 0) {\n                        break;\n                      }\n                    }\n                    return cmp_result;\n                  };\n                  self.setIdOrder(utils.stableSort(self.getIdOrder(), lexicographically_ordered_cmp));\n                };\n                self.sort = function() {\n                  var config = self.sort_config;\n                  if (config.type === 'track') {\n                    sortByTrack();\n                  } else if (config.type === 'id') {\n                    sortById(config.desc);\n                  }\n                };\n\n                // Track Creation/Destruction\n                self.addTrack = function(config, group) {\n                  group = utils.ifndef(group, 1);\n                  var track_id = getTrackId();\n                  self.tracks[track_id] ={id: track_id, \n                        data: [], \n                        config: $.extend({}, defaultTrackConfig, config),\n                        id_data_map: {}};\n                  self.track_groups[group].push(track_id);\n                  self.sort_direction[track_id] = 1;\n\n                  $(self).trigger(events.ADD_TRACK, {track_id: track_id});\n                  return track_id;\n                };\n                self.removeTrack = function(track_id) {\n                  var track = self.tracks[track_id];\n                  delete self.tracks[track_id];\n                  delete self.sort_direction[track_id];\n\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  } else {\n                    var old_position = track_group.indexOf(track_id);\n                    track_group.splice(old_position, 1);\n\n                    $(self).trigger(events.REMOVE_TRACK, {track: track, track_id: track_id});\n                    return true;  \n                  }\n                };\n\n                // Track Ordering\n                self.getTrackGroups = function(reference) {\n                  return (reference === true ? self.track_groups : $.extend(true, [], self.track_groups));      \n                };\n                self.getTracks = function() {\n                  return _.flatten(self.getTrackGroups());\n                };\n                self.getContainingTrackGroup = function(track_id, reference) {\n                  var group = false;\n                  _.find(self.track_groups, function(grp) {\n                    if (grp.indexOf(track_id) > -1) {\n                      group = grp;\n                      return true;\n                    }\n                    return false;\n                  });\n                  return (reference === true ? group : group.slice());\n                };\n                self.moveTrack = function(track_id, new_position) {\n                  var track_group = self.getContainingTrackGroup(track_id, true);\n                  if (!track_group) {\n                    return false;\n                  }\n                  var old_position = track_group.indexOf(track_id);\n                  new_position = utils.clamp(new_position, 0, track_group.length-1);\n                  track_group.splice(old_position, 1);\n                  track_group.splice(new_position, 0, track_id);\n                  var moved_tracks = track_group.slice(Math.min(old_position, new_position), Math.max(old_position, new_position) + 1);\n                  $(self).trigger(events.MOVE_TRACK, {moved_tracks: moved_tracks});\n                };\n\n\n                // Track Label\n                self.getTrackLabel = function(track_id) {\n                  return self.tracks[track_id].config.label;\n                };\n\n                // Track Tooltip\n                self.getTrackTooltip = function(track_id) {\n                  return self.tracks[track_id].config.tooltip;\n                };\n                self.setTrackTooltip = function(track_id, tooltip) {\n                  self.tracks[track_id].config.tooltip = tooltip;\n                };\n\n                // Track Data\n                self.getTrackData = function(track_id) {\n                  return self.tracks[track_id].data;\n                };\n                self.setTrackData = function(track_id, data) {\n                  var id_accessor = self.getTrackDatumIdAccessor(track_id);\n\n                  self.tracks[track_id].data = data;\n\n                  var current_id_order = self.getIdOrder();\n                  var current_inverted_id_order = self.getInvertedIdOrder();\n                  _.each(_.map(data, id_accessor), function(id) {\n                    if (!(id in current_inverted_id_order)) {\n                      current_id_order.push(id);\n                    }\n                  });\n                  self.setIdOrder(current_id_order);\n                  \n                  self.tracks[track_id].id_data_map = {};\n                  var id_data_map = self.tracks[track_id].id_data_map;\n                  _.each(self.tracks[track_id].data, function(datum) {\n                    id_data_map[id_accessor(datum)] = datum;\n                  });\n                  $(self).trigger(events.SET_TRACK_DATA, {track_id: track_id});\n                };\n                self.getTrackDatum = function(track_id, datum_id) {\n                  return self.tracks[track_id].id_data_map[datum_id];\n                };\n                self.getTrackDatumDataKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_data_key;\n                };\n\n                // Track Datum Id\n                self.getTrackDatumIdAccessor = function(track_id) {\n                  var key = self.getTrackDatumIdKey(track_id);\n                  return function(d) {\n                    return d[key];\n                  };\n                };\n                self.getTrackDatumIdKey = function(track_id) {\n                  return self.tracks[track_id].config.datum_id_key;\n                };\n                self.setTrackDatumIdKey = function(track_id, key) {\n                  self.tracks[track_id].config.datum_id_key = key;\n                };\n\n                // Track info\n                self.isTrackRemovable = function(track_id) {\n                  return self.tracks[track_id].config.removable;\n                };\n                self.isTrackSortDirectionChangable = function(track_id) {\n                  return self.tracks[track_id].config.sort_direction_changable;\n                };\n\n                // Clearing\n                self.clearData = function() {\n                  _.each(self.getTracks(), function(track_id) {\n                    self.setTrackData(track_id, []);\n                  });\n                  self.setIdOrder([]);\n                }\n              }\n\n              return { \n                CATEGORICAL_COLOR: RuleSet.CATEGORICAL_COLOR,\n                GRADIENT_COLOR: RuleSet.GRADIENT_COLOR,\n                GENETIC_ALTERATION: RuleSet.GENETIC_ALTERATION,\n                BAR_CHART: RuleSet.BAR_CHART,\n                create: function CreateOncoprint(container_selector_string, config) {\n                  config = $.extend({}, defaultOncoprintConfig, config || {});\n                  config = $.extend(config, hiddenOncoprintConfig);\n                  var oncoprint = new Oncoprint(config);\n                  var renderer = new OncoprintSVGRenderer(container_selector_string, oncoprint, {label_font: 'Arial', legend:config.legend});\n                  var ret = {\n                    onc_dev: oncoprint,\n                    ren_dev: renderer,\n                    addTrack: function(config, group) {\n                      var track_id = oncoprint.addTrack(config, group);\n                      return track_id;\n                    },\n                    removeTrack: function(track_id) {\n                      oncoprint.removeTrack(track_id);\n                    },\n                    moveTrack: function(track_id, position) {\n                      oncoprint.moveTrack(track_id, position);\n                    },\n                    setTrackDatumIdKey: function(track_id, key) {\n                      oncoprint.setTrackDatumIdKey(track_id, key);\n                    },\n                    setTrackData: function(track_id, data) {\n                      oncoprint.setTrackData(track_id, data);\n                    },\n                    setRuleSet: function(track_id, type, params) {\n                      renderer.setRuleSet(track_id, type, params);\n                    },\n                    useSameRuleSet: function(target_track_id, source_track_id) {\n                      renderer.useSameRuleSet(target_track_id, source_track_id);\n                    },\n                    toggleCellPadding: function() {\n                      oncoprint.toggleCellPadding();\n                    },\n                    toSVG: function() {\n                      return renderer.toSVG();\n                    },\n                    setTrackGroupSortOrder: function(order) {\n                      oncoprint.setTrackGroupSortOrder(order);\n                    },\n                    sort: function() {\n                      oncoprint.sort();\n                    },\n                    setSortConfig: function(config) {\n                      oncoprint.setSortConfig(config);\n                    },\n                    setIdOrder: function(id_order) {\n                      oncoprint.setIdOrder(id_order);\n                    },\n                    getTrackSortDirection: function(track_id) {\n                      return oncoprint.getTrackSortDirection(track_id);\n                    },\n                    setTrackSortDirection: function(track_id, dir) {\n                      oncoprint.setTrackSortDirection(track_id, dir);\n                    },\n                    setZoom: function(z) {\n                      return oncoprint.setZoom(z);\n                    },\n                    increaseZoom: function() {\n                      return oncoprint.increaseZoom();\n                    },\n                    decreaseZoom: function() {\n                      return oncoprint.decreaseZoom();\n                    },\n                    suppressRendering: function() {\n                      renderer.suppressRendering();\n                    },\n                    releaseRendering: function() {\n                      renderer.releaseRendering();\n                    },\n                    setLegendVisible: function(track_ids, visible) {\n                      renderer.setLegendVisible(track_ids, visible);\n                    },\n                    getFilteredIdOrder: function(data_filter_fn, track_ids) {\n                      return oncoprint.getFilteredIdOrder(data_filter_fn, track_ids);\n                    },\n                    getVisibleIdOrder: function() {\n                      return oncoprint.getVisibleIdOrder();\n                    },\n                    hideIds: function(ids) {\n                      oncoprint.hideIds(ids);\n                    },\n                    showIds: function(ids) {\n                      oncoprint.showIds(ids);\n                    },\n                    clearData: function() {\n                      oncoprint.clearData();\n                    },\n                    setTrackTooltip: function(track_id, tooltip) {\n                      oncoprint.setTrackTooltip(track_id, tooltip);\n                    }\n                  };\n                  $(oncoprint).on(events.MOVE_TRACK, function() {\n                    $(ret).trigger(events.MOVE_TRACK);\n                  });\n                  $(renderer).on(events.FINISHED_RENDERING, function() {\n                    $(ret).trigger(events.FINISHED_RENDERING);\n                  });\n                  $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                    $(ret).trigger(events.REMOVE_TRACK, {track_id: data.track_id});\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSEENTER, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSEENTER);\n                  });\n                  $(renderer).on(events.CONTENT_AREA_MOUSELEAVE, function(evt, data) {\n                    $(ret).trigger(events.CONTENT_AREA_MOUSELEAVE);\n                  });\n                  return ret;\n                }\n              };\n            })();\n          \n            var OncoprintSVGRenderer = (function() {\n                  var events = oncoprint_events;\n                  var utils = oncoprint_utils;\n\n                  var TOOLBAR_CONTAINER_CLASS = 'oncoprint-toolbar-ctr';\n                  var LABEL_AREA_CONTAINER_CLASS = 'oncoprint-label-area-ctr';\n                  var CELL_AREA_CONTAINER_CLASS = 'oncoprint-cell-area-ctr';\n                  var CELL_AREA_CLASS = 'oncoprint-cell-area';\n                  var COLUMN_HIGHLIGHT_CLASS = 'oncoprint-column-highlight'\n                  \n                  var CELL_HOVER_CLASS = 'oncoprint-cell-hover';\n                  var LEGEND_HEADER_CLASS = 'oncoprint-legend-header';\n                  var LABEL_DRAGGING_CLASS = 'oncoprint-label-dragging';\n                  var LABEL_DRAGGABLE_CLASS = 'oncoprint-label-draggable';\n                  var CELL_QTIP_CLASS = 'oncoprint-cell-qtip';\n\n                  function OncoprintSVGRenderer(container_selector_string, oncoprint, config) {\n                    OncoprintRenderer.call(this, oncoprint, config);\n                    var self = this;\n                    this.track_cell_selections = {};\n                    this.track_cells = {};\n                    this.active_rule_set_rules = {};\n                    this.toolbar_container;\n                    this.label_div;\n                    this.label_drag_div;\n                    this.label_container;\n                    this.cell_container;\n                    this.cell_container_node;\n                    this.cell_div;\n                    this.legend_table;\n                    this.document_fragment;\n                    this.percent_altered_max_width = utils.textWidth('100%', self.getLabelFont());\n                    this.altered_data_percentage = {};\n                    \n                    this.cell_tooltip_html = '';\n\n                    this.container = d3.select(container_selector_string);\n                    this.container.classed('noselect', true).selectAll('*').remove();\n                    this.container.append('br');\n                    (function initLegend() {\n                      if (config.legend) {\n                        self.legend_table = d3.select(container_selector_string).append('table').style('border-collapse', 'collapse');\n                      }\n                    })();\n                    var content_area = d3.select(container_selector_string).append('div').classed('oncoprint-content-area', true);\n                    (function initLabelContainer() {\n                      self.label_container = content_area.append('div').classed(LABEL_AREA_CONTAINER_CLASS, true).style('position', 'relative');\n                      self.label_div = self.label_container.append('div').style('position', 'relative').style('overflow', 'hidden');\n                      self.label_drag_div = self.label_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px')\n                              .style('display','none');\n                    })();\n                    (function initCellContainer() {\n                      self.cell_container = content_area.append('div').classed(CELL_AREA_CONTAINER_CLASS, true);\n                      self.cell_column_highlight = self.cell_container.append('div').classed(COLUMN_HIGHLIGHT_CLASS, true)\n                            .style('height', self.getCellAreaHeight())\n                            .style('visibility', 'hidden');\n\n                      self.cell_container_node = self.cell_container.node();\n                      self.cell_div = self.cell_container.append('div').classed(CELL_AREA_CLASS, true);\n\n                    \n                      self.cell_mouseover_div = self.cell_container.append('div').style('position', 'absolute').style('overflow', 'hidden')\n                              .style('top', '0px').style('left','0px');\n                      self.cell_container_node.addEventListener(\"scroll\", function() {\n                        self.calculateVisibleInterval();\n                        self.clipAndPositionCells();\n                      });\n                      var mouseMove, mouseOut;\n                      (function() {\n                        var prev_track, prev_cell_index, prev_dom, highlighted_col_cells = [];\n                        var column_highlight_timeout;\n                        $(self.cell_div.node()).qtip({\n                          content: 'SHARED QTIP',\n                          position: {target: 'event', my:'bottom middle', at:'top middle', viewport: $(window)},\n                          style: { classes: CELL_QTIP_CLASS, border: 'none'},\n                          show: {event: \"cell-mouseover\"},\n                          hide: {fixed: true, delay: 100, event: \"cell-mouseout\"},\n                          events: {\n                            show: function() {\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            },\n                            render: function(){\n                              $(this).find('.qtip-content').html(self.cell_tooltip_html);\n                            }\n                          }\n                        });\n                        var hover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseover\");\n                        };\n                        var unhover_cell = function(dom) {\n                          $('.'+CELL_QTIP_CLASS).finish();\n                          $(dom).trigger(\"cell-mouseout\");\n                        };\n                        var clear_and_unhover = function() {\n                          prev_track = undefined;\n                          prev_cell_index = undefined;\n                          prev_dom && unhover_cell(prev_dom);\n                          prev_dom = undefined;\n                          //self.cell_column_highlight.style('visibility', 'hidden');\n                          column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                          _.each(highlighted_col_cells, function(cell) {\n                            if (cell) {\n                              cell.style.border = '';\n                              cell.style.margin = '';\n                            }\n                          });\n                          highlighted_col_cells = [];\n                        };\n                        mouseOut = function() {\n                          clear_and_unhover();\n                        };\n                        mouseMove = function(evt) {\n                          var mouseX = utils.mouseX(evt);\n                          var mouseY = utils.mouseY(evt);\n                          var track_cell_tops = self.getTrackCellTops();\n                          var track = (function() {\n                            var closest_track_dist = Number.POSITIVE_INFINITY;\n                            var closest_track = undefined;\n                            _.each(track_cell_tops, function(top, track_id) {\n                              var dist = mouseY - top;\n                              if (dist >= 0 && dist < closest_track_dist) {\n                                closest_track_dist = dist;\n                                closest_track = track_id;\n                              }\n                            });\n                            return closest_track;\n                          })();\n                          if (!track) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var track_height = oncoprint.getCellHeight(track);\n                          if (mouseY > track_cell_tops[track] + track_height) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          var cell_width = oncoprint.getZoomedCellWidth();\n                          var cell_unit = cell_width + oncoprint.getCellPadding();\n                          if (mouseX % cell_unit > cell_width) {\n                            clear_and_unhover();\n                            return;\n                          }\n                          // at this point, we are hovered over a cell position\n                          var cell_index = Math.floor(mouseX / cell_unit);\n                          if (cell_index !== prev_cell_index || track !== prev_track) {\n                            //self.cell_column_highlight.style('visibility', 'hidden');\n                            column_highlight_timeout && clearTimeout(column_highlight_timeout)\n                            // not the same cell as before\n                            clear_and_unhover();\n                            var cell_id = oncoprint.getVisibleIdOrder()[cell_index];\n                            var track_cell = self.track_cells[track][cell_id];\n                            if (!track_cell) {\n                              // track doesn't have a cell there\n                              return;\n                            }\n                            // otherwise, we're over a cell\n                            $('.'+CELL_QTIP_CLASS).finish().hide();\n                            prev_cell_index = cell_index;\n                            prev_track = track;\n                            prev_dom = track_cell.dom;\n                            self.cell_tooltip_html = oncoprint.getTrackTooltip(track)(track_cell.d);\n                            hover_cell(prev_dom);\n                            column_highlight_timeout = setTimeout(function() {\n                              highlighted_col_cells = _.map(self.track_cells, function(cells, track_id) {\n                                var cell = cells[cell_id].dom;\n                                if (cell) {\n                                  if (track_id === track) {\n                                    cell.style.border = \"1px solid #000000\";\n                                    cell.style.margin = \"-1px\";\n                                  } else {\n                                    cell.style.border = \"1px solid #999999\";\n                                    cell.style.margin = \"-1px\";\n                                  }\n                                }\n                                return cell;\n                              });\n                            }, 200);\n                          }\n                        };\n                      })();\n                      self.cell_mouseover_div.node().addEventListener('mousemove', mouseMove);\n                      self.cell_mouseover_div.node().addEventListener('mouseout', mouseOut);\n                      // TODO: magic number\n                      self.cell_div.style('max-width', '1000px');\n                    })();\n                    $(content_area.node()).hover(function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeTo(80,1);\n                    }, function() {\n                      $(self.label_div.node()).find('.'+self.getTrackButtonCSSClass()).stop().fadeOut(500);\n                    });\n                    \n                    (function reactToOncoprint() {\n                      $(oncoprint).on(events.REMOVE_TRACK, function(evt, data) {\n                        var track_id = data.track_id;\n                        delete self.rule_sets[track_id];\n                        delete self.track_cell_selections[track_id];\n                        delete self.altered_data_percentage[track_id];\n                        self.removeTrackCells(track_id);\n                        self.removeTrackLabels(track_id);\n                        self.removeTrackButtons(track_id);\n                        \n                        self.computeTrackCellTops();\n                        //self.renderLegend();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        self.resizeCellDiv();\n                        oncoprint.sort();\n                      });\n                      $(oncoprint).on(events.MOVE_TRACK, function(evt, data) {\n                        self.computeTrackCellTops();\n                        self.clipAndPositionCells(data.moved_tracks, 'top', true);\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        oncoprint.sort();\n                      });\n\n                      $(oncoprint).on(events.ADD_TRACK, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(undefined, 'top', true);\n                        self.computeTrackCellTops();\n                        self.renderTrackLabels();\n                        self.renderTrackButtons();\n                        self.resizeLabelDiv();\n                        //self.clipCells(true, d.track_id);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n                      $(oncoprint).on(events.SET_TRACK_DATA, function(e,d) {\n                        //this.cell_div.style('display', 'none');\n                        self.drawCells(d.track_id);\n                        self.clipAndPositionCells(d.track_id, undefined, true);\n                        self.computeAlteredDataPercentage(d.track_id);\n                        self.renderTrackLabels(d.track_id);\n                        self.resizeCellDiv();\n                        self.renderLegend();\n                        //self.clipCells(true);\n                        //this.cell_div.style('display','inherit');\n                      });\n\n\n                      $(oncoprint).on(events.SET_CELL_PADDING, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n\n                      $(oncoprint).on(events.SET_ZOOM, function(e,d) {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCells();\n                        self.resizeCellDiv();\n                        //self.cell_highlight.style('width', oncoprint.getZoomedCellWidth() + 'px');\n                      });\n\n                      $(oncoprint).on(events.SET_VISIBLE_ID_ORDER, function() {\n                        self.clipAndPositionCells(undefined, undefined, true);\n                        self.resizeCellDiv();\n                      });\n                    })();\n                  }\n                  utils.extends(OncoprintSVGRenderer, OncoprintRenderer);\n                  OncoprintSVGRenderer.prototype.computeAlteredDataPercentage = function(track_id) {\n                    var rule_set = this.getRuleSet(track_id);\n                    if (rule_set && rule_set.alteredData) {\n                      var data = this.oncoprint.getTrackData(track_id);\n                      var num_altered = rule_set.alteredData(data).length;\n                      var percent_altered = Math.floor(100 * num_altered / data.length);\n                      this.altered_data_percentage[track_id] = percent_altered;\n                    }\n                  };\n                  OncoprintSVGRenderer.prototype.getAlteredDataPercentage = function(track_id) {\n                    return this.altered_data_percentage[track_id];\n                  };\n                  OncoprintSVGRenderer.prototype.calculateVisibleInterval = function() {\n                    var cell_unit = this.oncoprint.getZoomedCellWidth() + this.oncoprint.getCellPadding();\n                    var cell_ctr_rect = this.cell_container_node.getBoundingClientRect();\n                    this.visible_interval = [this.cell_container_node.scrollLeft, this.cell_container_node.scrollLeft + cell_ctr_rect.right - cell_ctr_rect.left];\n                    return this.visible_interval;\n                  };\n                  OncoprintSVGRenderer.prototype.getVisibleInterval = function() {\n                    return (this.visible_interval || this.calculateVisibleInterval());\n                  };\n                  OncoprintSVGRenderer.prototype.cellRenderTarget = function() {\n                    return d3.select(this.document_fragment || this.cell_div.node());\n                  };\n                  OncoprintSVGRenderer.prototype.suppressRendering = function() {\n                    this.document_fragment = document.createDocumentFragment();\n                  };\n                  OncoprintSVGRenderer.prototype.releaseRendering = function() {\n                    this.cell_div.node().appendChild(this.document_fragment);\n                    this.document_fragment = undefined;\n                    var self = this;\n                    $(this.cell_div.node()).ready(function() {\n                      self.resizeCells();\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    });\n                  };\n                  // Rule sets\n                  OncoprintSVGRenderer.prototype.setRuleSet = function(track_id, type, params) {\n                    OncoprintRenderer.prototype.setRuleSet.call(this, track_id, type, params);\n                    this.active_rule_set_rules[this.getRuleSet(track_id).getRuleSetId()] = {};\n                    this.drawCells(track_id);\n                    this.clipAndPositionCells(track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(track_id);\n                    this.renderTrackLabels(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.useSameRuleSet = function(target_track_id, source_track_id) {\n                    OncoprintRenderer.prototype.useSameRuleSet.call(this, target_track_id, source_track_id);\n                    this.drawCells(target_track_id);\n                    this.clipAndPositionCells(target_track_id, undefined, true);\n                    this.renderLegend();\n                    this.computeAlteredDataPercentage(target_track_id);\n                    this.renderTrackLabels(target_track_id);\n                  }\n\n                  // Containers\n                  OncoprintSVGRenderer.prototype.getLabelDiv = function() {\n                    return this.label_div;\n                  };\n                  OncoprintSVGRenderer.prototype.getLabelDragDiv = function() {\n                    return this.label_drag_div;\n                  };\n                  OncoprintSVGRenderer.prototype.resizeCellDiv = function() {\n                    this.cell_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    \n                    this.cell_mouseover_div.style('min-width', this.getCellAreaWidth()+'px')\n                        .style('min-height', this.getCellAreaHeight()+'px');\n                    this.cell_column_highlight.style('height', this.getCellAreaHeight() + 'px');\n                  };\n                  OncoprintSVGRenderer.prototype.resizeLabelDiv = function() {\n                    this.getLabelDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                    this.getLabelDragDiv().style('width', this.getLabelAreaWidth()+'px')\n                        .style('height', this.getLabelAreaHeight()+'px');\n                  };\n\n                  // Labels\n                  OncoprintSVGRenderer.prototype.removeTrackLabels =function(track_ids) {\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids); \n                    var div = this.label_div;\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                    });\n                  }\n                  OncoprintSVGRenderer.prototype.renderTrackLabels = function(track_ids, y, render_whole_labels) {\n                    var div = this.label_div;\n                    if (typeof y !== \"undefined\") {\n                      div.selectAll(this.getTrackLabelCSSSelector(track_ids)).style('top', y+'px');\n                    } else {\n                      track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                      track_ids = [].concat(track_ids);\n                      var label_tops = this.getTrackLabelTops();\n                      var self = this;\n                      var label_area_width = this.getLabelAreaWidth();\n                      var percent_altered_left = label_area_width - this.percent_altered_max_width;\n                      _.each(track_ids, function(track_id) {\n                        var label_top = label_tops[track_id];\n                        var track_label_class = self.getTrackLabelCSSClass(track_id);\n                        var label_text = self.oncoprint.getTrackLabel(track_id);\n                        var disp_label_text = label_text;\n                        if (label_text.length > self.max_label_length && !render_whole_labels) {\n                          disp_label_text = label_text.substring(0,self.max_label_length-3)+'...';\n                        }\n                        _.each(div.selectAll(self.getTrackLabelCSSSelector(track_id)), function(node) {\n                          $(node).qtip('destroy');\n                        });\n                        div.selectAll(self.getTrackLabelCSSSelector(track_id)).remove();\n                        var span = div.append('span')\n                          .style('position','absolute')\n                          .classed(self.getTrackLabelCSSClass(track_id), true)\n                          .classed('oncoprint-track-label-draggable', true)\n                          .classed('oncoprint-track-label-main', true)\n                          .classed('oncoprint-track-label', true)\n                          .classed('noselect', true)\n                          .style('font-family', self.getLabelFont())\n                          .style('font-weight', 'bold')\n                          .text(disp_label_text)\n                          .style('top', label_top+'px')\n                          .on(\"mousedown\", function() {\n                            self.dragLabel(track_id);\n                          });\n                          $(span.node()).qtip( {content: {text: (label_text.length > self.max_label_length ? label_text+'<br> hold to drag' : 'hold to drag') },\n                                  position: {my:'middle right', at:'middle left', viewport: $(window)},\n                                  style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow'},\n                                  show: {event: \"mouseover\"}\n                                });\n                        var percent_altered = self.getAlteredDataPercentage(track_id);\n                        if (typeof percent_altered !== 'undefined') {\n                          div.append('span')\n                            .style('position','absolute')\n                            .classed(self.getTrackLabelCSSClass(track_id), true)\n                            .classed('oncoprint-track-label', true)\n                            .classed('noselect', true)\n                            .style('font-family', self.getLabelFont())\n                            .text(percent_altered + '%')\n                            .style('top', label_top+'px')\n                            .style('left', percent_altered_left+'px');  \n                        }\n                      });\n                    }\n                  };\n\n                  // Buttons\n                  OncoprintSVGRenderer.prototype.getTrackButtonCSSClass = function(track_id) {\n                    return 'oncoprint-track-button'+utils.ifndef(track_id, \"\");\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      div.selectAll('.'+self.getTrackButtonCSSClass(track_id)).remove();\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.renderTrackButtons = function(track_ids) {\n                    var div = this.label_div;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var label_tops = this.getTrackLabelTops();\n                    var self = this;\n                    var label_area_width = this.getLabelAreaWidth();\n                    _.each(track_ids, function(track_id) {\n                      var button_class = self.getTrackButtonCSSClass(track_id);\n                      div.selectAll('.'+button_class).remove();\n                      var left = label_area_width - 15;\n                      if (self.oncoprint.isTrackRemovable(track_id)) {\n                        (function() {\n                          var new_btn = div.append('span').classed('noselect', true).style('font-size','12px').style('color', '#87CEFA').style('cursor', 'pointer')\n                          .classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            self.oncoprint.removeTrack(track_id);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                          new_btn.text('X');\n                          $(new_btn.node()).hover(function() {\n                            new_btn.style('font-size', '15px').style('color', '#0000FF');\n                          }, function() {\n                            new_btn.style('font-size','12px').style('color', '#87CEFA');\n                          }).qtip({\n                                            //content: {text: 'Click to remove'},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                        })();\n                        left -= 35;\n                      }\n                      if (self.oncoprint.isTrackSortDirectionChangable(track_id)) {\n                        (function() {\n                          var imgs = ['images/decreaseSort.svg', 'images/increaseSort.svg', 'images/nonSort.svg'];\n                          var descs = ['Click to sort in descending order', 'Click to not sort on this track', 'Click to sort in ascending order'];\n                          var sort_direction = [1, -1, 0];\n                          var current_sort_setting = sort_direction.indexOf(self.oncoprint.getTrackSortDirection(track_id));\n                          var new_btn = div.append('img');\n                          new_btn.attr('src', imgs[current_sort_setting]).style('cursor','pointer');\n                          $(new_btn.node()).qtip({\n                                            content: {text: function() {\n                                              return descs[current_sort_setting];\n                                            }},\n                                            position: {my:'bottom middle', at:'top middle', viewport: $(window)},\n                                            style: { classes: 'qtip-light qtip-rounded qtip-shadow qtip-lightyellow' },\n                                            show: {event: \"mouseover\"},\n                                            hide: {fixed: true, delay: 100, event: \"mouseout\"}\n                                            });\n                          new_btn.classed(button_class, true).classed(self.getTrackButtonCSSClass(), true).on('click', function() {\n                            current_sort_setting = (current_sort_setting + 1) % 3;\n                            self.oncoprint.setTrackSortDirection(track_id, sort_direction[current_sort_setting]);//toggleTrackSortDirection(track_id);\n                            new_btn.attr('src', imgs[current_sort_setting]);\n                          })\n                          .style('position', 'absolute').style('left', left+'px').style('top', label_tops[track_id]+'px');\n                        })();\n                      }\n                    });\n                  };\n\n                  // Cells\n                  OncoprintSVGRenderer.prototype.resizeCells = function(new_width) {\n                    this.cell_div.selectAll('svg.'+this.getCellCSSClass()).style('width', this.oncoprint.getZoomedCellWidth()+'px');\n                  };\n                  OncoprintSVGRenderer.prototype.removeTrackCells = function(track_id) {\n                    this.cell_div.selectAll('svg.'+this.getTrackCellCSSClass(track_id)).remove();\n                  };\n                  OncoprintSVGRenderer.prototype.drawTrackCells = function(track_id, fragment) {\n                    var oncoprint = this.oncoprint;\n                    var data = oncoprint.getTrackData(track_id);\n                    var id_key = oncoprint.getTrackDatumIdKey(track_id);\n                    var id_accessor = oncoprint.getTrackDatumIdAccessor(track_id);\n                    var rule_set = this.getRuleSet(track_id);\n                    if (!rule_set) {\n                      return;\n                    }\n                    var self = this;\n\n                    this.track_cells[track_id] = {};\n                    var cell_class = this.getCellCSSClass();\n                    var track_cell_class = this.getTrackCellCSSClass(track_id);\n                    var track_cells = this.track_cells[track_id];\n\n                    var bound_svg = d3.select(fragment).selectAll('svg.'+track_cell_class).data(data);\n                    bound_svg.enter().append('svg').classed(track_cell_class, true).classed(cell_class, true)\n                      .attr('shape-rendering','geometricPrecision')\n                      .attr('preserveAspectRatio','none')\n                      .attr('viewBox', '0 0 '+oncoprint.getFullCellWidth()+' '+oncoprint.getCellHeight(track_id))\n                      .style('width', oncoprint.getZoomedCellWidth()+'px').style('height', oncoprint.getCellHeight(track_id)+'px');\n                    bound_svg.exit().remove();\n\n                    var tooltip = oncoprint.getTrackTooltip(track_id);\n                    bound_svg.each(function(d,i) {\n                      var dom_cell = this;\n                      var id = id_accessor(d);\n                      track_cells[id] = {dom: this, d: d};\n                    });\n                    bound_svg.selectAll('*').remove();\n                    this.active_rule_set_rules[rule_set.getRuleSetId()][track_id] = rule_set.apply(bound_svg, oncoprint.getFullCellWidth(), oncoprint.getCellHeight(track_id));\n                    self.track_cell_selections[track_id] = bound_svg;\n                  };\n                  OncoprintSVGRenderer.prototype.drawCells = function(track_ids) {\n                    var fragment;\n                    if (this.document_fragment) {\n                      //HACK\n                      fragment = document.createDocumentFragment();\n                    } else {\n                      fragment = this.cell_div.node();\n                    }\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var self = this;\n                    _.each(track_ids, function(track_id) {\n                      self.drawTrackCells(track_id, fragment);\n                    });\n                    if (this.document_fragment) {\n                      this.cellRenderTarget().node().appendChild(fragment);\n                    }\n                    setTimeout(function() {\n                      $(self).trigger(events.FINISHED_RENDERING);\n                    }, 0);\n                  };\n\n                  // Positioning\n                  OncoprintSVGRenderer.prototype.clipAndPositionCells = function(track_ids, axis, force, display_all) {\n                    this.cell_div.node().display = 'none';\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : track_ids;\n                    track_ids = [].concat(track_ids);\n                    var visible_interval = this.getVisibleInterval();\n                    var interval_width = 4*(visible_interval[1] - visible_interval[0]);\n                    var interval_number = Math.floor(visible_interval[0] / interval_width);\n                    visible_interval = _.map([-interval_width, 2*interval_width], function(x) { \n                      return Math.max(x + interval_number*interval_width, 0); \n                    });\n                    var self = this;\n                    var track_cell_tops = this.getTrackCellTops();\n                    var id_order = this.oncoprint.getVisibleInvertedIdOrder();\n                    var cell_x = this.getCellXArray(Object.keys(id_order).length);\n                    _.each(track_ids, function(track_id) {\n                      var y;\n                      if (!axis || axis === 'top') {\n                        y = track_cell_tops[track_id];\n                      }\n                      var id_key = self.oncoprint.getTrackDatumIdKey(track_id);\n                      if ((interval_number !== self.prev_interval_number) || force) {\n                        if (self.track_cell_selections.hasOwnProperty(track_id)) {\n                          self.track_cell_selections[track_id].each(function(d,i) {\n                            var new_x = cell_x[id_order[d[id_key]]];\n                            var disp = this.style.display;\n                            var new_disp = ((isNaN(new_x) || new_x < visible_interval[0] || new_x > visible_interval[1]) && !display_all) ? 'none' : 'inherit';\n                            if (disp !== new_disp) {\n                              this.style.display = new_disp;\n                            }\n                            if ((!axis || axis === 'left') && new_disp !== 'none') {\n                              this.style.left = new_x + 'px';\n                            }\n                            if ((!axis || axis === 'top') && new_disp !== 'none') {\n                              this.style.top = y+'px';\n                            }\n                          });\n                        }\n                      }\n                    });\n                    this.prev_interval_number = interval_number;\n                    this.cell_div.node().display = 'block';\n                  };\n\n                  OncoprintSVGRenderer.prototype.setLegendVisible = function(track_ids, visible) {\n                    var self = this;\n                    track_ids = typeof track_ids === \"undefined\" ? this.oncoprint.getTracks() : [].concat(track_ids);\n                    _.each(track_ids, function(id) {\n                      self.getRuleSet(id).exclude_from_legend = !visible;\n                    });\n                    this.renderLegend();\n                  };\n                  OncoprintSVGRenderer.prototype.renderLegend = function(include_all) {\n                    var cell_width = this.oncoprint.getFullCellWidth();\n                    var self = this;\n                    var rendered = {};\n                    self.legend_table.selectAll('*').remove();\n                    _.each(this.rule_sets, function(rule_set, track_id) {\n                      if (rule_set.exclude_from_legend && !include_all) {\n                        return;\n                      }\n                      var rule_set_id = rule_set.getRuleSetId();\n                      var active_rules = {};\n                      _.each(self.active_rule_set_rules[rule_set_id], function(track_map, track_id) {\n                        $.extend(active_rules, track_map);\n                      });\n                      if (!rendered.hasOwnProperty(rule_set_id)) {\n                        var tr = self.legend_table.append('tr');\n                        var label_header = tr.append('td').style('padding-top', '1em').style('padding-bottom', '1em')\n                              .append('span').classed('oncoprint-legend-header', true);\n                        label_header.text(rule_set.getLegendLabel());\n                        var legend_body_td = tr.append('td');\n                        var legend_div = rule_set.getLegendDiv(active_rules, cell_width, self.oncoprint.getCellHeight(track_id));\n                        legend_body_td.node().appendChild(legend_div);\n                        utils.d3SelectChildren(d3.select(legend_div), '*').classed('oncoprint-legend-block-span', true);\n                        rendered[rule_set_id] = true;\n                      }\n                    });\n                  };\n                  OncoprintSVGRenderer.prototype.dragLabel = function(track_id) {\n                    this.getLabelDragDiv().style('display','block');\n                    var track_group = this.oncoprint.getContainingTrackGroup(track_id);\n                    var first_track = track_group[0], last_track=track_group[track_group.length-1];\n                    var all_track_tops = this.getTrackLabelTops();\n                    var track_tops = {};\n                    _.each(track_group, function(id) { \n                      track_tops[id] = all_track_tops[id];\n                    });\n                    track_group.splice(track_group.indexOf(track_id), 1);\n                    var group_track_tops = _.map(track_group, function(id) {\n                      return track_tops[id];\n                    });\n                    var label_area_height = this.getLabelAreaHeight();\n                    var drag_bounds = [undefined, undefined];\n                    drag_bounds[0] = utils.clamp(track_tops[first_track], 0, label_area_height);\n                    drag_bounds[1] = utils.clamp(track_tops[last_track]+this.getRenderedTrackHeight(last_track), 0, label_area_height);\n\n                    var self = this;\n                    var $label_drag_div = $(self.getLabelDragDiv().node());\n                    delete track_tops[track_id];\n\n                    (function(track_id) {\n                      var new_pos = -1;\n                      var moveHandler = function(evt) {\n                        if (evt.stopPropagation) {\n                          evt.stopPropagation();\n                        }\n                        if (evt.preventDefault) {\n                          evt.preventDefault();\n                        }\n                        var mouse_y = utils.clamp(utils.mouseY(evt), drag_bounds[0], drag_bounds[1]);\n                        self.renderTrackLabels(track_id, mouse_y);\n                        d3.selectAll(self.getTrackLabelCSSSelector(track_id)).classed(LABEL_DRAGGING_CLASS, true);\n                        \n                        new_pos = _.sortedIndex(group_track_tops, mouse_y);\n                        _.each(track_tops, function(top, id) {\n                          top += 3*(+(new_pos < track_group.length && track_group[new_pos] == id));\n                          top -= 3*(+(new_pos > 0 && track_group[new_pos-1] == id));\n                          self.renderTrackLabels(id, top);\n                        });\n                      }\n                      $label_drag_div.on(\"mousemove\", moveHandler);\n                      var mouseUpHandler = function(evt) {\n                        $label_drag_div.hide();\n                        $label_drag_div.off(\"mousemove\", moveHandler);\n                        if (new_pos > -1) {\n                          self.oncoprint.moveTrack(track_id, new_pos);\n                        }\n                      };\n                      $(document).one(\"mouseup\", mouseUpHandler);\n                    })(track_id);\n                  };\n                  OncoprintSVGRenderer.prototype.toSVG = function(full_labels) {\n                    var self = this;\n                    var root = $(this.container.node()).offset();\n                    var svg = d3.select(document.createElementNS('http://www.w3.org/2000/svg', 'svg'));\n                    svg.attr('width', this.getLabelAreaWidth() + this.getCellAreaWidth() + 'px');\n                    this.renderLegend(true);\n                    this.renderTrackLabels(undefined, undefined, full_labels);\n                    svg.attr('height', $(this.container.node()).height()+'px');\n                    (function addLabels() {\n                      self.label_div.selectAll('.oncoprint-track-label').each(function() {\n                        var text_elt = d3.select(this);\n                        var font = text_elt.style('font-family') || 'Arial';\n                        var weight = text_elt.style('font-weight'); \n                        var size = text_elt.style('font-size') || '12px';\n                        var pos = $(text_elt.node()).offset();\n                        var text = text_elt.text();\n                        svg.append('text').style('font-family', font).style('font-weight', weight).style('font-size', size)\n                            .attr('transform', utils.translate(pos.left - root.left,pos.top - root.top))\n                            .style('alignment-baseline', 'hanging')\n                            .text(text);  \n                      });\n                    })();\n                    (function addCells() {\n                      self.clipAndPositionCells(undefined, undefined, true, true);\n                      self.cell_div.selectAll('.oncoprint-cell').each(function() {\n                        var cell_elt = d3.select(this);\n                        var cell_rect = cell_elt.node().getBoundingClientRect();\n                        var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                        var pos = $(cell_elt.node()).offset();\n                        var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                        cell_elt.selectAll('*').each(function() {\n                          utils.appendD3SVGElement(d3.select(this), g);\n                        });\n                        var outline_styles = {color: cell_elt.style('outline-color'), width: cell_elt.style('outline-width')};\n                        if (outline_styles.color) {\n                          g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                              .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                        }\n                      });\n                      //styles = {'outline-color':rule_spec.color, 'outline-style':'solid', 'outline-width':'2px'};\n                      self.clipAndPositionCells(undefined, undefined, true);\n                    })();\n                    (function addLegend() {\n                      self.legend_table.selectAll('tr').each(function() {\n                        d3.select(this).selectAll('td').each(function() {\n                          d3.select(this).selectAll('.oncoprint-legend-header,.oncoprint-legend-element').each(function() {\n                            if ($(this).text().trim().length) {\n                              // text type element\n                              var text_elt = d3.select(this);\n                              var font = text_elt.style('font-family') || 'Arial';\n                              if (font !== 'Arial') {\n                                //console.log(this);\n                              }\n                              var weight = text_elt.style('font-weight'); \n                              var size = text_elt.style('font-size') || '12px';\n                              var text = text_elt.text();\n                              var pos = $(text_elt.node()).offset();\n                              svg.append('text').style('font-family', font).style('font-weight', weight)\n                                .style('font-size', size)\n                                .attr('transform', utils.translate(pos.left - root.left, pos.top - root.top))\n                                .style('alignment-baseline', 'hanging')\n                                .text(text);\n                            } else if (this.tagName.toLowerCase() === 'svg') {\n                              var elt = d3.select(this);\n                              var pos = $(elt.node()).offset();\n                              var g = svg.append('g').attr('transform', utils.translate(pos.left - root.left, pos.top - root.top));\n                              var cell_rect = elt.node().getBoundingClientRect();\n                              var cell_dim = {width: cell_rect.width, height: cell_rect.height};\n                              var outline_styles = {color: elt.style('outline-color'), width: elt.style('outline-width')};\n                              if (outline_styles.color) {\n                                g.append('rect').attr('width', cell_dim.width+'px').attr('height', cell_dim.height+'px')\n                                    .style('fill', 'none').style('stroke', outline_styles.color).style('stroke-width', outline_styles.width);\n                              }\n                              elt.selectAll('*').each(function() {\n                                utils.appendD3SVGElement(d3.select(this), g);\n                              });\n                            }\n                          });\n                        });\n                      });\n                    })();\n                    this.renderLegend();\n                    this.renderTrackLabels();\n                    return svg.node();\n                  };\n                  return OncoprintSVGRenderer;\n            })();\n            \n            function displayOncoprint(msg)\n            {\n               $(\"#onc\").empty();\n               $(\"#oncoprintErrorSection\").empty();\n               $(\".oncoprint-label-col1\").empty();\n              \n               if(msg.status == \"error\") {\n                  vm.errorMessage = JSON.parse(msg.payload);\n                  console.log(\"***** errors in dispalyOncoprint\", vm.errorMessage);\n                  setState(\"errors\"); \n                }else{\n                     var genes = msg.payload[1];\n                     var processed_data = msg.payload[0];\n                     var onc = Oncoprint.create('#onc');\n                     onc.suppressRendering();\n                     $.when(processed_data).then(function(){\n                          if(typeof(genes) === \"string\"){\n                            genes = [genes];\n                           }  \n                          var tracks_to_load = genes.length;\n\n                          var track_id = [];\n                          for(var i = 0; i < genes.length; i++){\n                            var gene = genes[i];\n                            function data_gene_map(obj) {\n                                return obj.gene === gene;\n                            }\n                            var data_gene = processed_data.filter(data_gene_map); \n\n                            var addTrackStart = Date.now();\n                            track_id[i] = onc.addTrack({label: gene, removable:true}, 0);\n                            if(i === 0){\n                              onc.setRuleSet(track_id[i], Oncoprint.GENETIC_ALTERATION);\n                            }else{\n                              onc.useSameRuleSet(track_id[i], track_id[0]);\n                            }\n                            onc.setTrackData(track_id[i], data_gene, true);\n                          }            \n                        onc.releaseRendering();\n                        onc.sort();\n                        $('#toggle_whitespace').click(function() {\n                           onc.toggleCellPadding();\n                        });\n                        var z = 1;\n                        $('#reduce_cell_width').click(function() {\n                            z *= 0.5;\n                            onc.setZoom(z);\n                        });  \n                    //move legend to oncoscape label section\n                    var allOncoLegendBlocks = $(\".oncoprint-legend-block\");\n                    var allOncoLegendLabels = $(\".oncoprint-legend-label\");\n                    for(var j = 0; j < allOncoLegendBlocks.length; j++){\n                      allOncoLegendBlocks[j].appendChild(allOncoLegendLabels[j]);\n                    }\n                    $(\".oncoprint-label-col1\").append(allOncoLegendBlocks); \n                    $(\"#oncoprintInstructions\").hide();\n                  });  \n                }           \n            } // displayOncoprint\n           \n\n            // Initialize\n            osApi.setBusy(true)(\"Loading Dataset\");\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                    return v.indexOf(\"mtx\") >= 0\n                });\n        \n                // Patient Data\n                var rawPatientData = response.payload.tbl;\n                var mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n   \n  \n                $scope.$watchGroup(['vm.geneAndPatients'], function() {\n                   drawOncoprint(vm.geneAndPatients);\n                });  \n                 osApi.setBusy(false);\n            });\n\n\n            var _state = \"\";\n            var setState = function(value){\n              if (_state==value) return;\n              switch(value){\n                case \"instructions\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n                case \"control\":\n                  elControl.show();\n                  elInstructions.hide();\n                  elLegend.show();\n                  break;\n                case \"errors\":\n                  elControl.hide();\n                  elInstructions.show();\n                  elLegend.hide();\n                  break;\n              }\n              \n            }\n            \n            // API Call To oncoprint_data_selection\n            var drawOncoprint = function(msg) {\n\n                if ((selectedPatientIds == null) || (selectedGeneIds == null) ){\n                  setState(\"instructions\");\n                  return;\n                } \n              \n                var geneAndPatients = msg;\n                geneAndPatients = geneAndPatients.split(',');\n\n                if(geneAndPatients.length > 350){\n                  vm.errorMessage = \"ERROR: The total number of Patients and Genes are set to be less than 350.\";\n                  setState(\"errors\");\n                }else{\n                  osApi.setBusy(true);\n                  osApi.getOncoprint(geneAndPatients);\n                  osApi.getOncoprint(geneAndPatients).then(function(response) {\n                      var payload = response.payload;\n                      displayOncoprint(payload);\n                      setState(\"control\");\n                      osApi.setBusy(false);\n                  });\n                }\n            }\n\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMetadata', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/metadata/metadata.html',\n            controller: MetadataController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MetadataController(osApi, $state, $timeout, $scope, $stateParams) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataset = $stateParams.datasource;\n            vm.colnames = [];\n            vm.rows = [];\n            vm.search = \"\";\n    \n            // Elements\n            var dtTable;\n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.getDataManifest(vm.dataset).then(function(response) {\n                vm.colnames = response.payload.colnames;\n                vm.rows = response.payload.mtx;\n                $timeout(function() {\n                    dtTable = angular.element('#metadata-datatable').dataTable({\n                        \"paging\": false\n                    });\n                    $scope.$watch('vm.search', function() {\n                        dtTable.api().search(vm.search).draw();\n                    });\n                    osApi.setBusy(false);\n                }, 0, false);\n            });\n        }\n    }\n})();\n\n(function() {\n    //'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osMarkers', markers);\n\n    /** @ngInject */\n    function markers() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/markers/markers.html',\n            scope: {},\n            controller: MarkersController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function MarkersController(osApi, osHistory, $state, $timeout, $scope, $stateParams, cytoscape, signals, moment, $window, _, $q) {\n\n            var signal = {\n                patients: {\n                    select: new signals.Signal(),\n                    unselect: new signals.Signal(),\n                    over: new signals.Signal(),\n                    out: new signals.Signal()\n                },\n                genes: {\n                    select: new signals.Signal(),\n                    unselect: new signals.Signal(),\n                    over: new signals.Signal(),\n                    out: new signals.Signal()\n                }\n            };\n\n\n            /*\n            *  Cytoscape Chart\n            *  + Node & Edge Styles\n            */\n            var elChart = angular.element(\"#markers-chart\");\n            var cyChart = (function(elChart) {\n                return cytoscape({\n                    container: elChart,\n                    style: [{\n                        selector: 'core',\n                        style: {\n                            'selection-box-color': '#3993fa',\n                            'selection-box-border-color': '#3993fa',\n                            'selection-box-border-width': '1px',\n                            'selection-box-opacity': '.2'\n                        }\n                    }, {\n                        selector: 'node',\n                        style: {\n                            'display': \"data(display)\",\n                            'height': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'width': \"mapData(sizeEle, 0, 50, 10, 100)\",\n                            'font-size': 'data(sizeLbl)',\n                            'text-valign': 'center'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]',\n                        style: {\n                            'background-color': 'data(color)',\n                            'text-halign': 'center',\n                            'border-width': 500,\n                            'width': '2500px',\n                            'height': '2500px',\n                            'border-color': '#FFFFFF'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"patient\"]:selected',\n                        style: {\n                            'border-color': \"#FF0000\",\n                            'border-width': 300\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]',\n                        style: {\n                            'background-color': \"#FFFFFF\",\n                            'border-color': \"#38347b\",\n                            'text-halign': \"right\",\n                            //'label': \"data(id)\",\n                            'border-width': 'data(sizeBdr)',\n                            'width': '2500px',\n                            'height': '2500px'\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"gene\"]:selected',\n                        style: {\n                            'border-color': \"#FF0000\",\n                            'border-width': 300\n                        }\n                    }, {\n                        selector: 'node[nodeType=\"centromere\"]',\n                        style: {\n                            'font-size': '2000px',\n                            'text-halign': 'center',\n                            'background-color': \"#3993fa\",\n                            'color': \"#FFFFFF\",\n                            'border-color': 'rgb(19, 150, 222)',\n                            'height': '2500px',\n                            'width': '4000px',\n                            'shape': 'roundrectangle',\n                            'label': \"  data(id)\"\n                        }\n                    }, {\n                        selector: 'edge',\n                        style: {\n                            'display': \"data(display)\",\n                            'line-color': \"data(color)\",\n                            'width': \"data(sizeEle)\"\n                        }\n                    }],\n                    hideEdgesOnViewport: false,\n                    hideLabelsOnViewport: true,\n                    textureOnViewport: false,\n                    motionBlur: false,\n                    //motionBlurOpacity: 0.2,\n                    minZoom: .001,\n                    maxZoom: .05,\n                    layout: {\n                        name: \"preset\",\n                        fit: true\n                    }\n                });\n            })(elChart);\n\n            /*\n            * View Model + Initial Data Load \n            * + Initial Data Load\n            * + View Port Resize Event\n            */\n            var vm = (function(vm, osApi){\n                vm.datasource = osApi.getDataSource();\n\n                vm.optGeneSets = [];\n                vm.optGeneSet;\n                vm.optPatientLayouts = [];\n                vm.optPatientLayout;\n                vm.optDatasets = [];\n                vm.optDataset;\n                vm.search = \"\";\n\n                // vm.optCommandGene = false;\n                // vm.optCtxGeneShow;\n                // vm.optCommandPatient;\n                // vm.optCtxPatientShow = false;\n                // vm.optInteractiveModes;\n                // vm.optInteractiveMode;\n                // vm.optPatientLayouts;\n                // vm.optPatientLayout;\n                // vm.optNodeColors;\n                // vm.optNodeColor;\n                // vm.optEdgeColors;\n                // vm.legandNodes;\n                // vm.legandPatient;\n                // vm.legandChromosomes;\n                // vm.searchGene;\n                // vm.searchGeneResult = \"\";\n                // vm.searchPatient;\n                // vm.searchPatientResult = \"\";\n                // vm.optGeneSets;\n                // vm.optGeneSet = \"\";\n                // vm.optCohortModes;\n                // vm.optCohortMode = \"\";\n                // vm.optCohortPatients;\n                // vm.optCohortPatient;\n                // vm.optCohortGenes;\n                // vm.optCohortGene;\n                // vm.optCommands;\n                // vm.patient;\n                // vm.gene;\n                // vm.frame;\n\n                $q.all([\n                    osApi.query(\"mp_genesets\", { $fields:['name'] }),\n                    osApi.query(\"mp_patient_layouts\", { $fields:['layouts'] })\n                ]).then(function(results){\n                    vm.optGeneSets = results[0].data;\n                    vm.optGeneSet = vm.optGeneSets[0];\n                    vm.optPatientLayouts = results[1].data[0].layouts;\n                    vm.optPatientLayout = vm.optPatientLayouts[0]\n                });\n                vm.resize = function(){\n                    var width = $window.innerWidth;\n                    if (angular.element(\".tray\").attr(\"locked\")==\"true\") width -= 300;\n                    elChart.width( width );\n                    elChart.height($window.innerHeight - 90);\n                    cyChart.resize();\n                }\n                angular.element($window).bind('resize', \n                    _.debounce(vm.resize, 300)\n                );\n\n                return vm;\n            })(this, osApi);\n\n            /*\n            * Zoom Control Functions\n            * - reset\n            * - fit\n            */\n            var zoom = (function(cyChart,vm){\n                var reset = function(){\n                    cyChart.fit();\n                    cyChart.center();\n                };\n                var fit = function(){\n                    chart.fit( chart.$(':selected'), 50 )\n                };\n                return {reset:reset, fit:fit};\n            })(cyChart,vm);\n\n            /* \n            *  Interop Between UI and Worker Thread\n            *  - setGeneSet(name:String)\n            *  - setPatientLayout(name:String)\n            *  - setDataSource(name:String)\n            *  - setOptions(options:Object)\n            */\n            var process = (function(cyChart, vm, osApi, $q, zoom, _, signal){\n\n                /* Draw Methods\n                *  - patients\n                *  - genes\n                *  - edges\n                */\n                var draw = (function(cyChart, vm, osApi, $q, _, signal){\n\n                    // Draw Chromosome\n                    osApi.query(\"_mp\", {name:\"chromosome\"}).then(function(result){\n\n                        // Process Chromosome\n                        var chromosomes = result.data[0].data;\n                        var elements = [];\n\n                        Object.keys(chromosomes).forEach(function(key){\n                            var chromosome = this.chromosomes[key][0];\n                            this.elements.push(\n                                {\n                                    group: \"edges\",\n                                    grabbable: false,\n                                    locked: true,\n                                    selectable: false,\n                                    data:{\n                                        color: \"rgb(19, 150, 222)\",\n                                        id: \"ce\"+key,   // Chromosome Edge (CE)\n                                        display: \"element\",\n                                        edgeType:\"chromosome\",\n                                        sizeEle: 500,  // Style?\n                                        source : \"cp\"+key,  // Chromosome P (CP)\n                                        target : \"cq\"+key   // Chromosome Q (CQ)\n                                    }\n                                });\n\n                            // Telemere P\n                            this.elements.push({\n                                    group: \"nodes\",\n                                    grabbable: false,\n                                    locked: true,\n                                    selectable: false,\n                                    position:{\n                                        x: chromosome.x,\n                                        y: chromosome.p\n                                    },\n                                    data:{\n                                        color:\"rgb(19, 150, 222)\",\n                                        id:\"cp\"+key,\n                                        display:\"element\",\n                                        nodeType:\"telomere\",\n                                        degree:1,\n                                        sizeBdr:0,\n                                        sizeEle:500,\n                                        sizeLbl:12,\n                                        subType: \"unassigned\"\n                                    }\n                                });\n                            // Telemere Q\n                            this.elements.push({\n                                   group: \"nodes\",\n                                    grabbable: false,\n                                    locked: true,\n                                    selectable: false,\n                                    position:{\n                                        x: chromosome.x,\n                                        y: chromosome.q\n                                    },\n                                    data:{\n                                        color:\"rgb(19, 150, 222)\",\n                                        id:\"cq\"+key,\n                                        display:\"element\",\n                                        nodeType:\"telomere\",\n                                        degree:1,\n                                        sizeBdr:500,\n                                        sizeEle:500,\n                                        sizeLbl:500,\n                                        subType: \"unassigned\"\n                                    }\n                                });\n                            // Centromere Q\n                            this.elements.push({\n                                    group: \"nodes\",\n                                    grabbable: false,\n                                    locked: true,\n                                    selectable: false,\n                                    position:{\n                                        x: chromosome.x,\n                                        y: chromosome.c\n                                    },\n                                    data:{\n                                        id:key,\n                                        display:\"element\",\n                                        nodeType:\"centromere\",\n                                        degree:1\n                                    }\n                                });\n                        }, {chromosomes:chromosomes, elements:elements});\n                        cyChart.add(elements);\n                    });\n\n                    var patients = function(patients){    \n                        cyChart.remove('node[nodeType=\"patient\"]');\n                        var patients = cyChart.add(patients);\n                        patients.on(\"select\", _.debounce(signal.patients.select.dispatch ,300));\n                        patients.on(\"unselect\", _.debounce(signal.patients.unselect.dispatch ,300));\n                        patients.on(\"mouseover\", signal.patients.over.dispatch);\n                        patients.on(\"mouseout\", signal.patients.out.dispatch);\n                    };\n\n                    var genes = function(genes){\n                        cyChart.remove('node[nodeType=\"gene\"]');\n                        var genes = cyChart.add(genes);\n                        genes.on(\"select\", _.debounce(signal.genes.select.dispatch ,300));\n                        genes.on(\"unselect\", _.debounce(signal.genes.unselect.dispatch ,300));\n                        genes.on(\"mouseover\", signal.genes.over.dispatch);\n                        genes.on(\"mouseout\", signal.genes.out.dispatch);\n\n                    };\n\n                    var edges = function(edges){\n\n                    };\n\n                    return {\n                        patients:patients,\n                        genes:genes,\n                        edges:edges\n                    };\n                })(cyChart, vm, osApi, $q, _, signal);\n\n                // Worker\n                var worker = new Worker(\"app/components/markers/markers.worker.js\");\n\n                // Inbound\n                worker.addEventListener('message', function(msg) {\n                    msg = msg.data;\n                    switch(msg.cmd){\n                        case \"patients\":    draw.patients(msg.data);  break;\n                        case \"genes\":       draw.genes(msg.data);     break;\n                        case \"edges\":       draw.edges(msg.data);     break;\n                    }\n                    zoom.reset();\n                }, false);\n\n                // Outbound\n                return {\n                    setGeneSet: function(name) { \n                        console.log(osApi.queryString(\"mp_genesets\", {name:name}));\n                        worker.postMessage({cmd:\"setGeneSet\", data:osApi.queryString(\"mp_genesets\", {name:name}) }); \n                    },\n                    setPatientLayout: function(name) { \n                        console.log(osApi.queryString(name));\n                        worker.postMessage({cmd:\"setPatientLayout\", data:osApi.queryString(name)}); \n                    },\n                    setDataSource: function(name) { \n                        console.log(osApi.queryString(name));\n                        worker.postMessage({cmd:\"setDataSource\", data:osApi.queryString(name)}); \n                    },\n                    setOptions: function(name) { \n\n                        //worker.postMessage({cmd:\"setOptions\", data:osApi.queryString(name)}); \n                    }\n                };\n            })(cyChart, vm, osApi, $q, zoom, _, signal);\n\n            /*\n            *  Watch View Model\n            *  + vm.optGeneSet\n            *  + vm.optPatientLayout\n            */\n            var watch = (function(vm, process, $scope){\n                $scope.$watch(\"vm.optGeneSet\", function(){  \n                    if (angular.isUndefined(vm.optGeneSet)) return;\n                    process.setGeneSet(vm.optGeneSet.name);\n                });\n                $scope.$watch(\"vm.optPatientLayout\", function(){\n                    if (angular.isUndefined(vm.optPatientLayout)) return;\n                    process.setPatientLayout(vm.optPatientLayout.collection);\n                });\n            })(vm, process, $scope);\n\n            /*\n            *  Factory For Creating Options\n            */\n            var optionsFactory = (function(cyChart, vm, process, $scope){\n\n\n\n                // signal.patients.over.add(function(e){\n                //     console.log(e.cyTarget.data().id);\n                // })\n\n                var patientIds = [];\n                var geneIds = [];\n\n                signal.patients.select.add(function(e){\n                    patientIds = cyChart.$('node[nodeType=\"patient\"]:selected').map(function(p){ return p.data().id });\n                    console.log(patientIds);\n                });\n\n                signal.genes.select.add(function(e){\n                    geneIds = cyChart.$('node[nodeType=\"gene\"]:selected').map(function(p){ return p.data().id });\n                    console.log(geneIds);\n                });\n\n                \n\n                /*\n                *   Register Watch Listners\n                */\n                var watch = (function(vm){\n\n                })(vm, $scope);\n\n\n                var options = function(){\n\n                    // Initialize Options Objects\n                    var patients = {data:'', filters:[], colors:{}};\n                    var edges =    {data:'', filters:[]};\n                    var genes =    {data:'', colors:{}};\n                    var tmp;\n\n                    // Search\n                    if (vm.search.trim().length>0){\n                        tmp = {type:\"*\", attribute:\"name\", value:vm.search.trim()};\n                        genes.filters.push(tmp);\n                        patients.filter.push(tmp);\n                    }\n\n                    // Patient Ids\n                    if (patientIds.length>0){\n                        patients.filter.push({type:\"=\", attribute:\"id\", values:patientIds});\n                    }\n\n                    // Gene Ids\n                    if (geneIds.length>0){\n                        genes.filter.push({type:\"=\", attribute:\"id\", values:geneIds});\n                    }\n                    \n                }\n\n            })(cyChart, vm, process, $scope);\n\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLogin', login);\n\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/login/login.html',\n            replace: true,\n            controller: LoginController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LoginController(osApi, $state) {\n            \n            var userApi = osApi.getUserApi();\n\n            var vm = this;\n            vm.domains = userApi.getDomains();\n            vm.user = userApi.getUser();\n            vm.hasError = false;\n\n            vm.login = function() {\n                var promise = userApi.login(vm.user);\n                if (angular.isDefined(promise)){\n                    promise.then(function() {\n                        if (vm.user.authenticated) {\n                            $state.go(\"datasource\");\n                        } else {\n                            vm.hasError = true;\n                        }\n                    });\n                }else{\n                    $state.go(\"datasource\");\n                }\n                \n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osLoader', login);\n\n    /** @ngInject */\n    function login() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/loader/loader.html',\n            replace: true\n        };\n\n        return directive;\n    }\n\n})();\n\n(function() {\n    'use strict';\n    angular\n        .module('oncoscape')\n        .directive('osLanding', landing);\n\n    /** @ngInject */\n    function landing() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/landing/landing.html',\n            replace: true,\n            controller: LandingController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function LandingController($state) {\n            var vm = this;\n            vm.login = function() {\n                $state.go(\"login\");\n            }\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHistory', history);\n\n    /** @ngInject */\n    function history() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/history/history.html',\n            controller: HistoryController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HistoryController(osApi, osHistory, $state, $timeout, $scope, moment, $stateParams, _, $, $q) {\n            // Properties\n            var vm = this;\n            var table;\n            var selectedIds = (osHistory.getPatientSelection() == null) ? [] : osHistory.getPatientSelection().ids;\n\n            var initViewState = function(vm){\n                vm.datasource = osApi.getDataSource();\n                vm.diagnosisMin = vm.diagnosisMinValue = 1;\n                vm.diagnosisMax = vm.diagnosisMaxValue = 100000;\n                vm.survivalMin = vm.survivalMinValue = 0;\n                vm.survivalMax = vm.survivalMaxValue = 10;\n                vm.search = \"\";\n                vm.detail = null;\n            }\n\n            var initDataTable = function(vm, columns, data){\n                \n                // Override Filter Function\n                angular.element.fn.DataTable.ext.search = [function(settings, data) {\n                    \n                    if (selectedIds.length!=0) {\n                        if (selectedIds.indexOf(data[0]) == -1) return false;\n                    }\n\n                    var diagnosis = parseFloat(data[3]);\n                    var survival = parseFloat(data[4]);\n                    //if (isNaN(survival) || isNaN(diagnosis)) return false;\n                    // return (diagnosis >= vm.diagnosisMin &&\n                    //     diagnosis < (vm.diagnosisMax + 1) &&\n                    //     survival >= vm.survivalMin &&\n                    //     survival < (vm.survivalMax + 1));\n                    return true;\n                }];\n        \n                // Specify Data\n                table = angular.element('#history-datatable').dataTable({\n                            paging: false,\n                            columns: columns,\n                            data: data\n                            //\"scrollY\": \"50vh\",\n                            //\"scrollCollapse\": true\n                });\n                table.api().draw();\n            }\n\n            var initEvents = function(vm, $scope){\n\n/*\n                $('#history-datatable tbody').on( 'click', 'tr', function () {\n                    // $('.history-row-selected').removeClass('history-row-selected');\n                    $(this).addClass('history-row-selected');\n                    osApi.query(vm.datasource+\"_pt\", {'patient_ID':this.firstChild.textContent, $limit:1}).then(function(response){\n                        vm.detail = response.data[0];\n                    });\n                } );\n                $('#history-datatable tbody').on( 'mouseout', 'tr', function () {\n                    $(this).removeClass('history-row-selected');\n                    vm.detail = null;\n                });\n                */\n\n                vm.applyFilter = function(filter) {\n\n                    selectedIds = [];\n\n                    table.api().draw();\n\n                    var o = table._('tr', {\n                        \"filter\": \"applied\"\n                    }).map(function(item) {\n                        return item[\"patient_ID\"].toString().toUpperCase()\n                    });\n\n                    o = $.map(o, function(value) {\n                        return [value];\n                    });\n\n                    osHistory.addPatientSelection(\"Patient History\", filter, o);\n                };\n\n                var init = true;\n                $scope.$watch('vm.search', _.debounce(function() {\n                    if (init) {\n                        init = false;\n                        return;\n                    }\n                    vm.applyFilter(\"Search\");\n                }, 1000));\n\n                osHistory.onPatientSelectionChange.add(function(selection) {\n                    selectedIds = selection.ids;\n                    table.api().draw();\n                });\n                \n            }\n\n            // Load Datasets\n            osApi.setBusy(true);\n            \n            var columns = [\n                {data:'patient_ID', title:'Patient ID', defaultContent:'NA'},\n                {data:'gender', title:'Gender', defaultContent:'NA'},\n                {data:'race', title:'Race', defaultContent:'NA'},\n                {data:'age_at_diagnosis', title:'DX Age', defaultContent:'NA'},\n                {data:'days_to_death', title:'Survival', defaultContent:'NA'},\n                {data:'status_vital', title:'Status', defaultContent:'NA'}\n            ];\n\n            \n            initViewState(vm);\n            osApi.query(vm.datasource.table.patient, \n                {\n                    $fields:columns.map(function(f){ return f.data; }),\n                    $limit:0\n                })\n            .then(function(response){\n               initDataTable(vm, columns, response.data);\n               initEvents(vm, $scope)\n               osApi.setBusy(false);\n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHelp', help);\n\n    /** @ngInject */\n    function help() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/help/help.html',\n            controller: HelpController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HelpController() {\n            var vm = this;\n           vm.videos = [\n               {\n                    name: 'Oncoscape + Github',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Creating Cohorts',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Patients + Markers',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               },\n               {\n                    name: 'Timelines',\n                    desc: 'Description Lorum Ipsum eos et sid al accusamus et iusto odio',\n                    img: ''\n               }\n           ]\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osHeader', header);\n\n    /** @ngInject */\n    function header() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/header/header.html',\n            scope: {},\n            controller: HeaderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function HeaderController(osApi, $stateParams, $state, $timeout) {\n\n            \n            osApi.onDataSource.add(function(){\n                $timeout(function(){\n                    vm.showTools = true;\n                });\n            });\n\n            var userApi = osApi.getUserApi();\n            userApi.onLogin.add(function(){\n                $timeout(function(){\n                    vm.showMenu = true;\n                });\n            })\n            userApi.onLogout.add(function(){\n                $timeout(function(){\n                    vm.showMenu = false;\n                });\n            })\n           \n            var vm = this;\n            vm.showMenu = false;\n            vm.showTools = false;\n              \n            vm.toolsClick = function(){\n                $state.go(\"tools\", {\n                    datasource: osApi.getDataSource()\n                });\n            };\n            \n            vm.cohortClick = function() {\n                osApi.toggleFilter();\n            };\n            \n            vm.logoutClick = function(){\n               userApi.logout();\n               $state.transitionTo(\"landing\");\n            }\n        }\n    }\n\n})();\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osGenesettest', genesettest);\n\n    /** @ngInject */\n    function genesettest() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/genesettest/genesettest.html',\n            controller: GenesettestController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function GenesettestController(osApi, osHistory, $state, $stateParams, $timeout, $scope, d3, $window, _) {\n\n            if (angular.isUndefined($stateParams.datasource)) {\n                $state.go(\"datasource\");\n                return;\n            }\n\n            // Elements\n            var elInput = angular.element(\"#geneSetTestsInputsDiv\");\n            \n            // Properties\n            //var cohortPatient = osApi.getCohortPatient();\n\n            // View Model\n            var vm = this;\n            vm.datasource = $stateParams.datasource;\n            vm.geneSets = [];\n            vm.geneSet = null;\n\n        \n            var cohort1 = osHistory.getPatientSelections()[0];\n            var cohort2 = osHistory.getPatientSelections()[1];\n\n            // Initialize\n            osApi.setBusy(true);\n            osApi.setDataset(vm.datasource).then(function(response) {\n                var mtx = response.payload.rownames.filter(function(v) {\n                        return v.indexOf(\"mtx.mrna\") >= 0\n                    });\n\n                mtx = mtx[mtx.length - 1].replace(\".RData\", \"\");\n                console.log(\"**** mtx is: \", mtx);\n\n                if(cohort1 == null || cohort2 == null){\n                    vm.message = \"Please select two cohorts to test out the Gene Set\";\n                    vm.optCohort1 = \"Empty\";\n                    vm.optCohort2 = \"Empty\";\n                }else{\n                    vm.optCohort1 = cohort1.tool + \" \" +cohort1.desc + \" \" + cohort1.ids.length + \" Patients selected\" ;\n                    vm.optCohort2 = cohort2.tool + \" \" +cohort2.desc + \" \" + cohort2.ids.length + \" Patients selected\" ;\n                    var geneset = \"random.24\";\n                    //var geneset = \"tcga.pancan.mutated\";\n                    osApi.getGeneSetTest(vm.datasource, mtx).then(function() {\n                        $scope.$watchGroup(['vm.optCohort1', 'vm.optCohort2'], function() {\n                           calculateGeneSetScore(cohort1, cohort2, geneset);\n                        });  \n                     });   \n                }\n                osApi.setBusy(false);\n            });\n\n            var drawHeatMap = function(pt, genes, expressionData){\n                console.log(expressionData);\n                \n\n                var zValues = JSON.parse(expressionData);\n                var colorscaleValue = [\n                      [1, '#339966'],\n                      [2, '#003333']\n                    ];\n\n                    var data = [{\n                      //x: genes,\n                      y: pt,\n                      z: zValues,\n                      type: 'heatmap',\n                      //colorscale: colorscaleValue,\n                      showscale: true\n                    }];\n\n                    var layout = {\n                      title: 'GeneSet Heatmap',\n                      annotations: [],\n                      xaxis: {\n                        ticks: '',\n                        side: 'top'\n                      },\n                      yaxis: {\n                        ticks: '',\n                        ticksuffix: ' ',\n                        width: 500,\n                        height: 250,\n                        autosize: false\n                      }\n                    };\n\n\n                    Plotly.newPlot('heatMap', data, layout);\n            }\n            var drawHeatMap2 = function(pt, genes, expressionData){\n                   console.log(expressionData);\n            \n                   angular.element('#heatMap').highcharts({\n\n                        chart: {\n                            type: 'heatmap',\n                            marginTop: 40,\n                            marginBottom: 80,\n                            plotBorderWidth: 1,\n                        },\n\n\n                        title: {\n                            text: 'Gene Set Expression Heat Map'\n                        },\n\n                        xAxis: {\n                            // labels: {\n                            //     step: 1\n                            // },\n                            categories: genes\n                        },\n\n                        yAxis: {\n                            lineWidth: 5,\n                            lineColor: '#F33',\n                            categories: pt,\n                            title: null\n                        },\n\n                        colorAxis: {\n                            min: 0,\n                            //minColor:Highcharts.getOptions().colors[7],\n                            minColor: \"#FFFFFF\",\n                            maxColor:'#CC9933'\n                        },\n\n                        legend: {\n                            align: 'right',\n                            layout: 'vertical',\n                            margin: 10,\n                            verticalAlign: 'top',\n                            y: 25,\n                            symbolHeight: 280\n                        },\n\n                        tooltip: {\n                            formatter: function () {\n                                return '<b>' +this.series.yAxis.categories[this.point.y]  + ' '+ \n                                     this.series.xAxis.categories[this.point.x]+ ': ' +this.point.value + '</b>';\n                            }\n                        },\n\n                        series: [{\n                                    name: 'Sales per employee',\n                                    borderWidth: 0,\n                                    data: JSON.parse(expressionData) }]\n                    });\n\n            }    \n            // API Call To oncoprint_data_selection\n            var calculateGeneSetScore = function(cohort1, cohort2, geneset) {    \n                var Group1 = cohort1.ids;\n                var Group2 = cohort2.ids;\n\n                osApi.setBusy(true);\n                osApi.getGeneSetScore(Group1, Group2, geneset).then(function(response){\n                    console.log(response.payload);\n                    if(response.status == \"error\"){\n                        vm.message = response.payload + \"Please select two cohorts to test out the Gene Set\";\n                    }else{\n                        vm.message = response.payload.summary;\n                        var pt = response.payload.pt;\n                        var g = response.payload.genes;\n                        drawHeatMap2(pt, g, response.payload.analysisData);\n                    }\n                    osApi.setBusy(false);\n                });\n             }    \n     }\n    } \n})();   \n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osFooter', footer);\n\n    /** @ngInject */\n    function footer() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/footer/footer.html',\n            controller: FooterController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function FooterController() {\n            //var vm = this;\n        }\n    }\n\n})();\n\n(function() {\n    'use strict';\n    \n    angular\n        .module('oncoscape')\n        .directive('osDatasource', datasource);\n\n    /** @ngInject */\n    function datasource() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/datasource/datasource.html',\n            controller: DatasourceController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DatasourceController(osApi, $state) {\n            var vm = this;\n            vm.datasets = osApi.getDataSources();\n            vm.explore = function(tool, datasource) {\n                osApi.setDataSource(datasource);\n                $state.go(tool, {\n                    datasource: datasource.key\n                });\n            };     \n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osDataExplorer', explore);\n\n    /** @ngInject */\n    function explore() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/dataexplorer/dataexplorer.html',\n            controller: DataExplorerController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function DataExplorerController(osApi, $state, $timeout, $scope, $stateParams, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataSources;\n            vm.dataSource;\n            vm.dataDiseases;\n            vm.dataDisease;\n            vm.dataTables;\n            vm.dataTable;\n            vm.dataFields;\n            vm.dataField;\n            \n            var bar = {\n                chart: {\n                    type: 'discreteBarChart',\n                    height: 450,\n                    margin : {\n                        top: 20,\n                        right: 20,\n                        bottom: 50,\n                        left: 55\n                    },\n                    x: function(d){return d.label;},\n                    y: function(d){return d.value;},\n                    showValues: true,\n                    valueFormat: function(d){\n                        return d3.format(',.4f')(d);\n                    },\n                    duration: 500,\n                    xAxis: {\n                        axisLabel: 'X Axis'\n                    },\n                    yAxis: {\n                        axisLabel: 'Y Axis',\n                        axisLabelDistance: -10\n                    }\n                }\n            };\n\n            var pie = {\n                chart: {\n                    type: 'pieChart',\n                    height: 450,\n                    donut: false,\n                    x: function(d){return d.label; },\n                    y: function(d){return d.value; },\n                    showLabels: false,\n                    pie: {\n                        startAngle: function(d) { return d.startAngle/2 -Math.PI/2 },\n                        endAngle: function(d) { return d.endAngle/2 -Math.PI/2 }\n                    },\n                    duration: 500\n                }\n            };\n\n            vm.chartOptions = bar;\n\n            vm.toolTipContentFunction = function(){\n                return function(key, x, y, e, graph) {\n                        return  'Super New Tooltip' +\n                        '<h1>' + key + '</h1>' +\n                        '<p>' +  y + ' at ' + x + '</p>'\n                }\n            }\n\n                \n\n            vm.xFunction = function(){\n                return function(d) {\n                    return d.label;\n                };\n            }\n            \n            vm.yFunction = function(){\n                return function(d) {\n                    return d.value;\n                };\n            }\n          \n        \n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_collections\").then(function(result){\n\n                vm.dataSources = result.data;\n                vm.dataSource = vm.dataSources[0];\n                \n                $scope.$watch(\"vm.dataSource\", function(){\n                    vm.dataDiseases = vm.dataSource.diseases;\n                    vm.dataDisease = vm.dataSource.diseases[0];\n\n                });\n                $scope.$watch(\"vm.dataDisease\", function(){\n                    vm.dataTables = vm.dataDisease.tables;\n                    vm.dataTable = vm.dataTables[0];\n                });\n                $scope.$watch(\"vm.dataTable\", function(){\n                    osApi.query(\"_field_detail\", {collection:vm.dataTable.collection}).then(function(result){\n                         vm.dataFields = result.data[0].fields.filter(function(field){ return field.key!=\"_id\"; });\n                         vm.dataField = vm.dataFields[0];\n                         console.dir(vm.dataField)\n                    });\n                });\n\n               osApi.setBusy(false);\n               \n            });\n            \n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohorts', cohorts);\n\n    /** @ngInject */\n    function cohorts() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohorts/cohorts.html',\n            controller: CohortsController,\n            scope:{\n                type:\"@\"\n            },\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortsController(osHistory, $state, $timeout) {\n\n            var vm = this;\n            vm.selection;\n            vm.selections;\n            \n            vm.close = function(){\n                angular.element(\".cohorts-\"+vm.type).hide();\n            }\n            vm.setSelection = function(item){\n                osHistory[\"set\"+vm.type+\"Selection\"](item);\n            };\n            var update = function(){\n                $timeout(function() {\n                    vm.selections = osHistory[\"get\"+vm.type+\"Selections\"]();\n                    vm.selection = osHistory[\"get\"+vm.type+\"Selection\"]();\n                    \n                });\n            };\n            \n            osHistory[\"on\"+vm.type+\"Add\"].add(function(){update(true)});            \n            osHistory[\"on\"+vm.type+\"SelectionChange\"].add(function(){update(false)});\n            \n            var isDragable = false;\n            var show = function(){\n                angular.element(\".cohorts-\"+vm.type).show();\n                if (isDragable) return;\n                isDragable = true;\n                angular.element(\".cohorts-\"+vm.type).draggable();\n\n            }            \n\n            // Keypress\n            angular.element(document).keypress(function(e) {\n                if (!e.ctrlKey) return;\n                if(vm.type==\"Gene\"){\n                    switch(e.keyCode){\n                        case 12: show(); break;\n                        case 39: osHistory.getGeneSelectionNext(); break;\n                        case 59: osHistory.getGeneSelectionLast(); break;\n                    }\n                }else{\n                    switch (e.keyCode)\n                    {\n                        case 16: show(); break;\n                        case 27: osHistory.getPatientSelectionLast(); break;\n                        case 29: osHistory.getPatientSelectionNext(); break;                \n                    }\n                }\n                \n            });\n        }\n    }\n})();\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .directive('osCohortBuilder', cohortBuilder);\n\n    /** @ngInject */\n    function cohortBuilder() {\n\n        var directive = {\n            restrict: 'E',\n            templateUrl: 'app/components/cohortbuilder/cohortbuilder.html',\n            controller: CohortBuilderController,\n            controllerAs: 'vm',\n            bindToController: true\n        };\n\n        return directive;\n\n        /** @ngInject */\n        function CohortBuilderController(osApi, $state, $timeout, $scope, $stateParams, _) {\n\n            if (angular.isUndefined($stateParams.datasource)){\n                $state.go(\"datasource\");\n                return;\n            }\n            // View Model\n            var vm = this;\n            vm.dataSources;\n            vm.dataSource;\n            vm.dataDiseases;\n            vm.dataDisease;\n            vm.dataTables;\n            vm.dataTable;\n            vm.dataFields;\n\n            vm.toolTipContentFunction = function(){\n                return function(key, x, y, e, graph) {\n                        return  'Super New Tooltip' +\n                        '<h1>' + key + '</h1>' +\n                        '<p>' +  y + ' at ' + x + '</p>'\n                }\n            }\n\n                \n\n            vm.xFunction = function(){\n                return function(d) {\n                    return d.label;\n                };\n            }\n            \n            vm.yFunction = function(){\n                return function(d) {\n                    return d.value;\n                };\n            }\n          \n\n            // Load Datasets\n            osApi.setBusy(true);\n            osApi.query(\"_collections\").then(function(result){\n                \n                // Transform DataSources\n                var data = result.data;\n                vm.dataSources = \n                    _.chain(data).pluck(\"source\").uniq().map(function(v){return { name:v,\n                        diseases:_.chain(data).where({source:v}).pluck(\"disease\").uniq().map(function(v){ \n                            return { name:v,\n                                tables: _.chain(data).where({source:\"tcga\",disease:v}).map(function(v){ \n                                    return {created:v.created, name:v.table, records:v.records, collection:v.collection}} ).value()\n                            };}).value()\n                    };}).value();\n                vm.dataSource = vm.dataSources[0];\n                \n                $scope.$watch(\"vm.dataSource\", function(){\n                    vm.dataDiseases = vm.dataSource.diseases;\n                    vm.dataDisease = vm.dataSource.diseases[0];\n\n                });\n                $scope.$watch(\"vm.dataDisease\", function(){\n                    vm.dataTables = vm.dataDisease.tables;\n                    vm.dataTable = vm.dataTables[0];\n                    \n                });\n                $scope.$watch(\"vm.dataTable\", function(){\n                    console.log(osApi.queryString(\"_stats\", {collection:vm.dataTable.collection}));\n                    osApi.query(\"_stats\", {collection:vm.dataTable.collection}).then(function(result){\n                        vm.dataFields = result.data[0].fields;\n                    });\n                });\n\n               osApi.setBusy(false);\n               \n            });\n            \n        }\n    }\n})();\n\n\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .run(runBlock);\n\n    /** @ngInject */\n    function runBlock($rootScope, $state, $window, $exceptionHandler, osApi) { //, $log\n\n        // Route Errors To Angular\n        $window.onerror = function handleGlobalError( message, fileName, lineNumber, columnNumber, error ) {\n            if ( ! error ) {\n                error = new Error( message );\n                error.fileName = fileName;\n                error.lineNumber = lineNumber;\n                error.columnNumber = ( columnNumber || 0 );\n            }\n            $exceptionHandler( error );\n        }\n        \n        // Actions To Take On State Change\n        var off = $rootScope.$on('$stateChangeStart', function(event, toState, toParams) {\n\n            // Hide Busy Cursor\n            osApi.setBusy(false);\n\n            // Reset DataTable Custom Filters\n            angular.element.fn.DataTable.ext.search = [];\n\n            // Route unauthenticated users to landing page\n            if (toState.authenticate && !osApi.getUserApi().getUser().authenticated) {\n                $state.transitionTo(\"landing\");\n                event.preventDefault();\n                return;\n            }\n\n            // Redirect If Unable To Resolve Data Source\n            if (toState.datasource && (angular.isUndefined(toParams.datasource) || toParams.datasource===\"\")){\n                $state.transitionTo(\"datasource\")\n                event.preventDefault();\n                return;\n            }else{\n                osApi.setDataSource(toParams.datasource);\n            }\n            \n            \n            \n            \n        });\n\n        $rootScope.$on('$destroy', off)\n    }\n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(routerConfig);\n\n    /** @ngInject */\n    function routerConfig($stateProvider, $urlRouterProvider) {\n\n\n        $stateProvider\n            .state('landing', {\n                url: '/',\n                template: '<os-landing>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('help', {\n                url: '/help',\n                template: '<os-help>',\n                authenticate: false,\n                datasource: false\n            })\n            .state('datasource', {\n                url: '/datasource',\n                template: '<os-datasource>',\n                authenticate: true,\n                datasource: false\n            })\n            .state('tools', {\n                url: '/tools/{datasource}',\n                template: '<os-tools>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('metadata', {\n                url: '/metadata/{datasource}',\n                template: '<os-metadata>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('history', {\n                url: '/history/{datasource}',\n                template: '<os-history>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('plsr', {\n                url: '/plsr/{datasource}',\n                template: '<os-plsr>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca', {\n                url: '/pca/{datasource}',\n                template: '<os-pca>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pca3d', {\n                url: '/pca3d/{datasource}',\n                template: '<os-pca3d>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('markers', {\n                url: '/markers/{datasource}',\n                template: '<os-markers>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('pathways', {\n                url: '/pathways/{datasource}',\n                template: '<os-pathways>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('timelines', {\n                url: '/timelines/{datasource}',\n                template: '<os-timelines>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('survival', {\n                url: '/survival/{datasource}',\n                template: '<os-survival>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('dataexplorer', {\n                url: '/dataexplorer/{datasource}',\n                template: '<os-data-explorer>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('oncoprint', {\n                url: '/oncoprint/{datasource}',\n                template: '<os-oncoprint>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('genesettest', {\n                url: '/genesettest/{datasource}',\n                template: '<os-genesettest>',\n                authenticate: true,\n                datasource: true\n            })\n            .state('cohortbuilder', {\n                url: '/cohortbuilder/{datasource}',\n                template: '<os-cohort-builder>',\n                authenticate: true,\n                datasource: true\n            })\n           \n\n        $urlRouterProvider.otherwise('/');\n    }\n\n})();\n\n/* global d3:false, $:false, signals:false, cytoscape:false, SockJS:false, document:false, moment:false, _:false, THREE:false */\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .constant('moment', moment)\n        .constant('d3', d3)\n        .constant('cytoscape', cytoscape)\n        .constant('signals', signals)\n        .constant('SockJS', SockJS)\n        .constant('THREE', THREE)\n        .constant('$', $)\n        .constant('_', _);\n\n    // Util Functions\n    Number.prototype.map = function (in_min, in_max, out_min, out_max) {\n        return (this - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n    }\n    \n    \n})();\n(function() {\n    'use strict';\n\n    angular\n        .module('oncoscape')\n        .config(config);\n\n    /** @ngInject */\n    function config($logProvider) {\n        // Enable log\n        $logProvider.debugEnabled(true);\n    }\n})();\n\nangular.module(\"oncoscape\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/cohortbuilder/cohortbuilder.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content cohortbuilider\\\"><div class=\\\"row\\\"></div></section></os-tray><section class=\\\"tray-content-block dataexplorer\\\"><div class=\\\"container-fluid\\\"><h2>Cohort Builder</h2><button>+</button> <button>-</button></div></section>\");\n$templateCache.put(\"app/components/cohorts/cohorts.html\",\"<div class=\\\"cohorts panel panel-default cohorts-{{vm.type}}\\\"><div class=\\\"panel-heading\\\">{{vm.type}} History <span class=\\\"pull-right fa fa-times\\\" ng-click=\\\"vm.close()\\\"></span></div><div class=\\\"panel-body cohorts-panel-body\\\"><table><tr ng-click=\\\"vm.setSelection(item)\\\" ng-repeat=\\\"item in vm.selections\\\" ng-class=\\\"{\\'cohort-selected\\' : item==vm.selection}\\\"><td>{{item.tool}}</td><td>{{item.desc}}</td><td>{{item.ids.length}}</td></tr></table></div></div>\");\n$templateCache.put(\"app/components/datasource/datasource.html\",\"<section class=\\\"datasource container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Data Sources</h1><p>Oncoscape has analyzed and curated the following datasets hosted by The Cancer Genome Atlas (TCGA). Raw data sets for these and other available disease sites can be found at <a href=\\\"https://tcga-data.nci.nih.gov/tcga/\\\">TCGA Data Portal</a>.</p></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"dataset in vm.datasets\\\" class=\\\"col-xs-12 col-sm-6 col-lg-4\\\" ng-click=\\\"vm.explore(\\'tools\\',dataset)\\\"><img class=\\\"datasource-img\\\" ng-src=\\\"/assets/images/datasets/{{dataset.img}}\\\"><h3 class=\\\"datasource-lbl\\\">{{dataset.name}} ({{dataset.source}})</h3><nobr><a href=\\\"\\\">Explore</a></nobr></li></ul></div></section>\");\n$templateCache.put(\"app/components/dataexplorer/dataexplorer.html\",\"<os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content dataexplorer\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Data Source</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Origin</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataSource.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataSources\\\" ng-click=\\\"vm.dataSource = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Disease</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataDisease.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataDiseases\\\" ng-click=\\\"vm.dataDisease = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Table</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataTable.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataTables\\\" ng-click=\\\"vm.dataTable = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Field</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.dataField.key}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.dataFields\\\" ng-click=\\\"vm.dataField = item\\\">{{item.key}}</li></ul></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Table Info</h2><dl><dt>Date Uploaded</dt><dd>{{vm.dataTable.created}}</dd><dt>Record Count</dt><dd>{{vm.dataTable.records}}</dd><dt>Field Count</dt><dd>{{vm.dataFields.length}}</dd></dl></div></div></section></os-tray><section class=\\\"tray-content-block dataexplorer\\\"><div class=\\\"container-fluid\\\"><h2>Data Explorer</h2><div ng-repeat=\\\"item in vm.dataFields\\\" class=\\\"data-field\\\"><b>{{item.key}}</b><div style=\\\"width:30%; margin-top:10px\\\">{{item.name}}. {{item.desc}}</div><nvd3 options=\\\"vm.chartOptions\\\" data=\\\"item.values\\\"></nvd3></div></div></section>\");\n$templateCache.put(\"app/components/footer/footer.html\",\"<footer class=\\\"footer container\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-sm-6\\\"><img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-fred-hutchinson-cancer-research-center.png\\\" alt=\\\"Fred Hutchinson Cancer Research Center\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-university-of-washington-medicine.png\\\" alt=\\\"UW Medicine\\\"> <img class=\\\"footer-logo\\\" src=\\\"/assets/images/logo-seattle-cancer-care-alliance.png\\\" alt=\\\"Seattle Cancer Care Alliance\\\"></div><div class=\\\"col-xm-12 col-sm-6 text-right\\\"><a href=\\\"https://www.facebook.com/STTRCancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-facebook-out.png\\\" alt=\\\"Facebook\\\"></a> <a href=\\\"https://twitter.com/sttrcancer\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-twitter-out.png\\\" alt=\\\"Twitter\\\"></a> <a href=\\\"https://plus.google.com/+fredhutch/videos\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-youtube-out.png\\\" alt=\\\"YouTube\\\"></a> <a href=\\\"http://instagram.com/FredHutch\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-instagram-out.png\\\" alt=\\\"Instagram\\\"></a> <a href=\\\"http://www.linkedin.com/company/fred-hutchinson-cancer-research-center/careers?trk=top_nav_careers\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-linkedin-out.png\\\" alt=\\\"LinkedIn\\\"></a> <a href=\\\"https://plus.google.com/116048577052683099154/posts\\\" target=\\\"_blank\\\"><img class=\\\"footer-icon\\\" src=\\\"/assets/images/sttr-google-out.png\\\" alt=\\\"Google+\\\"></a></div></div></footer>\");\n$templateCache.put(\"app/components/genesettest/genesettest.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><script src=\\\"https://cdn.plot.ly/plotly-latest.min.js\\\"></script><script src=\\\"/bower_components/highcharts/modules/heatmap.js\\\"></script><script src=\\\"/bower_components/highcharts/modules/exporting.js\\\"></script><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohort 1</label><p>{{vm.optCohort1}}</p></div><div class=\\\"col-sm-12 form-item\\\"><label>Patient Cohort 2</label><p>{{vm.optCohort2}}</p></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Gene Set Binomial Test</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"geneSetTestsModuleDiv\\\" class=\\\"genesettest\\\"><div id=\\\"geneSetTests_Div\\\"><div id=\\\"geneSetTestsControlsDiv\\\"><div class=\\\"navbar-collapse collapse navbar-inverse-collapse\\\"><div id=\\\"geneSetTestsInputsDiv\\\"><div id=\\\"geneSetTestsLaunchButtonDiv\\\"><form><div>{{vm.message}}</div><div id=\\\"heatMap\\\"></div></form></div></div></div></div></div></div></div></section>\");\n$templateCache.put(\"app/components/header/header.html\",\"<div class=\\\"header\\\"><nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\"><div class=\\\"container-fluid\\\"><div class=\\\"navbar-header\\\"><button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\"><span class=\\\"sr-only\\\">Toggle navigation</span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span> <span class=\\\"icon-bar\\\"></span></button> <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img alt=\\\"Brand\\\" src=\\\"/assets/images/logo.png\\\" style=\\\"max-height:50px;\\\"></a></div><div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\" ng-if=\\\"vm.showMenu\\\"><ul class=\\\"nav navbar-nav navbar-right\\\"><li><a href=\\\"#datasource\\\"><span class=\\\"glyphicon glyphicon-th\\\"></span>Data Sources</a></li><li><a href=\\\"\\\" ng-click=\\\"vm.logoutClick()\\\"><span class=\\\"glyphicon glyphicon-user\\\"></span>Logout</a></li></ul></div></div><div class=\\\"nav-divider\\\"></div></nav></div><a href=\\\"https://github.com/FredHutch/Oncoscape/labels/help%20wanted\\\" class=\\\"github\\\" tooltip=\\\"Submit Issues\\\" style=\\\"text-align: right;\\\"><div class=\\\"logo\\\"><svg aria-hidden=\\\"true\\\" class=\\\"octicon octicon-mark-github\\\" height=\\\"28\\\" role=\\\"img\\\" version=\\\"1.1\\\" viewbox=\\\"0 0 16 16\\\" width=\\\"28\\\"><path d=\\\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59 0.4 0.07 0.55-0.17 0.55-0.38 0-0.19-0.01-0.82-0.01-1.49-2.01 0.37-2.53-0.49-2.69-0.94-0.09-0.23-0.48-0.94-0.82-1.13-0.28-0.15-0.68-0.52-0.01-0.53 0.63-0.01 1.08 0.58 1.23 0.82 0.72 1.21 1.87 0.87 2.33 0.66 0.07-0.52 0.28-0.87 0.51-1.07-1.78-0.2-3.64-0.89-3.64-3.95 0-0.87 0.31-1.59 0.82-2.15-0.08-0.2-0.36-1.02 0.08-2.12 0 0 0.67-0.21 2.2 0.82 0.64-0.18 1.32-0.27 2-0.27 0.68 0 1.36 0.09 2 0.27 1.53-1.04 2.2-0.82 2.2-0.82 0.44 1.1 0.16 1.92 0.08 2.12 0.51 0.56 0.82 1.27 0.82 2.15 0 3.07-1.87 3.75-3.65 3.95 0.29 0.25 0.54 0.73 0.54 1.48 0 1.07-0.01 1.93-0.01 2.2 0 0.21 0.15 0.46 0.55 0.38C13.71 14.53 16 11.53 16 8 16 3.58 12.42 0 8 0z\\\"></path></svg></div></a>\");\n$templateCache.put(\"app/components/help/help.html\",\"<section class=\\\"tools container\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><br><br><br></div></div><div class=\\\"row\\\"><div class=\\\"col-xs-12 col-md-7\\\"><h2 style=\\\"margin:0px;margin-bottom: 20px;\\\">Now Playing &mdash; Lorum Ipsum</h2><div style=\\\"background-color:#000;text-align: center;\\\"><video width=\\\"640\\\" height=\\\"360\\\" controls=\\\"\\\" style=\\\"background-color: #000;max-width: 100%;\\\"></video></div><h2>Video Title</h2><p>Transcription At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat</p></div><div class=\\\"col-xs-12 col-md-5\\\" style=\\\"padding-left: 40px;\\\"><h2 style=\\\"margin:0px;\\\">Oncoscape Videos</h2><ul><li ng-repeat=\\\"video in vm.videos\\\" style=\\\"clear: both;\\\"><div style=\\\"width:30%;height:90px;background-color:#EEE;display:inline-block;float:left;margin-bottom: 20px;text-align: center;cursor: pointer;\\\"><span class=\\\"glyphicon glyphicon-play-circle\\\" style=\\\"font-size: 30px;padding-top:30px; color:#FFF\\\"></span></div><div style=\\\"width:69%;display: inline-block;float:left;padding-left: 10px;\\\"><h3 class=\\\"tools-lbl\\\" style=\\\"margin:0px;\\\">{{video.name}}</h3><p>{{video.desc}}</p><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\">Watch Video</a></div></li></ul></div></div></section>\");\n$templateCache.put(\"app/components/landing/landing.html\",\"<div class=\\\"landing container\\\"><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><h2>Bridging Cancer Research and Clinical Care</h2></div><div class=\\\"row\\\" style=\\\"padding-top:20px;\\\"><div class=\\\"col-sm-8\\\"><p>Oncoscape is developed at the Fred Hutchinson Cancer Research Center under the auspices of the Solid Tumor Translational Research initiative. Oncoscape is a web-based, menu-driven analysis and visualization platform for large-scale, heterogeneous clinical and molecular patient timeline data as exemplified by the Fred Hutch HIDRA database. Oncoscape vision and development is managed by a small team comprising: <a href=\\\"https://www.fredhutch.org/en/labs/profiles/holland-eric.html\\\">Eric Holland</a>, <a href=\\\"http://www.sttrcancer.org/en/contact-us/horse-grant-bio.html\\\">Desert Horse-Grant</a>, <a href=\\\"https://www.linkedin.com/in/lisa-mcferrin-9758b029\\\">Lisa McFerrin</a>, <a href=\\\"https://www.linkedin.com/in/hbolouri\\\">Hamid Bolouri</a>, <a href=\\\"https://www.linkedin.com/in/jenny-zhang-ba62a2104\\\">Jenny Zhang</a>, <a href=\\\"https://www.linkedin.com/in/gretchenh\\\">Gretchen Heinrich</a>, <a href=\\\"https://www.linkedin.com/in/robert-mcdermott-a77b9011\\\">Robert McDermott</a> and <a href=\\\"https://www.linkedin.com/in/zager\\\">Michael Zager</a>.</p><p class=\\\"\\\">Through its easy point-and-click browser interface, Oncoscape will become an essential tool for doctors and researchers interested in:</p><ul class=\\\"\\\"><li>Comparing patients or populations across an array of features, like genetic alterations (CNV, IHC, sequencing, expression) or clinical elements (treatment regimens, diagnostics, outcomes)</li><li>Defining cohorts based on selected traits – identifying “patients like me”</li><li>Aligning patient histories according to timeline events: diagnosis, treatment, progression, survival</li><li>Performing powerful and integrated statistical analysis: Principle Component Analysis, Partial least squares regression, Kaplan-Meier curves, enrichment scores</li><li>Creating high quality visualizations of molecular/clinical data</li></ul><p class=\\\"\\\">By providing a portal equipped with rich data, powerful statistics and a simple interface, Oncoscape not only empowers users to quickly answer questions themselves but also expedites the process of discovering novel patterns and relationships. This can lead to numerous possible findings, including optimized drug therapies for individual patients, identification of novel regulatory pathways, or even the need to reassess adherence strategies.</p></div><div class=\\\"col-sm-4\\\"><os-login></os-login></div></div></div>\");\n$templateCache.put(\"app/components/history/history.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.diagnosisMinValue\\\" model-min=\\\"vm.diagnosisMin\\\" max=\\\"vm.diagnosisMaxValue\\\" model-max=\\\"vm.diagnosisMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Diagnosis\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMin\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMax\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.applyFilter(\\'Survival\\')\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div></div><div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Data</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource.name}} {{vm.datasource.source}}</h3><table id=\\\"history-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"></table></div></section>\");\n$templateCache.put(\"app/components/loader/loader.html\",\"<div class=\\\"loader-modal\\\"><div class=\\\"loader\\\"><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__bar\\\"></div><div class=\\\"loader__ball\\\"></div></div></div>\");\n$templateCache.put(\"app/components/login/login.html\",\"<form class=\\\"login\\\"><h3 class=\\\"login-header\\\">Login</h3><div class=\\\"login-body\\\"><div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" ng-show=\\\"vm.hasError\\\"><span class=\\\"glyphicon glyphicon-exclamation-sign\\\" aria-hidden=\\\"true\\\"></span> <span class=\\\"sr-only\\\">Error:</span> Invalid Credentials</div><fieldset class=\\\"form-group\\\"><span for=\\\"domain\\\" class=\\\"small\\\">Affiliation</span><select id=\\\"domain\\\" class=\\\"form-control\\\" ng-options=\\\"option.name for option in vm.domains track by option.name\\\" ng-model=\\\"vm.user.domain\\\"></select></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"username\\\">Username</span> <input id=\\\"username\\\" class=\\\"form-control input-sm\\\" type=\\\"text\\\" placeholder=\\\"Username\\\" ng-model=\\\"vm.user.name\\\"></fieldset><fieldset class=\\\"form-group\\\" ng-show=\\\"vm.user.domain.name!=\\'Guest\\'\\\"><span class=\\\"form-control-label small\\\" for=\\\"password\\\">Password</span> <input id=\\\"password\\\" class=\\\"form-control\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" ng-model=\\\"vm.user.password\\\"></fieldset><button class=\\\"btn btn-default\\\" ng-click=\\\"vm.login()\\\">Login</button></div></form>\");\n$templateCache.put(\"app/components/markers/markers.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize()\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><br><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\" placeholder=\\\"Genes or Patients\\\"></div><div class=\\\"col-xs-12 form-item\\\"><label>Interactive Mode</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optInteractiveMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optInteractiveModes\\\" ng-click=\\\"vm.optInteractiveMode=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Global</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.invertAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Invert Selections\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.deselectAll()\\\" style=\\\"width:33.333%\\\" title=\\\"Deselect All\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.hideAllEdges()\\\" style=\\\"width:33.333%\\\" title=\\\"Hide All Edges\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Zoom</label><div class=\\\"btn-group\\\" role=\\\"group\\\" style=\\\"display: block\\\"><button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomReset()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Reset\\\">Reset</button> <button class=\\\"btn btn-default btn-no-focus\\\" type=\\\"button\\\" ng-click=\\\"vm.optCommands.zoomFit()\\\" style=\\\"width:50%; font-weight: 300;\\\" title=\\\"Zoom Selection\\\">Fit</button></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Patients</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Genes\\\" ng-click=\\\"vm.optCommands.selectConnectedGenes()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Patient Selection\\\" ng-click=\\\"vm.optCommands.invertPatientSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Patients\\\" ng-click=\\\"vm.optCommands.selectPatients()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Patients\\\" ng-click=\\\"vm.optCommands.deselectPatients()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Patient Edges\\\" ng-click=\\\"vm.optCommands.showPatientEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Edges\\\" ng-click=\\\"vm.optCommands.hidePatientEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showGenesInCommon()\\\">Select Genes In Common</li></ul></div></div></div><div class=\\\"col-xs-12 form-item\\\" ng-if=\\\"vm.optInteractiveMode.name==\\'Commands\\'\\\"><label>Genes</label><br><div class=\\\"btn-group btn-group-md\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select Connected Patients\\\" ng-click=\\\"vm.optCommands.selectConnectedPatients()\\\"><span class=\\\"fa fa-code-fork\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Invert Gene Selection\\\" ng-click=\\\"vm.optCommands.invertGeneSelection()\\\"><span class=\\\"fa fa-random\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Select All Genes\\\" ng-click=\\\"vm.optCommands.selectGenes()\\\"><span class=\\\"fa fa-dot-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Deselect Genes\\\" ng-click=\\\"vm.optCommands.deselectGenes()\\\"><span class=\\\"fa fa-circle-o\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Show Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.showGeneEdges()\\\"><span class=\\\"fa fa-link\\\" aria-hidden=\\\"true\\\"></span></button> <button type=\\\"button\\\" class=\\\"btn btn-default btn-no-focus\\\" title=\\\"Hide Selected Gene Edges\\\" ng-click=\\\"vm.optCommands.hideGeneEdges()\\\"><span class=\\\"fa fa-unlink\\\" aria-hidden=\\\"true\\\"></span></button><div class=\\\"btn-group\\\" role=\\\"group\\\"><button type=\\\"button\\\" class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" title=\\\"More Options\\\"><span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu pull-right\\\"><li ng-click=\\\"vm.optCommand.showPatientsInCommon()\\\">Select Patients In Common</li></ul></div></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Data Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optGeneSet.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optGeneSets\\\" ng-click=\\\"vm.optGeneSet=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-right:5px\\\"><label>Patient Layout</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optPatientLayout.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optPatientLayouts\\\" ng-click=\\\"vm.optPatientLayout=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-6 form-item\\\" style=\\\"padding-left:5px\\\"><label>Patient Color</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optNodeColor.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optNodeColors\\\" ng-click=\\\"vm.optNodeColor=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Patient Options</label><div ng-repeat=\\\"item in vm.legandNodes\\\" class=\\\"legend-bar btn btn-default filter-button\\\" style=\\\"border-color:{{item.color}};position:relative\\\">{{item.name}} ({{item.cnt}} Selected)<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, true); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};border-color:red;\\\"></div><div class=\\\"markers-button-slider-circle\\\" ng-click=\\\"vm.updateNode(item, false); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div></div></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Edge Options</label><div ng-repeat=\\\"item in vm.optEdgeColors\\\" class=\\\"legend-bar btn btn-default filter-button {{item.class}}\\\" style=\\\"position:relative\\\">{{item.name}}<div class=\\\"markers-button-slider\\\"><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Highlight\\'); $event.stopPropagation();\\\" style=\\\"background-color:{{item.color}};\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Show\\'); $event.stopPropagation();\\\" style=\\\"background-color:#3993fa\\\"></div><div class=\\\"markers-button-slider-rect\\\" ng-click=\\\"vm.updateEdge(item, \\'Hide\\'); $event.stopPropagation();\\\" style=\\\"background-color:#FFF\\\"></div></div></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div id=\\\"markers-chart\\\" class=\\\"markers-chart\\\"></div><div style=\\\"position:absolute;top:10px;left:50px;\\\"><h2 class=\\\"h2-tool\\\">Patients + Markers</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource.name}} {{vm.datasource.source}}</h3></div></section><ul id=\\\"gene-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxGeneShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandGene\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><ul id=\\\"patient-ctx-menu\\\" class=\\\"dropdown-menu markers-ctx-menu\\\" role=\\\"menu\\\" ng-show=\\\"vm.optCtxPatientShow\\\"><li class=\\\"title\\\"></li><li ng-repeat=\\\"item in vm.optCommandPatient\\\" ng-click=\\\"item.cmd()\\\">{{item.name}}</li></ul><section ng-show=\\\"vm.gene\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.gene.name}}</li><li>CnGain.1: {{vm.gene.cng1}}</li><li>CnGain.2: {{vm.gene.cng2}}</li><li>CnLoss.1: {{vm.gene.cnl1}}</li><li>CnLoss.2: {{vm.gene.cnl2}}</li></ul></div></div></section><section ng-show=\\\"vm.patient\\\" class=\\\"container-fluid\\\" style=\\\"position:absolute;bottom:0px;margin-right: 300px;z-index: 999;pointer-events: none;\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 legend\\\" style=\\\"background-color: rgba(255,255,255,.8)\\\"><ul style=\\\"float:left;\\\"><li class=\\\"legend-section\\\">{{vm.patient[0][0]}}</li><li>GENDER: {{vm.patient[0][2]}}</li><li>STATUS: {{vm.patient[0][6]}}</li><li>DIAGNOSED: {{vm.patient[0][4]}} years old</li><li>SURVIVED: {{vm.patient[0][3]}} years</li><li>PROGRESSION: {{vm.patient[0][5]}}</li></ul></div></div></section>\");\n$templateCache.put(\"app/components/metadata/metadata.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><os-tray caption=\\\"Patients\\\" content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Search</h2></div><div class=\\\"col-xs-12 form-item\\\"><input type=\\\"text\\\" class=\\\"ngrs-range-slider ngrs-range-slider-no-pad\\\" style=\\\"width:100%\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Information</h2><label>Raw data was provided by <a href=\\\"http://cancergenome.nih.gov/\\\">The Cancer Genome Atlas</a>. Processing of data was conducted by the <a href=\\\"http://www.sttrcancer.org/en.html\\\">Solid Tumor Translational Research Organization</a> in conjuntion with the <a href=\\\"http://www.fhcrc.org\\\">Fred Hutchinson Cancer Research Center</a>, <a href=\\\"http://www.uwmedicine.org/\\\">UW Medicine</a> and <a href=\\\"http://www.scca.org\\\">The Seattle Cancer Care Alliance</a>.</label></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">{{vm.dataset}} Metadata</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><table id=\\\"metadata-datatable\\\" class=\\\"table table-striped table-bordered dt-responsive nowrap\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"><thead><tr><th ng-repeat=\\\"col in vm.colnames\\\">{{col}}</th></tr></thead><tbody><tr ng-repeat=\\\"row in vm.rows\\\"><td ng-repeat=\\\"datum in row track by $index\\\">{{datum}}</td></tr></tbody></table></div></section>\");\n$templateCache.put(\"app/components/oncoprint/oncoprint.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Cohorts</h2></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend\\\"></span> <span class=\\\"oncoprint-label-col1\\\" id=\\\"legend\\\"></span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><div id=\\\"oncoprintDiv\\\" class=\\\"oncoprint\\\"><div id=\\\"oncoprintInstructions\\\" style=\\\"font-size:150%\\\">Please select and send up to 350 genes and patients from another tab, such as Markers and Patients, to populate the display.</div><div id=\\\"oncoprintErrorSection\\\" style=\\\"font-size:150%\\\" ng-show=\\\"vm.errorMessage!=\\'\\'\\\">{{vm.errorMessage}}</div><div id=\\\"oncoprintControlsDiv\\\"><div id=\\\"onc\\\"></div><button id=\\\"toggle_whitespace\\\">Toggle Whitespace</button> <button id=\\\"reduce_cell_width\\\">Reduce Cell Width</button></div></div></div></section>\");\n$templateCache.put(\"app/components/pathways/pathways.html\",\"<os-tool-menu></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: green\\\">Activation</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: red\\\">Inhibition</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347B\\\">Modification</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #056ce1\\\">Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Pathways</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource.name}} {{vm.datasource.source}}</h3><div id=\\\"gbm-chart\\\" class=\\\"pathways-chart\\\"></div></div></section><div class=\\\"modal fade pathways\\\" id=\\\"gbm-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/pca/pca.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Search</label> <input type=\\\"text\\\" class=\\\"ngrs-range-slider\\\" style=\\\"width: 100%;\\\" ng-model=\\\"vm.search\\\"></div><div class=\\\"col-xs-6 form-label\\\"><h2>Legend</h2><span class=\\\"circle\\\" style=\\\"background-color:black;width:10px;height: 10px;margin-right:10px;\\\"></span>Patients</div><div class=\\\"col-xs-6 form-label\\\"><h2>Variance</h2>PC1: {{vm.pc1}}%<br>PC2: {{vm.pc2}}%</div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Principal Component Analysis</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"pca-chart\\\" class=\\\"pca\\\"></div></div></section>\");\n$templateCache.put(\"app/components/pca3d/pca3d.html\",\"<section id=\\\"pca-chart\\\" class=\\\"pca container-fluid\\\" style=\\\"position: absolute;left:0px;top:0px;right: 0px;bottom: 0px;padding:0px;margin:0px;overflow: hidden;\\\"></section>\");\n$templateCache.put(\"app/components/subnav/subnav.html\",\"<div class=\\\"subnav\\\"><div class=\\\"btn-group\\\" style=\\\"float:right\\\"><button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.toolsClick()\\\">Analysis Tools</button> <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" ng-click=\\\"vm.cohortClick()\\\">Cohorts</button></div><h2>{{vm.tool}} &mdash; {{vm.filter}}</h2></div>\");\n$templateCache.put(\"app/components/plsr/plsr.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortGene()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Filters</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Gene Set</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.geneSet}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\"><li ng-repeat=\\\"item in vm.geneSets\\\" ng-click=\\\"vm.geneSet=item\\\">{{item}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Age At Diagnosis</label><div range-slider=\\\"\\\" min=\\\"vm.deathMinValue\\\" model-min=\\\"vm.deathMinFilter\\\" max=\\\"vm.deathMaxValue\\\" model-max=\\\"vm.deathMaxFilter\\\" prevent-equal-min-max=\\\"true\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Survival</label><div range-slider=\\\"\\\" min=\\\"vm.survivalMinValue\\\" model-min=\\\"vm.survivalMinFilter\\\" max=\\\"vm.survivalMaxValue\\\" model-max=\\\"vm.survivalMaxFilter\\\" prevent-equal-min-max=\\\"\\\" show-values=\\\"true\\\" attach-handle-values=\\\"true\\\" on-handle-up=\\\"vm.update()\\\"></div></div><div class=\\\"col-xs-12 form-label\\\"><h2>Legend</h2><span class=\\\"legend-bar\\\" style=\\\"border-color: #1396de\\\">Age At Diagnosis</span> <span class=\\\"legend-bar\\\" style=\\\"border-color: #38347b\\\">Survial</span> <span class=\\\"legend\\\"><span class=\\\"legend-dot\\\" style=\\\"background-color:#000\\\"></span>Genes</span></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Partial Least Squares Regression</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"plsr-chart\\\" class=\\\"plsr\\\"></div></div></section><div class=\\\"modal fade plsr-webpage\\\" id=\\\"plsr-webpage\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\"><div class=\\\"modal-dialog\\\" role=\\\"document\\\"><div class=\\\"modal-content\\\"><div class=\\\"modal-header\\\"><button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button><h4 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">{{vm.tip}}</h4></div><iframe class=\\\"modal-iframe\\\" ng-src=\\\"{{vm.frame}}\\\"></iframe></div></div></div>\");\n$templateCache.put(\"app/components/survival/survival.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\"></os-tool-menu><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Patient Survival</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div style=\\\"text-align: center;\\\"><img id=\\\"survival-img\\\" style=\\\"width:100%; height: auto; margin:auto;\\\"></div></div></section>\");\n$templateCache.put(\"app/components/timelines/timelines.html\",\"<os-tool-menu datasource=\\\"{{vm.datasource}}\\\" change=\\\"vm.addCohortPatient()\\\"></os-tool-menu><os-tray content=\\\"tray-content-block\\\" change=\\\"vm.resize($event)\\\"><section class=\\\"tray-content\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Options</h2></div><div class=\\\"col-xs-12 form-item\\\"><label>Align By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.align.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.events\\\" ng-click=\\\"vm.align = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Order By</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.sort.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.features\\\" ng-click=\\\"vm.sort = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Filter</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.filter.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.filters\\\" ng-click=\\\"vm.filter = item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Timescale</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.timescale.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.timescales\\\" ng-click=\\\"vm.timescale=item\\\">{{item.name}}</li></ul></div></div><div class=\\\"col-xs-12 form-item\\\"><label>Event Colors</label> <span ng-repeat=\\\"item in vm.events\\\" class=\\\"legend-bar btn btn-default filter-button {{item.color}}\\\" ng-style=\\\"{\\'border-color\\':item.color}\\\" ng-click=\\\"vm.updateEventColor(item); $event.stopPropagation();\\\">{{item.name}} ({{item.selected ? \\'Visible\\' : \\'Hidden\\'}})</span></div><div class=\\\"col-xs-12 form-item\\\"><label>Selected Patients Display</label><div class=\\\"dropdown bs-dropdown\\\"><button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">{{vm.optCohortMode.name}} <span class=\\\"caret\\\"></span></button><ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\" style=\\\"width:100%\\\"><li ng-repeat=\\\"item in vm.optCohortModes\\\" ng-click=\\\"vm.optCohortMode=item\\\">{{item.name}}</li></ul></div></div></div></section></os-tray><section class=\\\"tray-content-block\\\"><div class=\\\"container-fluid\\\"><h2 class=\\\"h2-tool\\\">Timelines</h2><h3 class=\\\"h3-datasource\\\">{{vm.datasource}}</h3><div id=\\\"timelines-chart\\\"></div></div><div class=\\\"timeline-hover\\\" ng-if=\\\"vm.selShow\\\"><dl><dt>Event</dt><dd>{{vm.selEvent}}</dd></dl><dl><dt>Patient Id</dt><dd>{{vm.selPatient}}</dd></dl><dl ng-repeat=\\\"item in vm.selFields\\\"><dt>{{item.name}}</dt><dd>{{item.value}}</dd></dl></div></section>\");\n$templateCache.put(\"app/components/toolmenu/toolmenu.html\",\"<div><label class=\\\"tray-label tray-label-left\\\">Tools</label><section class=\\\"tool-menu tray tray-collapsed-left\\\"><div class=\\\"row\\\"><div class=\\\"col-xs-12 form-label\\\"><h2>Tools</h2></div></div><div class=\\\"row tool-menu-row\\\" ng-repeat=\\\"tool in vm.tools\\\"><a href=\\\"\\\" ng-click=\\\"vm.explore(tool.route)\\\"><img class=\\\"tool-menu-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"> <span class=\\\"tool-menu-lbl\\\">{{tool.name}}</span> <span class=\\\"tool-menu-beta\\\" ng-if=\\\"tool.beta\\\" style=\\\"color:red\\\">(Beta)</span></a></div></section></div>\");\n$templateCache.put(\"app/components/tools/tools.html\",\"<section class=\\\"tools container-fluid\\\"><div class=\\\"row\\\"><div class=\\\"col-sm-8 col-md-6\\\"><h1>Analysis Tools</h1></div></div><div class=\\\"row\\\"><ul><li ng-repeat=\\\"tool in vm.tools\\\" class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3\\\" ng-click=\\\"vm.explore(tool.route, vm.datasource)\\\"><img class=\\\"tools-img\\\" ng-src=\\\"/assets/images/datasets/{{tool.img}}\\\"><div class=\\\"tools-copy\\\"><h3 class=\\\"tools-lbl\\\">{{tool.name}}</h3><a href=\\\"\\\">Explore</a></div></li></ul></div></section>\");\n$templateCache.put(\"app/components/tray/tray.html\",\"<div><label class=\\\"tray-label tray-label-right\\\">Options</label><div class=\\\"tray {{vm.trayClass}} tray-right\\\" locked=\\\"true\\\"><ng-transclude></ng-transclude><i class=\\\"fa fa-lock tray-sticky-icon {{vm.iconClass}}\\\" ng-click=\\\"vm.toggle()\\\"></i></div></div>\");}]);"],"sourceRoot":"/source/"}